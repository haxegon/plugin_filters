// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_lime__backend_native_NativeCFFI
#include <lime/_backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_media_openal_AL
#include <lime/media/openal/AL.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_274_removeDirectFilter,"lime.media.openal.AL","removeDirectFilter",0x2587a552,"lime.media.openal.AL.removeDirectFilter","lime/media/openal/AL.hx",274,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_280_removeSend,"lime.media.openal.AL","removeSend",0xba6595d9,"lime.media.openal.AL.removeSend","lime/media/openal/AL.hx",280,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_286_auxf,"lime.media.openal.AL","auxf",0xb166a14f,"lime.media.openal.AL.auxf","lime/media/openal/AL.hx",286,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_293_auxfv,"lime.media.openal.AL","auxfv",0x88668447,"lime.media.openal.AL.auxfv","lime/media/openal/AL.hx",293,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_300_auxi,"lime.media.openal.AL","auxi",0xb166a152,"lime.media.openal.AL.auxi","lime/media/openal/AL.hx",300,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_307_auxiv,"lime.media.openal.AL","auxiv",0x886686e4,"lime.media.openal.AL.auxiv","lime/media/openal/AL.hx",307,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_315_bufferData,"lime.media.openal.AL","bufferData",0x84698d77,"lime.media.openal.AL.bufferData","lime/media/openal/AL.hx",315,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_324_buffer3f,"lime.media.openal.AL","buffer3f",0xa65222c0,"lime.media.openal.AL.buffer3f","lime/media/openal/AL.hx",324,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_333_buffer3i,"lime.media.openal.AL","buffer3i",0xa65222c3,"lime.media.openal.AL.buffer3i","lime/media/openal/AL.hx",333,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_342_bufferf,"lime.media.openal.AL","bufferf",0x1e97e719,"lime.media.openal.AL.bufferf","lime/media/openal/AL.hx",342,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_351_bufferfv,"lime.media.openal.AL","bufferfv",0xa6524f3d,"lime.media.openal.AL.bufferfv","lime/media/openal/AL.hx",351,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_360_bufferi,"lime.media.openal.AL","bufferi",0x1e97e71c,"lime.media.openal.AL.bufferi","lime/media/openal/AL.hx",360,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_369_bufferiv,"lime.media.openal.AL","bufferiv",0xa65251da,"lime.media.openal.AL.bufferiv","lime/media/openal/AL.hx",369,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_377_createAux,"lime.media.openal.AL","createAux",0x79fdaddb,"lime.media.openal.AL.createAux","lime/media/openal/AL.hx",377,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_387_createBuffer,"lime.media.openal.AL","createBuffer",0x67917089,"lime.media.openal.AL.createBuffer","lime/media/openal/AL.hx",387,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_396_createEffect,"lime.media.openal.AL","createEffect",0xf7a00e1a,"lime.media.openal.AL.createEffect","lime/media/openal/AL.hx",396,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_405_createFilter,"lime.media.openal.AL","createFilter",0x1c31d341,"lime.media.openal.AL.createFilter","lime/media/openal/AL.hx",405,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_416_createSource,"lime.media.openal.AL","createSource",0xc92e6464,"lime.media.openal.AL.createSource","lime/media/openal/AL.hx",416,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_427_deleteBuffer,"lime.media.openal.AL","deleteBuffer",0xabd456f8,"lime.media.openal.AL.deleteBuffer","lime/media/openal/AL.hx",427,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_436_deleteBuffers,"lime.media.openal.AL","deleteBuffers",0xadf7c27b,"lime.media.openal.AL.deleteBuffers","lime/media/openal/AL.hx",436,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_445_deleteSource,"lime.media.openal.AL","deleteSource",0x0d714ad3,"lime.media.openal.AL.deleteSource","lime/media/openal/AL.hx",445,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_454_deleteSources,"lime.media.openal.AL","deleteSources",0xb5b02e40,"lime.media.openal.AL.deleteSources","lime/media/openal/AL.hx",454,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_463_disable,"lime.media.openal.AL","disable",0x1e5fad9b,"lime.media.openal.AL.disable","lime/media/openal/AL.hx",463,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_472_distanceModel,"lime.media.openal.AL","distanceModel",0x71becc27,"lime.media.openal.AL.distanceModel","lime/media/openal/AL.hx",472,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_481_dopplerFactor,"lime.media.openal.AL","dopplerFactor",0x0ce2b9d0,"lime.media.openal.AL.dopplerFactor","lime/media/openal/AL.hx",481,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_490_dopplerVelocity,"lime.media.openal.AL","dopplerVelocity",0x001e255e,"lime.media.openal.AL.dopplerVelocity","lime/media/openal/AL.hx",490,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_498_effectf,"lime.media.openal.AL","effectf",0x9b532868,"lime.media.openal.AL.effectf","lime/media/openal/AL.hx",498,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_505_effectfv,"lime.media.openal.AL","effectfv",0x4d70330e,"lime.media.openal.AL.effectfv","lime/media/openal/AL.hx",505,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_512_effecti,"lime.media.openal.AL","effecti",0x9b53286b,"lime.media.openal.AL.effecti","lime/media/openal/AL.hx",512,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_519_effectiv,"lime.media.openal.AL","effectiv",0x4d7035ab,"lime.media.openal.AL.effectiv","lime/media/openal/AL.hx",519,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_527_enable,"lime.media.openal.AL","enable",0x53b5a230,"lime.media.openal.AL.enable","lime/media/openal/AL.hx",527,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_536_genSource,"lime.media.openal.AL","genSource",0xe52d47fe,"lime.media.openal.AL.genSource","lime/media/openal/AL.hx",536,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_547_genSources,"lime.media.openal.AL","genSources",0xa271b6b5,"lime.media.openal.AL.genSources","lime/media/openal/AL.hx",547,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_558_genBuffer,"lime.media.openal.AL","genBuffer",0x83905423,"lime.media.openal.AL.genBuffer","lime/media/openal/AL.hx",558,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_569_genBuffers,"lime.media.openal.AL","genBuffers",0x9ab94af0,"lime.media.openal.AL.genBuffers","lime/media/openal/AL.hx",569,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_580_getBoolean,"lime.media.openal.AL","getBoolean",0xbe563edf,"lime.media.openal.AL.getBoolean","lime/media/openal/AL.hx",580,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_591_getBooleanv,"lime.media.openal.AL","getBooleanv",0xcd20c4b7,"lime.media.openal.AL.getBooleanv","lime/media/openal/AL.hx",591,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_602_getBuffer3f,"lime.media.openal.AL","getBuffer3f",0xb91085bc,"lime.media.openal.AL.getBuffer3f","lime/media/openal/AL.hx",602,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_613_getBuffer3i,"lime.media.openal.AL","getBuffer3i",0xb91085bf,"lime.media.openal.AL.getBuffer3i","lime/media/openal/AL.hx",613,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_624_getBufferf,"lime.media.openal.AL","getBufferf",0xf1e7f79d,"lime.media.openal.AL.getBufferf","lime/media/openal/AL.hx",624,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_635_getBufferfv,"lime.media.openal.AL","getBufferfv",0xb910b239,"lime.media.openal.AL.getBufferfv","lime/media/openal/AL.hx",635,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_646_getBufferi,"lime.media.openal.AL","getBufferi",0xf1e7f7a0,"lime.media.openal.AL.getBufferi","lime/media/openal/AL.hx",646,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_657_getBufferiv,"lime.media.openal.AL","getBufferiv",0xb910b4d6,"lime.media.openal.AL.getBufferiv","lime/media/openal/AL.hx",657,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_668_getDouble,"lime.media.openal.AL","getDouble",0xdf478aba,"lime.media.openal.AL.getDouble","lime/media/openal/AL.hx",668,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_679_getDoublev,"lime.media.openal.AL","getDoublev",0x7f51d87c,"lime.media.openal.AL.getDoublev","lime/media/openal/AL.hx",679,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_690_getEnumValue,"lime.media.openal.AL","getEnumValue",0xac0510a7,"lime.media.openal.AL.getEnumValue","lime/media/openal/AL.hx",690,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_701_getError,"lime.media.openal.AL","getError",0xcc54d43f,"lime.media.openal.AL.getError","lime/media/openal/AL.hx",701,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_711_getErrorString,"lime.media.openal.AL","getErrorString",0x0b38aa70,"lime.media.openal.AL.getErrorString","lime/media/openal/AL.hx",711,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_727_getFilteri,"lime.media.openal.AL","getFilteri",0x499df5e8,"lime.media.openal.AL.getFilteri","lime/media/openal/AL.hx",727,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_737_getFloat,"lime.media.openal.AL","getFloat",0x5bc1ce13,"lime.media.openal.AL.getFloat","lime/media/openal/AL.hx",737,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_748_getFloatv,"lime.media.openal.AL","getFloatv",0xedd28303,"lime.media.openal.AL.getFloatv","lime/media/openal/AL.hx",748,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_759_getInteger,"lime.media.openal.AL","getInteger",0x577311f5,"lime.media.openal.AL.getInteger","lime/media/openal/AL.hx",759,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_770_getIntegerv,"lime.media.openal.AL","getIntegerv",0x2d3ca4e1,"lime.media.openal.AL.getIntegerv","lime/media/openal/AL.hx",770,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_781_getListener3f,"lime.media.openal.AL","getListener3f",0x235a1a70,"lime.media.openal.AL.getListener3f","lime/media/openal/AL.hx",781,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_792_getListener3i,"lime.media.openal.AL","getListener3i",0x235a1a73,"lime.media.openal.AL.getListener3i","lime/media/openal/AL.hx",792,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_803_getListenerf,"lime.media.openal.AL","getListenerf",0x778c7569,"lime.media.openal.AL.getListenerf","lime/media/openal/AL.hx",803,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_814_getListenerfv,"lime.media.openal.AL","getListenerfv",0x235a46ed,"lime.media.openal.AL.getListenerfv","lime/media/openal/AL.hx",814,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_825_getListeneri,"lime.media.openal.AL","getListeneri",0x778c756c,"lime.media.openal.AL.getListeneri","lime/media/openal/AL.hx",825,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_836_getListeneriv,"lime.media.openal.AL","getListeneriv",0x235a498a,"lime.media.openal.AL.getListeneriv","lime/media/openal/AL.hx",836,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_847_getParameter,"lime.media.openal.AL","getParameter",0xccae45a0,"lime.media.openal.AL.getParameter","lime/media/openal/AL.hx",847,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_855_getProcAddress,"lime.media.openal.AL","getProcAddress",0x0d9ecc75,"lime.media.openal.AL.getProcAddress","lime/media/openal/AL.hx",855,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_866_getSource3f,"lime.media.openal.AL","getSource3f",0x72b66657,"lime.media.openal.AL.getSource3f","lime/media/openal/AL.hx",866,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_877_getSourcef,"lime.media.openal.AL","getSourcef",0xf9a06362,"lime.media.openal.AL.getSourcef","lime/media/openal/AL.hx",877,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_888_getSource3i,"lime.media.openal.AL","getSource3i",0x72b6665a,"lime.media.openal.AL.getSource3i","lime/media/openal/AL.hx",888,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_899_getSourcefv,"lime.media.openal.AL","getSourcefv",0x72b692d4,"lime.media.openal.AL.getSourcefv","lime/media/openal/AL.hx",899,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_910_getSourcei,"lime.media.openal.AL","getSourcei",0xf9a06365,"lime.media.openal.AL.getSourcei","lime/media/openal/AL.hx",910,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_921_getSourceiv,"lime.media.openal.AL","getSourceiv",0x72b69571,"lime.media.openal.AL.getSourceiv","lime/media/openal/AL.hx",921,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_932_getString,"lime.media.openal.AL","getString",0xbdac887a,"lime.media.openal.AL.getString","lime/media/openal/AL.hx",932,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_943_isBuffer,"lime.media.openal.AL","isBuffer",0x22525177,"lime.media.openal.AL.isBuffer","lime/media/openal/AL.hx",943,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_954_isEnabled,"lime.media.openal.AL","isEnabled",0xb255582a,"lime.media.openal.AL.isEnabled","lime/media/openal/AL.hx",954,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_965_isExtensionPresent,"lime.media.openal.AL","isExtensionPresent",0x790e3c73,"lime.media.openal.AL.isExtensionPresent","lime/media/openal/AL.hx",965,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_976_isAux,"lime.media.openal.AL","isAux",0x221f0c2d,"lime.media.openal.AL.isAux","lime/media/openal/AL.hx",976,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_987_isEffect,"lime.media.openal.AL","isEffect",0xb260ef08,"lime.media.openal.AL.isEffect","lime/media/openal/AL.hx",987,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_998_isFilter,"lime.media.openal.AL","isFilter",0xd6f2b42f,"lime.media.openal.AL.isFilter","lime/media/openal/AL.hx",998,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1009_isSource,"lime.media.openal.AL","isSource",0x83ef4552,"lime.media.openal.AL.isSource","lime/media/openal/AL.hx",1009,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1020_listener3f,"lime.media.openal.AL","listener3f",0x1a000074,"lime.media.openal.AL.listener3f","lime/media/openal/AL.hx",1020,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1029_listener3i,"lime.media.openal.AL","listener3i",0x1a000077,"lime.media.openal.AL.listener3i","lime/media/openal/AL.hx",1029,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1038_listenerf,"lime.media.openal.AL","listenerf",0x23b43be5,"lime.media.openal.AL.listenerf","lime/media/openal/AL.hx",1038,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1047_listenerfv,"lime.media.openal.AL","listenerfv",0x1a002cf1,"lime.media.openal.AL.listenerfv","lime/media/openal/AL.hx",1047,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1056_listeneri,"lime.media.openal.AL","listeneri",0x23b43be8,"lime.media.openal.AL.listeneri","lime/media/openal/AL.hx",1056,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1065_listeneriv,"lime.media.openal.AL","listeneriv",0x1a002f8e,"lime.media.openal.AL.listeneriv","lime/media/openal/AL.hx",1065,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1074_source3f,"lime.media.openal.AL","source3f",0x5ff8035b,"lime.media.openal.AL.source3f","lime/media/openal/AL.hx",1074,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1083_source3i,"lime.media.openal.AL","source3i",0x5ff8035e,"lime.media.openal.AL.source3i","lime/media/openal/AL.hx",1083,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1092_sourcef,"lime.media.openal.AL","sourcef",0x265052de,"lime.media.openal.AL.sourcef","lime/media/openal/AL.hx",1092,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1101_sourcefv,"lime.media.openal.AL","sourcefv",0x5ff82fd8,"lime.media.openal.AL.sourcefv","lime/media/openal/AL.hx",1101,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1110_sourcei,"lime.media.openal.AL","sourcei",0x265052e1,"lime.media.openal.AL.sourcei","lime/media/openal/AL.hx",1110,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1117_filteri,"lime.media.openal.AL","filteri",0x764de564,"lime.media.openal.AL.filteri","lime/media/openal/AL.hx",1117,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1124_filterf,"lime.media.openal.AL","filterf",0x764de561,"lime.media.openal.AL.filterf","lime/media/openal/AL.hx",1124,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1132_sourceiv,"lime.media.openal.AL","sourceiv",0x5ff83275,"lime.media.openal.AL.sourceiv","lime/media/openal/AL.hx",1132,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1141_sourcePlay,"lime.media.openal.AL","sourcePlay",0x63b3e29c,"lime.media.openal.AL.sourcePlay","lime/media/openal/AL.hx",1141,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1150_sourcePlayv,"lime.media.openal.AL","sourcePlayv",0xd9b2665a,"lime.media.openal.AL.sourcePlayv","lime/media/openal/AL.hx",1150,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1159_sourceStop,"lime.media.openal.AL","sourceStop",0x65b5a4aa,"lime.media.openal.AL.sourceStop","lime/media/openal/AL.hx",1159,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1168_sourceStopv,"lime.media.openal.AL","sourceStopv",0x993a708c,"lime.media.openal.AL.sourceStopv","lime/media/openal/AL.hx",1168,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1177_sourceRewind,"lime.media.openal.AL","sourceRewind",0x75ce58a3,"lime.media.openal.AL.sourceRewind","lime/media/openal/AL.hx",1177,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1186_sourceRewindv,"lime.media.openal.AL","sourceRewindv",0x9ebf3673,"lime.media.openal.AL.sourceRewindv","lime/media/openal/AL.hx",1186,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1195_sourcePause,"lime.media.openal.AL","sourcePause",0xd27c354e,"lime.media.openal.AL.sourcePause","lime/media/openal/AL.hx",1195,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1204_sourcePausev,"lime.media.openal.AL","sourcePausev",0x5a326f68,"lime.media.openal.AL.sourcePausev","lime/media/openal/AL.hx",1204,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1210_sourceQueueBuffer,"lime.media.openal.AL","sourceQueueBuffer",0x43c371c9,"lime.media.openal.AL.sourceQueueBuffer","lime/media/openal/AL.hx",1210,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1223_sourceQueueBuffers,"lime.media.openal.AL","sourceQueueBuffers",0x07401e8a,"lime.media.openal.AL.sourceQueueBuffers","lime/media/openal/AL.hx",1223,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1229_sourceUnqueueBuffer,"lime.media.openal.AL","sourceUnqueueBuffer",0xb08cae10,"lime.media.openal.AL.sourceUnqueueBuffer","lime/media/openal/AL.hx",1229,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1244_sourceUnqueueBuffers,"lime.media.openal.AL","sourceUnqueueBuffers",0xca8ba063,"lime.media.openal.AL.sourceUnqueueBuffers","lime/media/openal/AL.hx",1244,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_1255_speedOfSound,"lime.media.openal.AL","speedOfSound",0x7ec95ade,"lime.media.openal.AL.speedOfSound","lime/media/openal/AL.hx",1255,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_19_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",19,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_20_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",20,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_21_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",21,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_22_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",22,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_23_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",23,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_24_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",24,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_25_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",25,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_26_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",26,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_27_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",27,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_28_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",28,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_29_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",29,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_30_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",30,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_31_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",31,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_32_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",32,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_33_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",33,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_34_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",34,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_35_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",35,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_36_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",36,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_37_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",37,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_38_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",38,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_39_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",39,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_40_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",40,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_41_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",41,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_42_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",42,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_43_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",43,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_44_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",44,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_45_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",45,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_46_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",46,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_47_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",47,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_48_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",48,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_49_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",49,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_50_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",50,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_51_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",51,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_52_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",52,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_53_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",53,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_54_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",54,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_55_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",55,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_56_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",56,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_57_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",57,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_58_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",58,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_59_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",59,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_60_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",60,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_61_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",61,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_62_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",62,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_63_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",63,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_64_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",64,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_65_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",65,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_66_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",66,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_67_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",67,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_68_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",68,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_69_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",69,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_70_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",70,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_71_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",71,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_72_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",72,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_73_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",73,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_74_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",74,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_75_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",75,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_76_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",76,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_77_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",77,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_78_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",78,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_79_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",79,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_80_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",80,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_83_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",83,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_86_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",86,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_87_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",87,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_88_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",88,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_89_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",89,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_90_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",90,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_91_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",91,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_92_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",92,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_93_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",93,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_100_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",100,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_101_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",101,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_102_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",102,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_103_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",103,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_104_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",104,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_105_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",105,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_106_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",106,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_107_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",107,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_108_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",108,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_109_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",109,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_110_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",110,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_111_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",111,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_112_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",112,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_115_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",115,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_116_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",116,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_117_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",117,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_118_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",118,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_119_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",119,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_120_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",120,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_121_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",121,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_122_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",122,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_123_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",123,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_124_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",124,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_125_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",125,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_126_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",126,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_127_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",127,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_128_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",128,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_129_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",129,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_130_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",130,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_131_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",131,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_132_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",132,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_133_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",133,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_134_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",134,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_135_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",135,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_136_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",136,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_137_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",137,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_140_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",140,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_141_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",141,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_142_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",142,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_143_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",143,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_144_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",144,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_145_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",145,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_148_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",148,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_149_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",149,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_150_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",150,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_151_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",151,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_152_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",152,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_155_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",155,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_156_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",156,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_157_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",157,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_158_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",158,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_159_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",159,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_162_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",162,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_163_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",163,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_164_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",164,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_165_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",165,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_166_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",166,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_167_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",167,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_170_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",170,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_171_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",171,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_172_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",172,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_175_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",175,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_176_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",176,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_177_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",177,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_178_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",178,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_179_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",179,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_180_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",180,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_183_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",183,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_184_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",184,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_187_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",187,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_188_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",188,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_189_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",189,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_192_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",192,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_193_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",193,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_194_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",194,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_195_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",195,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_198_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",198,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_201_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",201,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_202_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",202,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_203_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",203,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_204_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",204,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_205_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",205,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_206_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",206,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_207_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",207,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_208_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",208,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_209_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",209,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_210_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",210,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_213_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",213,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_214_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",214,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_215_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",215,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_218_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",218,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_219_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",219,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_220_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",220,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_221_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",221,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_222_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",222,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_223_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",223,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_224_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",224,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_225_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",225,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_226_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",226,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_227_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",227,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_228_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",228,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_229_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",229,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_230_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",230,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_231_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",231,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_234_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",234,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_235_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",235,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_236_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",236,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_246_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",246,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_247_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",247,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_250_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",250,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_251_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",251,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_254_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",254,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_255_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",255,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_256_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",256,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_259_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",259,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_260_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",260,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_261_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",261,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_264_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",264,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_265_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",265,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_266_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",266,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_267_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",267,0x932ea25e)
namespace lime{
namespace media{
namespace openal{

void AL_obj::__construct() { }

Dynamic AL_obj::__CreateEmpty() { return new AL_obj; }

void *AL_obj::_hx_vtable = 0;

Dynamic AL_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AL_obj > _hx_result = new AL_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AL_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1527a64f;
}

int AL_obj::NONE;

int AL_obj::FALSE;

int AL_obj::TRUE;

int AL_obj::SOURCE_RELATIVE;

int AL_obj::CONE_INNER_ANGLE;

int AL_obj::CONE_OUTER_ANGLE;

int AL_obj::PITCH;

int AL_obj::POSITION;

int AL_obj::DIRECTION;

int AL_obj::VELOCITY;

int AL_obj::LOOPING;

int AL_obj::BUFFER;

int AL_obj::GAIN;

int AL_obj::MIN_GAIN;

int AL_obj::MAX_GAIN;

int AL_obj::ORIENTATION;

int AL_obj::SOURCE_STATE;

int AL_obj::INITIAL;

int AL_obj::PLAYING;

int AL_obj::PAUSED;

int AL_obj::STOPPED;

int AL_obj::BUFFERS_QUEUED;

int AL_obj::BUFFERS_PROCESSED;

int AL_obj::REFERENCE_DISTANCE;

int AL_obj::ROLLOFF_FACTOR;

int AL_obj::CONE_OUTER_GAIN;

int AL_obj::MAX_DISTANCE;

int AL_obj::SEC_OFFSET;

int AL_obj::SAMPLE_OFFSET;

int AL_obj::BYTE_OFFSET;

int AL_obj::SOURCE_TYPE;

int AL_obj::STATIC;

int AL_obj::STREAMING;

int AL_obj::UNDETERMINED;

int AL_obj::FORMAT_MONO8;

int AL_obj::FORMAT_MONO16;

int AL_obj::FORMAT_STEREO8;

int AL_obj::FORMAT_STEREO16;

int AL_obj::FREQUENCY;

int AL_obj::BITS;

int AL_obj::CHANNELS;

int AL_obj::SIZE;

int AL_obj::NO_ERROR;

int AL_obj::INVALID_NAME;

int AL_obj::INVALID_ENUM;

int AL_obj::INVALID_VALUE;

int AL_obj::INVALID_OPERATION;

int AL_obj::OUT_OF_MEMORY;

int AL_obj::VENDOR;

int AL_obj::VERSION;

int AL_obj::RENDERER;

int AL_obj::EXTENSIONS;

int AL_obj::DOPPLER_FACTOR;

int AL_obj::SPEED_OF_SOUND;

int AL_obj::DOPPLER_VELOCITY;

int AL_obj::DISTANCE_MODEL;

int AL_obj::INVERSE_DISTANCE;

int AL_obj::INVERSE_DISTANCE_CLAMPED;

int AL_obj::LINEAR_DISTANCE;

int AL_obj::LINEAR_DISTANCE_CLAMPED;

int AL_obj::EXPONENT_DISTANCE;

int AL_obj::EXPONENT_DISTANCE_CLAMPED;

int AL_obj::METERS_PER_UNIT;

int AL_obj::DIRECT_FILTER;

int AL_obj::AUXILIARY_SEND_FILTER;

int AL_obj::AIR_ABSORPTION_FACTOR;

int AL_obj::ROOM_ROLLOFF_FACTOR;

int AL_obj::CONE_OUTER_GAINHF;

int AL_obj::DIRECT_FILTER_GAINHF_AUTO;

int AL_obj::AUXILIARY_SEND_FILTER_GAIN_AUTO;

int AL_obj::AUXILIARY_SEND_FILTER_GAINHF_AUTO;

int AL_obj::REVERB_DENSITY;

int AL_obj::REVERB_DIFFUSION;

int AL_obj::REVERB_GAIN;

int AL_obj::REVERB_GAINHF;

int AL_obj::REVERB_DECAY_TIME;

int AL_obj::REVERB_DECAY_HFRATIO;

int AL_obj::REVERB_REFLECTIONS_GAIN;

int AL_obj::REVERB_REFLECTIONS_DELAY;

int AL_obj::REVERB_LATE_REVERB_GAIN;

int AL_obj::REVERB_LATE_REVERB_DELAY;

int AL_obj::REVERB_AIR_ABSORPTION_GAINHF;

int AL_obj::REVERB_ROOM_ROLLOFF_FACTOR;

int AL_obj::REVERB_DECAY_HFLIMIT;

int AL_obj::EAXREVERB_DENSITY;

int AL_obj::EAXREVERB_DIFFUSION;

int AL_obj::EAXREVERB_GAIN;

int AL_obj::EAXREVERB_GAINHF;

int AL_obj::EAXREVERB_GAINLF;

int AL_obj::EAXREVERB_DECAY_TIME;

int AL_obj::EAXREVERB_DECAY_HFRATIO;

int AL_obj::EAXREVERB_DECAY_LFRATIO;

int AL_obj::EAXREVERB_REFLECTIONS_GAIN;

int AL_obj::EAXREVERB_REFLECTIONS_DELAY;

int AL_obj::EAXREVERB_REFLECTIONS_PAN;

int AL_obj::EAXREVERB_LATE_REVERB_GAIN;

int AL_obj::EAXREVERB_LATE_REVERB_DELAY;

int AL_obj::EAXREVERB_LATE_REVERB_PAN;

int AL_obj::EAXREVERB_ECHO_TIME;

int AL_obj::EAXREVERB_ECHO_DEPTH;

int AL_obj::EAXREVERB_MODULATION_TIME;

int AL_obj::EAXREVERB_MODULATION_DEPTH;

int AL_obj::EAXREVERB_AIR_ABSORPTION_GAINHF;

int AL_obj::EAXREVERB_HFREFERENCE;

int AL_obj::EAXREVERB_LFREFERENCE;

int AL_obj::EAXREVERB_ROOM_ROLLOFF_FACTOR;

int AL_obj::EAXREVERB_DECAY_HFLIMIT;

int AL_obj::CHORUS_WAVEFORM;

int AL_obj::CHORUS_PHASE;

int AL_obj::CHORUS_RATE;

int AL_obj::CHORUS_DEPTH;

int AL_obj::CHORUS_FEEDBACK;

int AL_obj::CHORUS_DELAY;

int AL_obj::DISTORTION_EDGE;

int AL_obj::DISTORTION_GAIN;

int AL_obj::DISTORTION_LOWPASS_CUTOFF;

int AL_obj::DISTORTION_EQCENTER;

int AL_obj::DISTORTION_EQBANDWIDTH;

int AL_obj::ECHO_DELAY;

int AL_obj::ECHO_LRDELAY;

int AL_obj::ECHO_DAMPING;

int AL_obj::ECHO_FEEDBACK;

int AL_obj::ECHO_SPREAD;

int AL_obj::FLANGER_WAVEFORM;

int AL_obj::FLANGER_PHASE;

int AL_obj::FLANGER_RATE;

int AL_obj::FLANGER_DEPTH;

int AL_obj::FLANGER_FEEDBACK;

int AL_obj::FLANGER_DELAY;

int AL_obj::FREQUENCY_SHIFTER_FREQUENCY;

int AL_obj::FREQUENCY_SHIFTER_LEFT_DIRECTION;

int AL_obj::FREQUENCY_SHIFTER_RIGHT_DIRECTION;

int AL_obj::VOCAL_MORPHER_PHONEMEA;

int AL_obj::VOCAL_MORPHER_PHONEMEA_COARSE_TUNING;

int AL_obj::VOCAL_MORPHER_PHONEMEB;

int AL_obj::VOCAL_MORPHER_PHONEMEB_COARSE_TUNING;

int AL_obj::VOCAL_MORPHER_WAVEFORM;

int AL_obj::VOCAL_MORPHER_RATE;

int AL_obj::PITCH_SHIFTER_COARSE_TUNE;

int AL_obj::PITCH_SHIFTER_FINE_TUNE;

int AL_obj::RING_MODULATOR_FREQUENCY;

int AL_obj::RING_MODULATOR_HIGHPASS_CUTOFF;

int AL_obj::RING_MODULATOR_WAVEFORM;

int AL_obj::AUTOWAH_ATTACK_TIME;

int AL_obj::AUTOWAH_RELEASE_TIME;

int AL_obj::AUTOWAH_RESONANCE;

int AL_obj::AUTOWAH_PEAK_GAIN;

int AL_obj::COMPRESSOR_ONOFF;

int AL_obj::EQUALIZER_LOW_GAIN;

int AL_obj::EQUALIZER_LOW_CUTOFF;

int AL_obj::EQUALIZER_MID1_GAIN;

int AL_obj::EQUALIZER_MID1_CENTER;

int AL_obj::EQUALIZER_MID1_WIDTH;

int AL_obj::EQUALIZER_MID2_GAIN;

int AL_obj::EQUALIZER_MID2_CENTER;

int AL_obj::EQUALIZER_MID2_WIDTH;

int AL_obj::EQUALIZER_HIGH_GAIN;

int AL_obj::EQUALIZER_HIGH_CUTOFF;

int AL_obj::EFFECT_FIRST_PARAMETER;

int AL_obj::EFFECT_LAST_PARAMETER;

int AL_obj::EFFECT_TYPE;

int AL_obj::EFFECT_NULL;

int AL_obj::EFFECT_EAXREVERB;

int AL_obj::EFFECT_REVERB;

int AL_obj::EFFECT_CHORUS;

int AL_obj::EFFECT_DISTORTION;

int AL_obj::EFFECT_ECHO;

int AL_obj::EFFECT_FLANGER;

int AL_obj::EFFECT_FREQUENCY_SHIFTER;

int AL_obj::EFFECT_VOCAL_MORPHER;

int AL_obj::EFFECT_PITCH_SHIFTER;

int AL_obj::EFFECT_RING_MODULATOR;

int AL_obj::FFECT_AUTOWAH;

int AL_obj::EFFECT_COMPRESSOR;

int AL_obj::EFFECT_EQUALIZER;

int AL_obj::EFFECTSLOT_EFFECT;

int AL_obj::EFFECTSLOT_GAIN;

int AL_obj::EFFECTSLOT_AUXILIARY_SEND_AUTO;

int AL_obj::LOWPASS_GAIN;

int AL_obj::LOWPASS_GAINHF;

int AL_obj::HIGHPASS_GAIN;

int AL_obj::HIGHPASS_GAINLF;

int AL_obj::BANDPASS_GAIN;

int AL_obj::BANDPASS_GAINLF;

int AL_obj::BANDPASS_GAINHF;

int AL_obj::FILTER_FIRST_PARAMETER;

int AL_obj::FILTER_LAST_PARAMETER;

int AL_obj::FILTER_TYPE;

int AL_obj::FILTER_NULL;

int AL_obj::FILTER_LOWPASS;

int AL_obj::FILTER_HIGHPASS;

int AL_obj::FILTER_BANDPASS;

void AL_obj::removeDirectFilter( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_274_removeDirectFilter)
HXDLIN( 274)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_remove_direct_filter(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,removeDirectFilter,(void))

void AL_obj::removeSend( ::Dynamic source,int index){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_280_removeSend)
HXDLIN( 280)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_remove_send(hx::DynamicPtr(source),index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,removeSend,(void))

void AL_obj::auxf( ::Dynamic aux,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_286_auxf)
HXDLIN( 286)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_auxf(hx::DynamicPtr(aux),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,auxf,(void))

void AL_obj::auxfv( ::Dynamic aux,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_293_auxfv)
HXDLIN( 293)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_auxfv(hx::DynamicPtr(aux),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,auxfv,(void))

void AL_obj::auxi( ::Dynamic aux,int param, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_300_auxi)
HXDLIN( 300)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_auxi(hx::DynamicPtr(aux),param,hx::DynamicPtr(value));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,auxi,(void))

void AL_obj::auxiv( ::Dynamic aux,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_307_auxiv)
HXDLIN( 307)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_auxiv(hx::DynamicPtr(aux),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,auxiv,(void))

void AL_obj::bufferData( ::Dynamic buffer,int format, ::lime::utils::ArrayBufferView data,int size,int freq){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_315_bufferData)
HXDLIN( 315)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer_data(hx::DynamicPtr(buffer),format,hx::DynamicPtr(data),size,freq);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,bufferData,(void))

void AL_obj::buffer3f( ::Dynamic buffer,int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_324_buffer3f)
HXDLIN( 324)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer3f(hx::DynamicPtr(buffer),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,buffer3f,(void))

void AL_obj::buffer3i( ::Dynamic buffer,int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_333_buffer3i)
HXDLIN( 333)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer3i(hx::DynamicPtr(buffer),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,buffer3i,(void))

void AL_obj::bufferf( ::Dynamic buffer,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_342_bufferf)
HXDLIN( 342)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferf(hx::DynamicPtr(buffer),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferf,(void))

void AL_obj::bufferfv( ::Dynamic buffer,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_351_bufferfv)
HXDLIN( 351)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferfv(hx::DynamicPtr(buffer),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferfv,(void))

void AL_obj::bufferi( ::Dynamic buffer,int param,int value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_360_bufferi)
HXDLIN( 360)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferi(hx::DynamicPtr(buffer),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferi,(void))

void AL_obj::bufferiv( ::Dynamic buffer,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_369_bufferiv)
HXDLIN( 369)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferiv(hx::DynamicPtr(buffer),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferiv,(void))

 ::Dynamic AL_obj::createAux(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_377_createAux)
HXDLIN( 377)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_aux()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createAux,return )

 ::Dynamic AL_obj::createBuffer(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_387_createBuffer)
HXDLIN( 387)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffer()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createBuffer,return )

 ::Dynamic AL_obj::createEffect(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_396_createEffect)
HXDLIN( 396)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_effect()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createEffect,return )

 ::Dynamic AL_obj::createFilter(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_405_createFilter)
HXDLIN( 405)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_filter()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createFilter,return )

 ::Dynamic AL_obj::createSource(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_416_createSource)
HXDLIN( 416)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_source()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createSource,return )

void AL_obj::deleteBuffer( ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_427_deleteBuffer)
HXDLIN( 427)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_buffer(hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteBuffer,(void))

void AL_obj::deleteBuffers(::cpp::VirtualArray buffers){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_436_deleteBuffers)
HXDLIN( 436)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_buffers(buffers->get_length(),hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteBuffers,(void))

void AL_obj::deleteSource( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_445_deleteSource)
HXDLIN( 445)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_source(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteSource,(void))

void AL_obj::deleteSources(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_454_deleteSources)
HXDLIN( 454)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_sources(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteSources,(void))

void AL_obj::disable(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_463_disable)
HXDLIN( 463)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_disable(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,disable,(void))

void AL_obj::distanceModel(int distanceModel){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_472_distanceModel)
HXDLIN( 472)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_distance_model(distanceModel);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,distanceModel,(void))

void AL_obj::dopplerFactor(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_481_dopplerFactor)
HXDLIN( 481)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_doppler_factor(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,dopplerFactor,(void))

void AL_obj::dopplerVelocity(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_490_dopplerVelocity)
HXDLIN( 490)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_doppler_velocity(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,dopplerVelocity,(void))

void AL_obj::effectf( ::Dynamic effect,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_498_effectf)
HXDLIN( 498)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_effectf(hx::DynamicPtr(effect),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,effectf,(void))

void AL_obj::effectfv( ::Dynamic effect,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_505_effectfv)
HXDLIN( 505)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_effectfv(hx::DynamicPtr(effect),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,effectfv,(void))

void AL_obj::effecti( ::Dynamic effect,int param,int value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_512_effecti)
HXDLIN( 512)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_effecti(hx::DynamicPtr(effect),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,effecti,(void))

void AL_obj::effectiv( ::Dynamic effect,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_519_effectiv)
HXDLIN( 519)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_effectiv(hx::DynamicPtr(effect),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,effectiv,(void))

void AL_obj::enable(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_527_enable)
HXDLIN( 527)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_enable(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,enable,(void))

 ::Dynamic AL_obj::genSource(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_536_genSource)
HXDLIN( 536)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_source()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,genSource,return )

::cpp::VirtualArray AL_obj::genSources(int n){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_547_genSources)
HXDLIN( 547)		return ( (::cpp::VirtualArray)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_sources(n)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,genSources,return )

 ::Dynamic AL_obj::genBuffer(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_558_genBuffer)
HXDLIN( 558)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffer()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,genBuffer,return )

::cpp::VirtualArray AL_obj::genBuffers(int n){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_569_genBuffers)
HXDLIN( 569)		return ( (::cpp::VirtualArray)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffers(n)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,genBuffers,return )

bool AL_obj::getBoolean(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_580_getBoolean)
HXDLIN( 580)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_boolean(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getBoolean,return )

::Array< bool > AL_obj::getBooleanv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_591_getBooleanv)
HXDLIN( 591)		return ( (::Array< bool >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_booleanv(param,(int)1)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBooleanv,return )

::Array< Float > AL_obj::getBuffer3f( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_602_getBuffer3f)
HXDLIN( 602)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_buffer3f(hx::DynamicPtr(buffer),param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBuffer3f,return )

::Array< int > AL_obj::getBuffer3i( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_613_getBuffer3i)
HXDLIN( 613)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_buffer3i(hx::DynamicPtr(buffer),param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBuffer3i,return )

Float AL_obj::getBufferf( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_624_getBufferf)
HXDLIN( 624)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferf(hx::DynamicPtr(buffer),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBufferf,return )

::Array< Float > AL_obj::getBufferfv( ::Dynamic buffer,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_635_getBufferfv)
HXDLIN( 635)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferfv(hx::DynamicPtr(buffer),param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getBufferfv,return )

int AL_obj::getBufferi( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_646_getBufferi)
HXDLIN( 646)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferi(hx::DynamicPtr(buffer),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBufferi,return )

::Array< int > AL_obj::getBufferiv( ::Dynamic buffer,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_657_getBufferiv)
HXDLIN( 657)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferiv(hx::DynamicPtr(buffer),param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getBufferiv,return )

Float AL_obj::getDouble(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_668_getDouble)
HXDLIN( 668)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_double(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getDouble,return )

::Array< Float > AL_obj::getDoublev(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_679_getDoublev)
HXDLIN( 679)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_doublev(param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getDoublev,return )

int AL_obj::getEnumValue(::String ename){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_690_getEnumValue)
HXDLIN( 690)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_enum_value(ename);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getEnumValue,return )

int AL_obj::getError(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_701_getError)
HXDLIN( 701)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_error();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,getError,return )

::String AL_obj::getErrorString(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_711_getErrorString)
HXDLIN( 711)		int _g = ::lime::media::openal::AL_obj::getError();
HXDLIN( 711)		switch((int)(_g)){
            			case (int)40961: {
HXLINE( 713)				return HX_("INVALID_NAME: Invalid parameter name",64,c3,04,f4);
            			}
            			break;
            			case (int)40962: {
HXLINE( 714)				return HX_("INVALID_ENUM: Invalid enum value",0a,d7,df,59);
            			}
            			break;
            			case (int)40963: {
HXLINE( 715)				return HX_("INVALID_VALUE: Invalid parameter value",c2,a4,37,f8);
            			}
            			break;
            			case (int)40964: {
HXLINE( 716)				return HX_("INVALID_OPERATION: Illegal operation or call",13,8a,e7,93);
            			}
            			break;
            			case (int)40965: {
HXLINE( 717)				return HX_("OUT_OF_MEMORY: OpenAL has run out of memory",b0,dd,fb,0a);
            			}
            			break;
            			default:{
HXLINE( 718)				return HX_("",00,00,00,00);
            			}
            		}
HXLINE( 711)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,getErrorString,return )

int AL_obj::getFilteri( ::Dynamic filter,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_727_getFilteri)
HXDLIN( 727)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_filteri(hx::DynamicPtr(filter),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getFilteri,return )

Float AL_obj::getFloat(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_737_getFloat)
HXDLIN( 737)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_float(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getFloat,return )

::Array< Float > AL_obj::getFloatv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_748_getFloatv)
HXDLIN( 748)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_floatv(param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getFloatv,return )

int AL_obj::getInteger(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_759_getInteger)
HXDLIN( 759)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_integer(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getInteger,return )

::Array< int > AL_obj::getIntegerv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_770_getIntegerv)
HXDLIN( 770)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_integerv(param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getIntegerv,return )

::Array< Float > AL_obj::getListener3f(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_781_getListener3f)
HXDLIN( 781)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listener3f(param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListener3f,return )

::Array< int > AL_obj::getListener3i(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_792_getListener3i)
HXDLIN( 792)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listener3i(param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListener3i,return )

Float AL_obj::getListenerf(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_803_getListenerf)
HXDLIN( 803)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listenerf(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListenerf,return )

::Array< Float > AL_obj::getListenerfv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_814_getListenerfv)
HXDLIN( 814)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listenerfv(param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getListenerfv,return )

int AL_obj::getListeneri(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_825_getListeneri)
HXDLIN( 825)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listeneri(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListeneri,return )

::Array< int > AL_obj::getListeneriv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_836_getListeneriv)
HXDLIN( 836)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listeneriv(param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getListeneriv,return )

 ::Dynamic AL_obj::getParameter(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_847_getParameter)
HXDLIN( 847)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getParameter,return )

 ::Dynamic AL_obj::getProcAddress(::String fname){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_855_getProcAddress)
HXDLIN( 855)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_proc_address(fname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getProcAddress,return )

::Array< Float > AL_obj::getSource3f( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_866_getSource3f)
HXDLIN( 866)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_source3f(hx::DynamicPtr(source),param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSource3f,return )

Float AL_obj::getSourcef( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_877_getSourcef)
HXDLIN( 877)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcef(hx::DynamicPtr(source),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSourcef,return )

::Array< int > AL_obj::getSource3i( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_888_getSource3i)
HXDLIN( 888)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_source3i(hx::DynamicPtr(source),param)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSource3i,return )

::Array< Float > AL_obj::getSourcefv( ::Dynamic source,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_899_getSourcefv)
HXDLIN( 899)		return ( (::Array< Float >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcefv(hx::DynamicPtr(source),param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getSourcefv,return )

 ::Dynamic AL_obj::getSourcei( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_910_getSourcei)
HXDLIN( 910)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcei(hx::DynamicPtr(source),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSourcei,return )

::Array< int > AL_obj::getSourceiv( ::Dynamic source,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_921_getSourceiv)
HXDLIN( 921)		return ( (::Array< int >)(( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourceiv(hx::DynamicPtr(source),param,count)) )) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getSourceiv,return )

::String AL_obj::getString(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_932_getString)
HXDLIN( 932)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_string(param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getString,return )

bool AL_obj::isBuffer( ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_943_isBuffer)
HXDLIN( 943)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_buffer(hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isBuffer,return )

bool AL_obj::isEnabled(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_954_isEnabled)
HXDLIN( 954)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_enabled(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isEnabled,return )

bool AL_obj::isExtensionPresent(::String extname){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_965_isExtensionPresent)
HXDLIN( 965)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_extension_present(extname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isExtensionPresent,return )

bool AL_obj::isAux( ::Dynamic aux){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_976_isAux)
HXDLIN( 976)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_aux(hx::DynamicPtr(aux));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isAux,return )

bool AL_obj::isEffect( ::Dynamic effect){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_987_isEffect)
HXDLIN( 987)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_effect(hx::DynamicPtr(effect));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isEffect,return )

bool AL_obj::isFilter( ::Dynamic filter){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_998_isFilter)
HXDLIN( 998)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_filter(hx::DynamicPtr(filter));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isFilter,return )

bool AL_obj::isSource( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1009_isSource)
HXDLIN(1009)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_source(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isSource,return )

void AL_obj::listener3f(int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1020_listener3f)
HXDLIN(1020)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listener3f(param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(AL_obj,listener3f,(void))

void AL_obj::listener3i(int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1029_listener3i)
HXDLIN(1029)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listener3i(param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(AL_obj,listener3i,(void))

void AL_obj::listenerf(int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1038_listenerf)
HXDLIN(1038)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listenerf(param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listenerf,(void))

void AL_obj::listenerfv(int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1047_listenerfv)
HXDLIN(1047)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listenerfv(param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listenerfv,(void))

void AL_obj::listeneri(int param,int value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1056_listeneri)
HXDLIN(1056)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listeneri(param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listeneri,(void))

void AL_obj::listeneriv(int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1065_listeneriv)
HXDLIN(1065)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listeneriv(param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listeneriv,(void))

void AL_obj::source3f( ::Dynamic source,int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1074_source3f)
HXDLIN(1074)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source3f(hx::DynamicPtr(source),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,source3f,(void))

void AL_obj::source3i( ::Dynamic source,int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1083_source3i)
HXDLIN(1083)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source3i(hx::DynamicPtr(source),param,hx::DynamicPtr(value1),value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,source3i,(void))

void AL_obj::sourcef( ::Dynamic source,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1092_sourcef)
HXDLIN(1092)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcef(hx::DynamicPtr(source),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcef,(void))

void AL_obj::sourcefv( ::Dynamic source,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1101_sourcefv)
HXDLIN(1101)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcefv(hx::DynamicPtr(source),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcefv,(void))

void AL_obj::sourcei( ::Dynamic source,int param, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1110_sourcei)
HXDLIN(1110)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcei(hx::DynamicPtr(source),param,hx::DynamicPtr(value));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcei,(void))

void AL_obj::filteri( ::Dynamic filter,int param, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1117_filteri)
HXDLIN(1117)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_filteri(hx::DynamicPtr(filter),param,hx::DynamicPtr(value));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,filteri,(void))

void AL_obj::filterf( ::Dynamic filter,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1124_filterf)
HXDLIN(1124)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_filterf(hx::DynamicPtr(filter),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,filterf,(void))

void AL_obj::sourceiv( ::Dynamic source,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1132_sourceiv)
HXDLIN(1132)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourceiv(hx::DynamicPtr(source),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourceiv,(void))

void AL_obj::sourcePlay( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1141_sourcePlay)
HXDLIN(1141)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_play(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePlay,(void))

void AL_obj::sourcePlayv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1150_sourcePlayv)
HXDLIN(1150)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_playv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePlayv,(void))

void AL_obj::sourceStop( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1159_sourceStop)
HXDLIN(1159)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_stop(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceStop,(void))

void AL_obj::sourceStopv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1168_sourceStopv)
HXDLIN(1168)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_stopv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceStopv,(void))

void AL_obj::sourceRewind( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1177_sourceRewind)
HXDLIN(1177)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_rewind(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceRewind,(void))

void AL_obj::sourceRewindv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1186_sourceRewindv)
HXDLIN(1186)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_rewindv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceRewindv,(void))

void AL_obj::sourcePause( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1195_sourcePause)
HXDLIN(1195)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_pause(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePause,(void))

void AL_obj::sourcePausev(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1204_sourcePausev)
HXDLIN(1204)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_pausev(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePausev,(void))

void AL_obj::sourceQueueBuffer( ::Dynamic source, ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1210_sourceQueueBuffer)
HXLINE(1213)		::cpp::VirtualArray buffers = ::cpp::VirtualArray_obj::__new(1)->init(0,buffer);
HXLINE(1214)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_queue_buffers(hx::DynamicPtr(source),(int)1,hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,sourceQueueBuffer,(void))

void AL_obj::sourceQueueBuffers( ::Dynamic source,int nb,::cpp::VirtualArray buffers){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1223_sourceQueueBuffers)
HXDLIN(1223)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_queue_buffers(hx::DynamicPtr(source),nb,hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourceQueueBuffers,(void))

 ::Dynamic AL_obj::sourceUnqueueBuffer( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1229_sourceUnqueueBuffer)
HXLINE(1232)		 ::hx::Object * res = ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_unqueue_buffers(hx::DynamicPtr(source),(int)1);
HXLINE(1233)		return ( ( ::Dynamic)(res) )->__GetItem((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceUnqueueBuffer,return )

::cpp::VirtualArray AL_obj::sourceUnqueueBuffers( ::Dynamic source,int nb){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1244_sourceUnqueueBuffers)
HXDLIN(1244)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_unqueue_buffers(hx::DynamicPtr(source),nb)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,sourceUnqueueBuffers,return )

void AL_obj::speedOfSound(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_1255_speedOfSound)
HXDLIN(1255)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_speed_of_sound(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,speedOfSound,(void))


AL_obj::AL_obj()
{
}

bool AL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"auxf") ) { outValue = auxf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"auxi") ) { outValue = auxi_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"auxfv") ) { outValue = auxfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"auxiv") ) { outValue = auxiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isAux") ) { outValue = isAux_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"enable") ) { outValue = enable_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bufferf") ) { outValue = bufferf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferi") ) { outValue = bufferi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"disable") ) { outValue = disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"effectf") ) { outValue = effectf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"effecti") ) { outValue = effecti_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcef") ) { outValue = sourcef_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcei") ) { outValue = sourcei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"filteri") ) { outValue = filteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"filterf") ) { outValue = filterf_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"buffer3f") ) { outValue = buffer3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"buffer3i") ) { outValue = buffer3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferfv") ) { outValue = bufferfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferiv") ) { outValue = bufferiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"effectfv") ) { outValue = effectfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"effectiv") ) { outValue = effectiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getError") ) { outValue = getError_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getFloat") ) { outValue = getFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { outValue = isBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEffect") ) { outValue = isEffect_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isFilter") ) { outValue = isFilter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isSource") ) { outValue = isSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"source3f") ) { outValue = source3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"source3i") ) { outValue = source3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcefv") ) { outValue = sourcefv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceiv") ) { outValue = sourceiv_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"createAux") ) { outValue = createAux_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genSource") ) { outValue = genSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genBuffer") ) { outValue = genBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDouble") ) { outValue = getDouble_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getFloatv") ) { outValue = getFloatv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getString") ) { outValue = getString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { outValue = isEnabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listenerf") ) { outValue = listenerf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listeneri") ) { outValue = listeneri_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"removeSend") ) { outValue = removeSend_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferData") ) { outValue = bufferData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genSources") ) { outValue = genSources_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genBuffers") ) { outValue = genBuffers_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBoolean") ) { outValue = getBoolean_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferf") ) { outValue = getBufferf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferi") ) { outValue = getBufferi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDoublev") ) { outValue = getDoublev_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getFilteri") ) { outValue = getFilteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getInteger") ) { outValue = getInteger_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcef") ) { outValue = getSourcef_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcei") ) { outValue = getSourcei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listener3f") ) { outValue = listener3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listener3i") ) { outValue = listener3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listenerfv") ) { outValue = listenerfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listeneriv") ) { outValue = listeneriv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePlay") ) { outValue = sourcePlay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceStop") ) { outValue = sourceStop_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getBooleanv") ) { outValue = getBooleanv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBuffer3f") ) { outValue = getBuffer3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBuffer3i") ) { outValue = getBuffer3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferfv") ) { outValue = getBufferfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferiv") ) { outValue = getBufferiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getIntegerv") ) { outValue = getIntegerv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSource3f") ) { outValue = getSource3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSource3i") ) { outValue = getSource3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcefv") ) { outValue = getSourcefv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourceiv") ) { outValue = getSourceiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePlayv") ) { outValue = sourcePlayv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceStopv") ) { outValue = sourceStopv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePause") ) { outValue = sourcePause_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createBuffer") ) { outValue = createBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createEffect") ) { outValue = createEffect_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createFilter") ) { outValue = createFilter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createSource") ) { outValue = createSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { outValue = deleteBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteSource") ) { outValue = deleteSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getEnumValue") ) { outValue = getEnumValue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListenerf") ) { outValue = getListenerf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListeneri") ) { outValue = getListeneri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getParameter") ) { outValue = getParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceRewind") ) { outValue = sourceRewind_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePausev") ) { outValue = sourcePausev_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"speedOfSound") ) { outValue = speedOfSound_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"deleteBuffers") ) { outValue = deleteBuffers_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteSources") ) { outValue = deleteSources_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"distanceModel") ) { outValue = distanceModel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dopplerFactor") ) { outValue = dopplerFactor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListener3f") ) { outValue = getListener3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListener3i") ) { outValue = getListener3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListenerfv") ) { outValue = getListenerfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListeneriv") ) { outValue = getListeneriv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceRewindv") ) { outValue = sourceRewindv_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getErrorString") ) { outValue = getErrorString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getProcAddress") ) { outValue = getProcAddress_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dopplerVelocity") ) { outValue = dopplerVelocity_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"sourceQueueBuffer") ) { outValue = sourceQueueBuffer_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"removeDirectFilter") ) { outValue = removeDirectFilter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isExtensionPresent") ) { outValue = isExtensionPresent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceQueueBuffers") ) { outValue = sourceQueueBuffers_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"sourceUnqueueBuffer") ) { outValue = sourceUnqueueBuffer_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"sourceUnqueueBuffers") ) { outValue = sourceUnqueueBuffers_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *AL_obj_sMemberStorageInfo = 0;
static hx::StaticInfo AL_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &AL_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsInt,(void *) &AL_obj::FALSE,HX_HCSTRING("FALSE","\x83","\x6d","\x3d","\x79")},
	{hx::fsInt,(void *) &AL_obj::TRUE,HX_HCSTRING("TRUE","\x4e","\x6f","\xc4","\x37")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_RELATIVE,HX_HCSTRING("SOURCE_RELATIVE","\xf0","\xf3","\x84","\xfe")},
	{hx::fsInt,(void *) &AL_obj::CONE_INNER_ANGLE,HX_HCSTRING("CONE_INNER_ANGLE","\x4e","\xa1","\xd7","\x93")},
	{hx::fsInt,(void *) &AL_obj::CONE_OUTER_ANGLE,HX_HCSTRING("CONE_OUTER_ANGLE","\xf3","\xe1","\xbf","\xcc")},
	{hx::fsInt,(void *) &AL_obj::PITCH,HX_HCSTRING("PITCH","\xa0","\xf3","\x8e","\x40")},
	{hx::fsInt,(void *) &AL_obj::POSITION,HX_HCSTRING("POSITION","\xa9","\x30","\x80","\x24")},
	{hx::fsInt,(void *) &AL_obj::DIRECTION,HX_HCSTRING("DIRECTION","\x1f","\xd2","\x98","\x0b")},
	{hx::fsInt,(void *) &AL_obj::VELOCITY,HX_HCSTRING("VELOCITY","\x1d","\x92","\x83","\x78")},
	{hx::fsInt,(void *) &AL_obj::LOOPING,HX_HCSTRING("LOOPING","\xde","\x50","\x51","\xa0")},
	{hx::fsInt,(void *) &AL_obj::BUFFER,HX_HCSTRING("BUFFER","\x00","\x69","\x17","\x83")},
	{hx::fsInt,(void *) &AL_obj::GAIN,HX_HCSTRING("GAIN","\x7f","\xb8","\x1f","\x2f")},
	{hx::fsInt,(void *) &AL_obj::MIN_GAIN,HX_HCSTRING("MIN_GAIN","\xac","\x29","\xd2","\x21")},
	{hx::fsInt,(void *) &AL_obj::MAX_GAIN,HX_HCSTRING("MAX_GAIN","\x5a","\x0f","\xb8","\xd4")},
	{hx::fsInt,(void *) &AL_obj::ORIENTATION,HX_HCSTRING("ORIENTATION","\xb0","\xfa","\x3a","\xd4")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_STATE,HX_HCSTRING("SOURCE_STATE","\x4d","\xe8","\x1e","\xab")},
	{hx::fsInt,(void *) &AL_obj::INITIAL,HX_HCSTRING("INITIAL","\x64","\xe4","\x72","\x4b")},
	{hx::fsInt,(void *) &AL_obj::PLAYING,HX_HCSTRING("PLAYING","\x4e","\xe3","\xeb","\x09")},
	{hx::fsInt,(void *) &AL_obj::PAUSED,HX_HCSTRING("PAUSED","\xae","\xec","\x06","\xa2")},
	{hx::fsInt,(void *) &AL_obj::STOPPED,HX_HCSTRING("STOPPED","\xed","\xa5","\x35","\xc3")},
	{hx::fsInt,(void *) &AL_obj::BUFFERS_QUEUED,HX_HCSTRING("BUFFERS_QUEUED","\x5f","\x78","\xce","\x71")},
	{hx::fsInt,(void *) &AL_obj::BUFFERS_PROCESSED,HX_HCSTRING("BUFFERS_PROCESSED","\x42","\x9d","\x62","\xac")},
	{hx::fsInt,(void *) &AL_obj::REFERENCE_DISTANCE,HX_HCSTRING("REFERENCE_DISTANCE","\x89","\xd5","\xce","\x9a")},
	{hx::fsInt,(void *) &AL_obj::ROLLOFF_FACTOR,HX_HCSTRING("ROLLOFF_FACTOR","\xbc","\x10","\x98","\x56")},
	{hx::fsInt,(void *) &AL_obj::CONE_OUTER_GAIN,HX_HCSTRING("CONE_OUTER_GAIN","\x3f","\xda","\x8d","\xe3")},
	{hx::fsInt,(void *) &AL_obj::MAX_DISTANCE,HX_HCSTRING("MAX_DISTANCE","\x90","\x83","\xbb","\xa5")},
	{hx::fsInt,(void *) &AL_obj::SEC_OFFSET,HX_HCSTRING("SEC_OFFSET","\xe1","\x5d","\xa3","\xac")},
	{hx::fsInt,(void *) &AL_obj::SAMPLE_OFFSET,HX_HCSTRING("SAMPLE_OFFSET","\x48","\x82","\xac","\xb4")},
	{hx::fsInt,(void *) &AL_obj::BYTE_OFFSET,HX_HCSTRING("BYTE_OFFSET","\x2a","\xdf","\x43","\x36")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_TYPE,HX_HCSTRING("SOURCE_TYPE","\xde","\xff","\x00","\xdf")},
	{hx::fsInt,(void *) &AL_obj::STATIC,HX_HCSTRING("STATIC","\xae","\x88","\x7e","\xb8")},
	{hx::fsInt,(void *) &AL_obj::STREAMING,HX_HCSTRING("STREAMING","\x42","\x38","\x7b","\xb1")},
	{hx::fsInt,(void *) &AL_obj::UNDETERMINED,HX_HCSTRING("UNDETERMINED","\x0a","\xed","\x9d","\x50")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_MONO8,HX_HCSTRING("FORMAT_MONO8","\x6d","\x40","\x81","\x7a")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_MONO16,HX_HCSTRING("FORMAT_MONO16","\x10","\x19","\x97","\xb6")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_STEREO8,HX_HCSTRING("FORMAT_STEREO8","\xb8","\x19","\x58","\xda")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_STEREO16,HX_HCSTRING("FORMAT_STEREO16","\x65","\x61","\xbe","\x32")},
	{hx::fsInt,(void *) &AL_obj::FREQUENCY,HX_HCSTRING("FREQUENCY","\x7c","\xf2","\x42","\xb7")},
	{hx::fsInt,(void *) &AL_obj::BITS,HX_HCSTRING("BITS","\x06","\xc3","\xd7","\x2b")},
	{hx::fsInt,(void *) &AL_obj::CHANNELS,HX_HCSTRING("CHANNELS","\x50","\x3a","\x74","\xc4")},
	{hx::fsInt,(void *) &AL_obj::SIZE,HX_HCSTRING("SIZE","\xc1","\x68","\x14","\x37")},
	{hx::fsInt,(void *) &AL_obj::NO_ERROR,HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f")},
	{hx::fsInt,(void *) &AL_obj::INVALID_NAME,HX_HCSTRING("INVALID_NAME","\xf3","\x7b","\x59","\x19")},
	{hx::fsInt,(void *) &AL_obj::INVALID_ENUM,HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13")},
	{hx::fsInt,(void *) &AL_obj::INVALID_VALUE,HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0")},
	{hx::fsInt,(void *) &AL_obj::INVALID_OPERATION,HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29")},
	{hx::fsInt,(void *) &AL_obj::OUT_OF_MEMORY,HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1")},
	{hx::fsInt,(void *) &AL_obj::VENDOR,HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51")},
	{hx::fsInt,(void *) &AL_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsInt,(void *) &AL_obj::RENDERER,HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c")},
	{hx::fsInt,(void *) &AL_obj::EXTENSIONS,HX_HCSTRING("EXTENSIONS","\x14","\xf0","\x79","\x7b")},
	{hx::fsInt,(void *) &AL_obj::DOPPLER_FACTOR,HX_HCSTRING("DOPPLER_FACTOR","\xe0","\x6d","\x21","\x56")},
	{hx::fsInt,(void *) &AL_obj::SPEED_OF_SOUND,HX_HCSTRING("SPEED_OF_SOUND","\x5f","\x3f","\x54","\xba")},
	{hx::fsInt,(void *) &AL_obj::DOPPLER_VELOCITY,HX_HCSTRING("DOPPLER_VELOCITY","\x6e","\xe1","\x7d","\x1d")},
	{hx::fsInt,(void *) &AL_obj::DISTANCE_MODEL,HX_HCSTRING("DISTANCE_MODEL","\xbf","\x9b","\x1a","\x00")},
	{hx::fsInt,(void *) &AL_obj::INVERSE_DISTANCE,HX_HCSTRING("INVERSE_DISTANCE","\x04","\x89","\x17","\x1d")},
	{hx::fsInt,(void *) &AL_obj::INVERSE_DISTANCE_CLAMPED,HX_HCSTRING("INVERSE_DISTANCE_CLAMPED","\x7f","\x1a","\x32","\x28")},
	{hx::fsInt,(void *) &AL_obj::LINEAR_DISTANCE,HX_HCSTRING("LINEAR_DISTANCE","\x0f","\xb8","\xc7","\x14")},
	{hx::fsInt,(void *) &AL_obj::LINEAR_DISTANCE_CLAMPED,HX_HCSTRING("LINEAR_DISTANCE_CLAMPED","\x8a","\xcc","\x88","\xb2")},
	{hx::fsInt,(void *) &AL_obj::EXPONENT_DISTANCE,HX_HCSTRING("EXPONENT_DISTANCE","\x45","\x4a","\xec","\xc8")},
	{hx::fsInt,(void *) &AL_obj::EXPONENT_DISTANCE_CLAMPED,HX_HCSTRING("EXPONENT_DISTANCE_CLAMPED","\xc0","\x84","\x7b","\x57")},
	{hx::fsInt,(void *) &AL_obj::METERS_PER_UNIT,HX_HCSTRING("METERS_PER_UNIT","\xdb","\x5f","\xed","\x94")},
	{hx::fsInt,(void *) &AL_obj::DIRECT_FILTER,HX_HCSTRING("DIRECT_FILTER","\x4e","\x0d","\xf3","\x01")},
	{hx::fsInt,(void *) &AL_obj::AUXILIARY_SEND_FILTER,HX_HCSTRING("AUXILIARY_SEND_FILTER","\xf6","\xaa","\xbb","\xd2")},
	{hx::fsInt,(void *) &AL_obj::AIR_ABSORPTION_FACTOR,HX_HCSTRING("AIR_ABSORPTION_FACTOR","\xea","\xe3","\x79","\xc8")},
	{hx::fsInt,(void *) &AL_obj::ROOM_ROLLOFF_FACTOR,HX_HCSTRING("ROOM_ROLLOFF_FACTOR","\xa0","\xb9","\xb9","\x3d")},
	{hx::fsInt,(void *) &AL_obj::CONE_OUTER_GAINHF,HX_HCSTRING("CONE_OUTER_GAINHF","\xfd","\x66","\x68","\x46")},
	{hx::fsInt,(void *) &AL_obj::DIRECT_FILTER_GAINHF_AUTO,HX_HCSTRING("DIRECT_FILTER_GAINHF_AUTO","\x40","\xc9","\x9d","\xc1")},
	{hx::fsInt,(void *) &AL_obj::AUXILIARY_SEND_FILTER_GAIN_AUTO,HX_HCSTRING("AUXILIARY_SEND_FILTER_GAIN_AUTO","\xa6","\x94","\x92","\x7f")},
	{hx::fsInt,(void *) &AL_obj::AUXILIARY_SEND_FILTER_GAINHF_AUTO,HX_HCSTRING("AUXILIARY_SEND_FILTER_GAINHF_AUTO","\xe8","\x42","\xb0","\x71")},
	{hx::fsInt,(void *) &AL_obj::REVERB_DENSITY,HX_HCSTRING("REVERB_DENSITY","\x1b","\x29","\x21","\xf1")},
	{hx::fsInt,(void *) &AL_obj::REVERB_DIFFUSION,HX_HCSTRING("REVERB_DIFFUSION","\xf8","\x27","\x26","\xa8")},
	{hx::fsInt,(void *) &AL_obj::REVERB_GAIN,HX_HCSTRING("REVERB_GAIN","\x4c","\x61","\xa1","\xfa")},
	{hx::fsInt,(void *) &AL_obj::REVERB_GAINHF,HX_HCSTRING("REVERB_GAINHF","\x4a","\x8b","\xb5","\xee")},
	{hx::fsInt,(void *) &AL_obj::REVERB_DECAY_TIME,HX_HCSTRING("REVERB_DECAY_TIME","\x1f","\xb7","\x71","\x3b")},
	{hx::fsInt,(void *) &AL_obj::REVERB_DECAY_HFRATIO,HX_HCSTRING("REVERB_DECAY_HFRATIO","\x5b","\xa9","\x40","\x84")},
	{hx::fsInt,(void *) &AL_obj::REVERB_REFLECTIONS_GAIN,HX_HCSTRING("REVERB_REFLECTIONS_GAIN","\x63","\x83","\x4b","\xb2")},
	{hx::fsInt,(void *) &AL_obj::REVERB_REFLECTIONS_DELAY,HX_HCSTRING("REVERB_REFLECTIONS_DELAY","\xff","\xcb","\x3a","\x98")},
	{hx::fsInt,(void *) &AL_obj::REVERB_LATE_REVERB_GAIN,HX_HCSTRING("REVERB_LATE_REVERB_GAIN","\xc0","\x2b","\x1e","\xbb")},
	{hx::fsInt,(void *) &AL_obj::REVERB_LATE_REVERB_DELAY,HX_HCSTRING("REVERB_LATE_REVERB_DELAY","\x02","\x75","\xbb","\x47")},
	{hx::fsInt,(void *) &AL_obj::REVERB_AIR_ABSORPTION_GAINHF,HX_HCSTRING("REVERB_AIR_ABSORPTION_GAINHF","\xeb","\x94","\xef","\xb4")},
	{hx::fsInt,(void *) &AL_obj::REVERB_ROOM_ROLLOFF_FACTOR,HX_HCSTRING("REVERB_ROOM_ROLLOFF_FACTOR","\x73","\xff","\xe5","\xa7")},
	{hx::fsInt,(void *) &AL_obj::REVERB_DECAY_HFLIMIT,HX_HCSTRING("REVERB_DECAY_HFLIMIT","\x8b","\x93","\x1d","\x15")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DENSITY,HX_HCSTRING("EAXREVERB_DENSITY","\x97","\x1e","\x92","\x06")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DIFFUSION,HX_HCSTRING("EAXREVERB_DIFFUSION","\x74","\x74","\xdc","\xb3")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_GAIN,HX_HCSTRING("EAXREVERB_GAIN","\x50","\x66","\x06","\xc3")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_GAINHF,HX_HCSTRING("EAXREVERB_GAINHF","\x4e","\xd9","\x28","\x5e")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_GAINLF,HX_HCSTRING("EAXREVERB_GAINLF","\xca","\xdc","\x28","\x5e")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DECAY_TIME,HX_HCSTRING("EAXREVERB_DECAY_TIME","\x23","\x57","\x3e","\x6f")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DECAY_HFRATIO,HX_HCSTRING("EAXREVERB_DECAY_HFRATIO","\xd7","\xe3","\xbc","\x7c")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DECAY_LFRATIO,HX_HCSTRING("EAXREVERB_DECAY_LFRATIO","\xdb","\xbe","\x12","\x23")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_REFLECTIONS_GAIN,HX_HCSTRING("EAXREVERB_REFLECTIONS_GAIN","\x67","\xfe","\xa5","\xd7")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_REFLECTIONS_DELAY,HX_HCSTRING("EAXREVERB_REFLECTIONS_DELAY","\x7b","\xf4","\x0b","\x22")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_REFLECTIONS_PAN,HX_HCSTRING("EAXREVERB_REFLECTIONS_PAN","\x55","\xdc","\x47","\x41")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_LATE_REVERB_GAIN,HX_HCSTRING("EAXREVERB_LATE_REVERB_GAIN","\xc4","\xa6","\x78","\xe0")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_LATE_REVERB_DELAY,HX_HCSTRING("EAXREVERB_LATE_REVERB_DELAY","\x7e","\x9d","\x8c","\xd1")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_LATE_REVERB_PAN,HX_HCSTRING("EAXREVERB_LATE_REVERB_PAN","\x98","\x2e","\x1d","\xd3")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_ECHO_TIME,HX_HCSTRING("EAXREVERB_ECHO_TIME","\x76","\x5f","\xab","\xde")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_ECHO_DEPTH,HX_HCSTRING("EAXREVERB_ECHO_DEPTH","\x5a","\x59","\x3c","\xbe")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_MODULATION_TIME,HX_HCSTRING("EAXREVERB_MODULATION_TIME","\xbf","\x35","\x61","\x9e")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_MODULATION_DEPTH,HX_HCSTRING("EAXREVERB_MODULATION_DEPTH","\xf1","\x02","\xa2","\xbd")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_AIR_ABSORPTION_GAINHF,HX_HCSTRING("EAXREVERB_AIR_ABSORPTION_GAINHF","\x67","\xab","\x24","\x68")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_HFREFERENCE,HX_HCSTRING("EAXREVERB_HFREFERENCE","\x3c","\x87","\x30","\x47")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_LFREFERENCE,HX_HCSTRING("EAXREVERB_LFREFERENCE","\x40","\x34","\xaa","\x4a")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_ROOM_ROLLOFF_FACTOR,HX_HCSTRING("EAXREVERB_ROOM_ROLLOFF_FACTOR","\xef","\x3e","\xaf","\x26")},
	{hx::fsInt,(void *) &AL_obj::EAXREVERB_DECAY_HFLIMIT,HX_HCSTRING("EAXREVERB_DECAY_HFLIMIT","\x07","\xce","\x99","\x0d")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_WAVEFORM,HX_HCSTRING("CHORUS_WAVEFORM","\xb6","\xb2","\xd6","\x08")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_PHASE,HX_HCSTRING("CHORUS_PHASE","\x42","\x87","\xea","\x10")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_RATE,HX_HCSTRING("CHORUS_RATE","\x99","\x55","\x85","\x21")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_DEPTH,HX_HCSTRING("CHORUS_DEPTH","\x0a","\x50","\x2b","\x26")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_FEEDBACK,HX_HCSTRING("CHORUS_FEEDBACK","\xbe","\xbb","\xab","\x80")},
	{hx::fsInt,(void *) &AL_obj::CHORUS_DELAY,HX_HCSTRING("CHORUS_DELAY","\x8a","\x36","\x28","\x26")},
	{hx::fsInt,(void *) &AL_obj::DISTORTION_EDGE,HX_HCSTRING("DISTORTION_EDGE","\x9f","\xd2","\x68","\x0f")},
	{hx::fsInt,(void *) &AL_obj::DISTORTION_GAIN,HX_HCSTRING("DISTORTION_GAIN","\xe1","\xfa","\xb8","\x10")},
	{hx::fsInt,(void *) &AL_obj::DISTORTION_LOWPASS_CUTOFF,HX_HCSTRING("DISTORTION_LOWPASS_CUTOFF","\x09","\x35","\xca","\xfa")},
	{hx::fsInt,(void *) &AL_obj::DISTORTION_EQCENTER,HX_HCSTRING("DISTORTION_EQCENTER","\xa3","\x42","\xe8","\x4c")},
	{hx::fsInt,(void *) &AL_obj::DISTORTION_EQBANDWIDTH,HX_HCSTRING("DISTORTION_EQBANDWIDTH","\x03","\x36","\xf1","\xf9")},
	{hx::fsInt,(void *) &AL_obj::ECHO_DELAY,HX_HCSTRING("ECHO_DELAY","\x49","\xdf","\x8c","\x45")},
	{hx::fsInt,(void *) &AL_obj::ECHO_LRDELAY,HX_HCSTRING("ECHO_LRDELAY","\x83","\xfc","\xaf","\x50")},
	{hx::fsInt,(void *) &AL_obj::ECHO_DAMPING,HX_HCSTRING("ECHO_DAMPING","\x08","\x7a","\xd1","\x6d")},
	{hx::fsInt,(void *) &AL_obj::ECHO_FEEDBACK,HX_HCSTRING("ECHO_FEEDBACK","\x5f","\xd4","\xdf","\xa1")},
	{hx::fsInt,(void *) &AL_obj::ECHO_SPREAD,HX_HCSTRING("ECHO_SPREAD","\xcd","\x87","\x73","\xee")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_WAVEFORM,HX_HCSTRING("FLANGER_WAVEFORM","\x1b","\xe8","\xf1","\x82")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_PHASE,HX_HCSTRING("FLANGER_PHASE","\xbd","\x30","\xcc","\x5f")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_RATE,HX_HCSTRING("FLANGER_RATE","\x7e","\xb4","\xd6","\x19")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_DEPTH,HX_HCSTRING("FLANGER_DEPTH","\x85","\xf9","\x0c","\x75")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_FEEDBACK,HX_HCSTRING("FLANGER_FEEDBACK","\x23","\xf1","\xc6","\xfa")},
	{hx::fsInt,(void *) &AL_obj::FLANGER_DELAY,HX_HCSTRING("FLANGER_DELAY","\x05","\xe0","\x09","\x75")},
	{hx::fsInt,(void *) &AL_obj::FREQUENCY_SHIFTER_FREQUENCY,HX_HCSTRING("FREQUENCY_SHIFTER_FREQUENCY","\x89","\x6a","\xf6","\x79")},
	{hx::fsInt,(void *) &AL_obj::FREQUENCY_SHIFTER_LEFT_DIRECTION,HX_HCSTRING("FREQUENCY_SHIFTER_LEFT_DIRECTION","\x7a","\x45","\x42","\xdd")},
	{hx::fsInt,(void *) &AL_obj::FREQUENCY_SHIFTER_RIGHT_DIRECTION,HX_HCSTRING("FREQUENCY_SHIFTER_RIGHT_DIRECTION","\x69","\x94","\xaa","\x39")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_PHONEMEA,HX_HCSTRING("VOCAL_MORPHER_PHONEMEA","\x6f","\x95","\x1f","\xcc")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_PHONEMEA_COARSE_TUNING,HX_HCSTRING("VOCAL_MORPHER_PHONEMEA_COARSE_TUNING","\x35","\xa2","\xb2","\x43")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_PHONEMEB,HX_HCSTRING("VOCAL_MORPHER_PHONEMEB","\x70","\x95","\x1f","\xcc")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_PHONEMEB_COARSE_TUNING,HX_HCSTRING("VOCAL_MORPHER_PHONEMEB_COARSE_TUNING","\xf6","\x41","\xae","\xd8")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_WAVEFORM,HX_HCSTRING("VOCAL_MORPHER_WAVEFORM","\x91","\x89","\xf9","\xd7")},
	{hx::fsInt,(void *) &AL_obj::VOCAL_MORPHER_RATE,HX_HCSTRING("VOCAL_MORPHER_RATE","\xf4","\xe2","\xe6","\x46")},
	{hx::fsInt,(void *) &AL_obj::PITCH_SHIFTER_COARSE_TUNE,HX_HCSTRING("PITCH_SHIFTER_COARSE_TUNE","\x79","\xb9","\xea","\x7e")},
	{hx::fsInt,(void *) &AL_obj::PITCH_SHIFTER_FINE_TUNE,HX_HCSTRING("PITCH_SHIFTER_FINE_TUNE","\x8e","\xb3","\x51","\x7c")},
	{hx::fsInt,(void *) &AL_obj::RING_MODULATOR_FREQUENCY,HX_HCSTRING("RING_MODULATOR_FREQUENCY","\x7d","\xd8","\x54","\x9d")},
	{hx::fsInt,(void *) &AL_obj::RING_MODULATOR_HIGHPASS_CUTOFF,HX_HCSTRING("RING_MODULATOR_HIGHPASS_CUTOFF","\xba","\xdc","\xbe","\x64")},
	{hx::fsInt,(void *) &AL_obj::RING_MODULATOR_WAVEFORM,HX_HCSTRING("RING_MODULATOR_WAVEFORM","\x9c","\xbc","\x60","\x47")},
	{hx::fsInt,(void *) &AL_obj::AUTOWAH_ATTACK_TIME,HX_HCSTRING("AUTOWAH_ATTACK_TIME","\x94","\x50","\xaf","\x3e")},
	{hx::fsInt,(void *) &AL_obj::AUTOWAH_RELEASE_TIME,HX_HCSTRING("AUTOWAH_RELEASE_TIME","\x75","\x3d","\x81","\x86")},
	{hx::fsInt,(void *) &AL_obj::AUTOWAH_RESONANCE,HX_HCSTRING("AUTOWAH_RESONANCE","\x1e","\x30","\x30","\x7b")},
	{hx::fsInt,(void *) &AL_obj::AUTOWAH_PEAK_GAIN,HX_HCSTRING("AUTOWAH_PEAK_GAIN","\x4f","\xdf","\x1a","\x1d")},
	{hx::fsInt,(void *) &AL_obj::COMPRESSOR_ONOFF,HX_HCSTRING("COMPRESSOR_ONOFF","\xd6","\x79","\x03","\xa2")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_LOW_GAIN,HX_HCSTRING("EQUALIZER_LOW_GAIN","\x57","\x24","\x55","\x3e")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_LOW_CUTOFF,HX_HCSTRING("EQUALIZER_LOW_CUTOFF","\x05","\xa9","\x04","\x4b")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID1_GAIN,HX_HCSTRING("EQUALIZER_MID1_GAIN","\x68","\x18","\xfa","\x22")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID1_CENTER,HX_HCSTRING("EQUALIZER_MID1_CENTER","\xfe","\xbd","\x7e","\x1f")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID1_WIDTH,HX_HCSTRING("EQUALIZER_MID1_WIDTH","\xdd","\x79","\x8a","\xb3")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID2_GAIN,HX_HCSTRING("EQUALIZER_MID2_GAIN","\xc7","\x74","\x55","\x89")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID2_CENTER,HX_HCSTRING("EQUALIZER_MID2_CENTER","\x1d","\x30","\xb1","\x58")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_MID2_WIDTH,HX_HCSTRING("EQUALIZER_MID2_WIDTH","\x9e","\xf0","\x1f","\xdd")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_HIGH_GAIN,HX_HCSTRING("EQUALIZER_HIGH_GAIN","\x2f","\xbc","\x38","\xb3")},
	{hx::fsInt,(void *) &AL_obj::EQUALIZER_HIGH_CUTOFF,HX_HCSTRING("EQUALIZER_HIGH_CUTOFF","\xdd","\xe6","\xdf","\x71")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_FIRST_PARAMETER,HX_HCSTRING("EFFECT_FIRST_PARAMETER","\x6c","\xc0","\xa4","\xde")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_LAST_PARAMETER,HX_HCSTRING("EFFECT_LAST_PARAMETER","\x4e","\xc8","\x43","\x5f")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_TYPE,HX_HCSTRING("EFFECT_TYPE","\x68","\x62","\xde","\xcb")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_NULL,HX_HCSTRING("EFFECT_NULL","\x35","\x0e","\xe4","\xc7")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_EAXREVERB,HX_HCSTRING("EFFECT_EAXREVERB","\xe0","\x74","\xfe","\xb7")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_REVERB,HX_HCSTRING("EFFECT_REVERB","\x00","\x09","\x47","\xfd")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_CHORUS,HX_HCSTRING("EFFECT_CHORUS","\x94","\xbe","\x89","\xb3")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_DISTORTION,HX_HCSTRING("EFFECT_DISTORTION","\x8b","\x06","\xf2","\x0e")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_ECHO,HX_HCSTRING("EFFECT_ECHO","\x93","\x76","\xe3","\xc1")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_FLANGER,HX_HCSTRING("EFFECT_FLANGER","\xb3","\x33","\xdf","\x68")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_FREQUENCY_SHIFTER,HX_HCSTRING("EFFECT_FREQUENCY_SHIFTER","\xde","\x88","\xb6","\xb3")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_VOCAL_MORPHER,HX_HCSTRING("EFFECT_VOCAL_MORPHER","\x7d","\xb2","\x94","\x33")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_PITCH_SHIFTER,HX_HCSTRING("EFFECT_PITCH_SHIFTER","\x02","\x9d","\xfc","\xc1")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_RING_MODULATOR,HX_HCSTRING("EFFECT_RING_MODULATOR","\x6e","\x67","\x28","\x14")},
	{hx::fsInt,(void *) &AL_obj::FFECT_AUTOWAH,HX_HCSTRING("FFECT_AUTOWAH","\x66","\x05","\xc5","\xaa")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_COMPRESSOR,HX_HCSTRING("EFFECT_COMPRESSOR","\x73","\x67","\x06","\xf9")},
	{hx::fsInt,(void *) &AL_obj::EFFECT_EQUALIZER,HX_HCSTRING("EFFECT_EQUALIZER","\xc4","\x3d","\x9a","\x01")},
	{hx::fsInt,(void *) &AL_obj::EFFECTSLOT_EFFECT,HX_HCSTRING("EFFECTSLOT_EFFECT","\x01","\x1f","\x7b","\x09")},
	{hx::fsInt,(void *) &AL_obj::EFFECTSLOT_GAIN,HX_HCSTRING("EFFECTSLOT_GAIN","\xef","\xd4","\xa0","\xad")},
	{hx::fsInt,(void *) &AL_obj::EFFECTSLOT_AUXILIARY_SEND_AUTO,HX_HCSTRING("EFFECTSLOT_AUXILIARY_SEND_AUTO","\xbd","\xfc","\x78","\xcd")},
	{hx::fsInt,(void *) &AL_obj::LOWPASS_GAIN,HX_HCSTRING("LOWPASS_GAIN","\xf9","\x72","\x4b","\xa1")},
	{hx::fsInt,(void *) &AL_obj::LOWPASS_GAINHF,HX_HCSTRING("LOWPASS_GAINHF","\x37","\x22","\x49","\x21")},
	{hx::fsInt,(void *) &AL_obj::HIGHPASS_GAIN,HX_HCSTRING("HIGHPASS_GAIN","\x4b","\x16","\xe0","\x2e")},
	{hx::fsInt,(void *) &AL_obj::HIGHPASS_GAINLF,HX_HCSTRING("HIGHPASS_GAINLF","\x85","\xc1","\xca","\xb7")},
	{hx::fsInt,(void *) &AL_obj::BANDPASS_GAIN,HX_HCSTRING("BANDPASS_GAIN","\x98","\xc7","\x4c","\x03")},
	{hx::fsInt,(void *) &AL_obj::BANDPASS_GAINLF,HX_HCSTRING("BANDPASS_GAINLF","\x12","\x20","\xc0","\x05")},
	{hx::fsInt,(void *) &AL_obj::BANDPASS_GAINHF,HX_HCSTRING("BANDPASS_GAINHF","\x96","\x1c","\xc0","\x05")},
	{hx::fsInt,(void *) &AL_obj::FILTER_FIRST_PARAMETER,HX_HCSTRING("FILTER_FIRST_PARAMETER","\x93","\x83","\xf5","\x88")},
	{hx::fsInt,(void *) &AL_obj::FILTER_LAST_PARAMETER,HX_HCSTRING("FILTER_LAST_PARAMETER","\x07","\xe7","\xcd","\x6d")},
	{hx::fsInt,(void *) &AL_obj::FILTER_TYPE,HX_HCSTRING("FILTER_TYPE","\xe1","\x8f","\xad","\x5f")},
	{hx::fsInt,(void *) &AL_obj::FILTER_NULL,HX_HCSTRING("FILTER_NULL","\xae","\x3b","\xb3","\x5b")},
	{hx::fsInt,(void *) &AL_obj::FILTER_LOWPASS,HX_HCSTRING("FILTER_LOWPASS","\x7e","\x84","\xb6","\xc7")},
	{hx::fsInt,(void *) &AL_obj::FILTER_HIGHPASS,HX_HCSTRING("FILTER_HIGHPASS","\xda","\xf9","\xa4","\x22")},
	{hx::fsInt,(void *) &AL_obj::FILTER_BANDPASS,HX_HCSTRING("FILTER_BANDPASS","\xad","\xcb","\xaf","\xfd")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void AL_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AL_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(AL_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(AL_obj::FALSE,"FALSE");
	HX_MARK_MEMBER_NAME(AL_obj::TRUE,"TRUE");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_RELATIVE,"SOURCE_RELATIVE");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_INNER_ANGLE,"CONE_INNER_ANGLE");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_OUTER_ANGLE,"CONE_OUTER_ANGLE");
	HX_MARK_MEMBER_NAME(AL_obj::PITCH,"PITCH");
	HX_MARK_MEMBER_NAME(AL_obj::POSITION,"POSITION");
	HX_MARK_MEMBER_NAME(AL_obj::DIRECTION,"DIRECTION");
	HX_MARK_MEMBER_NAME(AL_obj::VELOCITY,"VELOCITY");
	HX_MARK_MEMBER_NAME(AL_obj::LOOPING,"LOOPING");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFER,"BUFFER");
	HX_MARK_MEMBER_NAME(AL_obj::GAIN,"GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MIN_GAIN,"MIN_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MAX_GAIN,"MAX_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::ORIENTATION,"ORIENTATION");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_STATE,"SOURCE_STATE");
	HX_MARK_MEMBER_NAME(AL_obj::INITIAL,"INITIAL");
	HX_MARK_MEMBER_NAME(AL_obj::PLAYING,"PLAYING");
	HX_MARK_MEMBER_NAME(AL_obj::PAUSED,"PAUSED");
	HX_MARK_MEMBER_NAME(AL_obj::STOPPED,"STOPPED");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFERS_QUEUED,"BUFFERS_QUEUED");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFERS_PROCESSED,"BUFFERS_PROCESSED");
	HX_MARK_MEMBER_NAME(AL_obj::REFERENCE_DISTANCE,"REFERENCE_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::ROLLOFF_FACTOR,"ROLLOFF_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_OUTER_GAIN,"CONE_OUTER_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MAX_DISTANCE,"MAX_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::SEC_OFFSET,"SEC_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::SAMPLE_OFFSET,"SAMPLE_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::BYTE_OFFSET,"BYTE_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_TYPE,"SOURCE_TYPE");
	HX_MARK_MEMBER_NAME(AL_obj::STATIC,"STATIC");
	HX_MARK_MEMBER_NAME(AL_obj::STREAMING,"STREAMING");
	HX_MARK_MEMBER_NAME(AL_obj::UNDETERMINED,"UNDETERMINED");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_MONO8,"FORMAT_MONO8");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_MONO16,"FORMAT_MONO16");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_STEREO8,"FORMAT_STEREO8");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_STEREO16,"FORMAT_STEREO16");
	HX_MARK_MEMBER_NAME(AL_obj::FREQUENCY,"FREQUENCY");
	HX_MARK_MEMBER_NAME(AL_obj::BITS,"BITS");
	HX_MARK_MEMBER_NAME(AL_obj::CHANNELS,"CHANNELS");
	HX_MARK_MEMBER_NAME(AL_obj::SIZE,"SIZE");
	HX_MARK_MEMBER_NAME(AL_obj::NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_NAME,"INVALID_NAME");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(AL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(AL_obj::VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(AL_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(AL_obj::RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(AL_obj::EXTENSIONS,"EXTENSIONS");
	HX_MARK_MEMBER_NAME(AL_obj::DOPPLER_FACTOR,"DOPPLER_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::SPEED_OF_SOUND,"SPEED_OF_SOUND");
	HX_MARK_MEMBER_NAME(AL_obj::DOPPLER_VELOCITY,"DOPPLER_VELOCITY");
	HX_MARK_MEMBER_NAME(AL_obj::DISTANCE_MODEL,"DISTANCE_MODEL");
	HX_MARK_MEMBER_NAME(AL_obj::INVERSE_DISTANCE,"INVERSE_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::INVERSE_DISTANCE_CLAMPED,"INVERSE_DISTANCE_CLAMPED");
	HX_MARK_MEMBER_NAME(AL_obj::LINEAR_DISTANCE,"LINEAR_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::LINEAR_DISTANCE_CLAMPED,"LINEAR_DISTANCE_CLAMPED");
	HX_MARK_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE,"EXPONENT_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE_CLAMPED,"EXPONENT_DISTANCE_CLAMPED");
	HX_MARK_MEMBER_NAME(AL_obj::METERS_PER_UNIT,"METERS_PER_UNIT");
	HX_MARK_MEMBER_NAME(AL_obj::DIRECT_FILTER,"DIRECT_FILTER");
	HX_MARK_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER,"AUXILIARY_SEND_FILTER");
	HX_MARK_MEMBER_NAME(AL_obj::AIR_ABSORPTION_FACTOR,"AIR_ABSORPTION_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::ROOM_ROLLOFF_FACTOR,"ROOM_ROLLOFF_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_OUTER_GAINHF,"CONE_OUTER_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::DIRECT_FILTER_GAINHF_AUTO,"DIRECT_FILTER_GAINHF_AUTO");
	HX_MARK_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER_GAIN_AUTO,"AUXILIARY_SEND_FILTER_GAIN_AUTO");
	HX_MARK_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER_GAINHF_AUTO,"AUXILIARY_SEND_FILTER_GAINHF_AUTO");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_DENSITY,"REVERB_DENSITY");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_DIFFUSION,"REVERB_DIFFUSION");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_GAIN,"REVERB_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_GAINHF,"REVERB_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_DECAY_TIME,"REVERB_DECAY_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_DECAY_HFRATIO,"REVERB_DECAY_HFRATIO");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_REFLECTIONS_GAIN,"REVERB_REFLECTIONS_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_REFLECTIONS_DELAY,"REVERB_REFLECTIONS_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_LATE_REVERB_GAIN,"REVERB_LATE_REVERB_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_LATE_REVERB_DELAY,"REVERB_LATE_REVERB_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_AIR_ABSORPTION_GAINHF,"REVERB_AIR_ABSORPTION_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_ROOM_ROLLOFF_FACTOR,"REVERB_ROOM_ROLLOFF_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::REVERB_DECAY_HFLIMIT,"REVERB_DECAY_HFLIMIT");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DENSITY,"EAXREVERB_DENSITY");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DIFFUSION,"EAXREVERB_DIFFUSION");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_GAIN,"EAXREVERB_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_GAINHF,"EAXREVERB_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_GAINLF,"EAXREVERB_GAINLF");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_TIME,"EAXREVERB_DECAY_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_HFRATIO,"EAXREVERB_DECAY_HFRATIO");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_LFRATIO,"EAXREVERB_DECAY_LFRATIO");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_GAIN,"EAXREVERB_REFLECTIONS_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_DELAY,"EAXREVERB_REFLECTIONS_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_PAN,"EAXREVERB_REFLECTIONS_PAN");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_GAIN,"EAXREVERB_LATE_REVERB_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_DELAY,"EAXREVERB_LATE_REVERB_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_PAN,"EAXREVERB_LATE_REVERB_PAN");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_ECHO_TIME,"EAXREVERB_ECHO_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_ECHO_DEPTH,"EAXREVERB_ECHO_DEPTH");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_MODULATION_TIME,"EAXREVERB_MODULATION_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_MODULATION_DEPTH,"EAXREVERB_MODULATION_DEPTH");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_AIR_ABSORPTION_GAINHF,"EAXREVERB_AIR_ABSORPTION_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_HFREFERENCE,"EAXREVERB_HFREFERENCE");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_LFREFERENCE,"EAXREVERB_LFREFERENCE");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_ROOM_ROLLOFF_FACTOR,"EAXREVERB_ROOM_ROLLOFF_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_HFLIMIT,"EAXREVERB_DECAY_HFLIMIT");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_WAVEFORM,"CHORUS_WAVEFORM");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_PHASE,"CHORUS_PHASE");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_RATE,"CHORUS_RATE");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_DEPTH,"CHORUS_DEPTH");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_FEEDBACK,"CHORUS_FEEDBACK");
	HX_MARK_MEMBER_NAME(AL_obj::CHORUS_DELAY,"CHORUS_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::DISTORTION_EDGE,"DISTORTION_EDGE");
	HX_MARK_MEMBER_NAME(AL_obj::DISTORTION_GAIN,"DISTORTION_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::DISTORTION_LOWPASS_CUTOFF,"DISTORTION_LOWPASS_CUTOFF");
	HX_MARK_MEMBER_NAME(AL_obj::DISTORTION_EQCENTER,"DISTORTION_EQCENTER");
	HX_MARK_MEMBER_NAME(AL_obj::DISTORTION_EQBANDWIDTH,"DISTORTION_EQBANDWIDTH");
	HX_MARK_MEMBER_NAME(AL_obj::ECHO_DELAY,"ECHO_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::ECHO_LRDELAY,"ECHO_LRDELAY");
	HX_MARK_MEMBER_NAME(AL_obj::ECHO_DAMPING,"ECHO_DAMPING");
	HX_MARK_MEMBER_NAME(AL_obj::ECHO_FEEDBACK,"ECHO_FEEDBACK");
	HX_MARK_MEMBER_NAME(AL_obj::ECHO_SPREAD,"ECHO_SPREAD");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_WAVEFORM,"FLANGER_WAVEFORM");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_PHASE,"FLANGER_PHASE");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_RATE,"FLANGER_RATE");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_DEPTH,"FLANGER_DEPTH");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_FEEDBACK,"FLANGER_FEEDBACK");
	HX_MARK_MEMBER_NAME(AL_obj::FLANGER_DELAY,"FLANGER_DELAY");
	HX_MARK_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_FREQUENCY,"FREQUENCY_SHIFTER_FREQUENCY");
	HX_MARK_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_LEFT_DIRECTION,"FREQUENCY_SHIFTER_LEFT_DIRECTION");
	HX_MARK_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_RIGHT_DIRECTION,"FREQUENCY_SHIFTER_RIGHT_DIRECTION");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEA,"VOCAL_MORPHER_PHONEMEA");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEA_COARSE_TUNING,"VOCAL_MORPHER_PHONEMEA_COARSE_TUNING");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEB,"VOCAL_MORPHER_PHONEMEB");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEB_COARSE_TUNING,"VOCAL_MORPHER_PHONEMEB_COARSE_TUNING");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_WAVEFORM,"VOCAL_MORPHER_WAVEFORM");
	HX_MARK_MEMBER_NAME(AL_obj::VOCAL_MORPHER_RATE,"VOCAL_MORPHER_RATE");
	HX_MARK_MEMBER_NAME(AL_obj::PITCH_SHIFTER_COARSE_TUNE,"PITCH_SHIFTER_COARSE_TUNE");
	HX_MARK_MEMBER_NAME(AL_obj::PITCH_SHIFTER_FINE_TUNE,"PITCH_SHIFTER_FINE_TUNE");
	HX_MARK_MEMBER_NAME(AL_obj::RING_MODULATOR_FREQUENCY,"RING_MODULATOR_FREQUENCY");
	HX_MARK_MEMBER_NAME(AL_obj::RING_MODULATOR_HIGHPASS_CUTOFF,"RING_MODULATOR_HIGHPASS_CUTOFF");
	HX_MARK_MEMBER_NAME(AL_obj::RING_MODULATOR_WAVEFORM,"RING_MODULATOR_WAVEFORM");
	HX_MARK_MEMBER_NAME(AL_obj::AUTOWAH_ATTACK_TIME,"AUTOWAH_ATTACK_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::AUTOWAH_RELEASE_TIME,"AUTOWAH_RELEASE_TIME");
	HX_MARK_MEMBER_NAME(AL_obj::AUTOWAH_RESONANCE,"AUTOWAH_RESONANCE");
	HX_MARK_MEMBER_NAME(AL_obj::AUTOWAH_PEAK_GAIN,"AUTOWAH_PEAK_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::COMPRESSOR_ONOFF,"COMPRESSOR_ONOFF");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_LOW_GAIN,"EQUALIZER_LOW_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_LOW_CUTOFF,"EQUALIZER_LOW_CUTOFF");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID1_GAIN,"EQUALIZER_MID1_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID1_CENTER,"EQUALIZER_MID1_CENTER");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID1_WIDTH,"EQUALIZER_MID1_WIDTH");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID2_GAIN,"EQUALIZER_MID2_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID2_CENTER,"EQUALIZER_MID2_CENTER");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_MID2_WIDTH,"EQUALIZER_MID2_WIDTH");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_HIGH_GAIN,"EQUALIZER_HIGH_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EQUALIZER_HIGH_CUTOFF,"EQUALIZER_HIGH_CUTOFF");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_FIRST_PARAMETER,"EFFECT_FIRST_PARAMETER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_LAST_PARAMETER,"EFFECT_LAST_PARAMETER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_TYPE,"EFFECT_TYPE");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_NULL,"EFFECT_NULL");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_EAXREVERB,"EFFECT_EAXREVERB");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_REVERB,"EFFECT_REVERB");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_CHORUS,"EFFECT_CHORUS");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_DISTORTION,"EFFECT_DISTORTION");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_ECHO,"EFFECT_ECHO");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_FLANGER,"EFFECT_FLANGER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_FREQUENCY_SHIFTER,"EFFECT_FREQUENCY_SHIFTER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_VOCAL_MORPHER,"EFFECT_VOCAL_MORPHER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_PITCH_SHIFTER,"EFFECT_PITCH_SHIFTER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_RING_MODULATOR,"EFFECT_RING_MODULATOR");
	HX_MARK_MEMBER_NAME(AL_obj::FFECT_AUTOWAH,"FFECT_AUTOWAH");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_COMPRESSOR,"EFFECT_COMPRESSOR");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECT_EQUALIZER,"EFFECT_EQUALIZER");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECTSLOT_EFFECT,"EFFECTSLOT_EFFECT");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECTSLOT_GAIN,"EFFECTSLOT_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::EFFECTSLOT_AUXILIARY_SEND_AUTO,"EFFECTSLOT_AUXILIARY_SEND_AUTO");
	HX_MARK_MEMBER_NAME(AL_obj::LOWPASS_GAIN,"LOWPASS_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::LOWPASS_GAINHF,"LOWPASS_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::HIGHPASS_GAIN,"HIGHPASS_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::HIGHPASS_GAINLF,"HIGHPASS_GAINLF");
	HX_MARK_MEMBER_NAME(AL_obj::BANDPASS_GAIN,"BANDPASS_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::BANDPASS_GAINLF,"BANDPASS_GAINLF");
	HX_MARK_MEMBER_NAME(AL_obj::BANDPASS_GAINHF,"BANDPASS_GAINHF");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_FIRST_PARAMETER,"FILTER_FIRST_PARAMETER");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_LAST_PARAMETER,"FILTER_LAST_PARAMETER");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_TYPE,"FILTER_TYPE");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_NULL,"FILTER_NULL");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_LOWPASS,"FILTER_LOWPASS");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_HIGHPASS,"FILTER_HIGHPASS");
	HX_MARK_MEMBER_NAME(AL_obj::FILTER_BANDPASS,"FILTER_BANDPASS");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AL_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AL_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(AL_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(AL_obj::FALSE,"FALSE");
	HX_VISIT_MEMBER_NAME(AL_obj::TRUE,"TRUE");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_RELATIVE,"SOURCE_RELATIVE");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_INNER_ANGLE,"CONE_INNER_ANGLE");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_OUTER_ANGLE,"CONE_OUTER_ANGLE");
	HX_VISIT_MEMBER_NAME(AL_obj::PITCH,"PITCH");
	HX_VISIT_MEMBER_NAME(AL_obj::POSITION,"POSITION");
	HX_VISIT_MEMBER_NAME(AL_obj::DIRECTION,"DIRECTION");
	HX_VISIT_MEMBER_NAME(AL_obj::VELOCITY,"VELOCITY");
	HX_VISIT_MEMBER_NAME(AL_obj::LOOPING,"LOOPING");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFER,"BUFFER");
	HX_VISIT_MEMBER_NAME(AL_obj::GAIN,"GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MIN_GAIN,"MIN_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MAX_GAIN,"MAX_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::ORIENTATION,"ORIENTATION");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_STATE,"SOURCE_STATE");
	HX_VISIT_MEMBER_NAME(AL_obj::INITIAL,"INITIAL");
	HX_VISIT_MEMBER_NAME(AL_obj::PLAYING,"PLAYING");
	HX_VISIT_MEMBER_NAME(AL_obj::PAUSED,"PAUSED");
	HX_VISIT_MEMBER_NAME(AL_obj::STOPPED,"STOPPED");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFERS_QUEUED,"BUFFERS_QUEUED");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFERS_PROCESSED,"BUFFERS_PROCESSED");
	HX_VISIT_MEMBER_NAME(AL_obj::REFERENCE_DISTANCE,"REFERENCE_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::ROLLOFF_FACTOR,"ROLLOFF_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_OUTER_GAIN,"CONE_OUTER_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MAX_DISTANCE,"MAX_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::SEC_OFFSET,"SEC_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::SAMPLE_OFFSET,"SAMPLE_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::BYTE_OFFSET,"BYTE_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_TYPE,"SOURCE_TYPE");
	HX_VISIT_MEMBER_NAME(AL_obj::STATIC,"STATIC");
	HX_VISIT_MEMBER_NAME(AL_obj::STREAMING,"STREAMING");
	HX_VISIT_MEMBER_NAME(AL_obj::UNDETERMINED,"UNDETERMINED");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_MONO8,"FORMAT_MONO8");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_MONO16,"FORMAT_MONO16");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_STEREO8,"FORMAT_STEREO8");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_STEREO16,"FORMAT_STEREO16");
	HX_VISIT_MEMBER_NAME(AL_obj::FREQUENCY,"FREQUENCY");
	HX_VISIT_MEMBER_NAME(AL_obj::BITS,"BITS");
	HX_VISIT_MEMBER_NAME(AL_obj::CHANNELS,"CHANNELS");
	HX_VISIT_MEMBER_NAME(AL_obj::SIZE,"SIZE");
	HX_VISIT_MEMBER_NAME(AL_obj::NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_NAME,"INVALID_NAME");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(AL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(AL_obj::VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(AL_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(AL_obj::RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(AL_obj::EXTENSIONS,"EXTENSIONS");
	HX_VISIT_MEMBER_NAME(AL_obj::DOPPLER_FACTOR,"DOPPLER_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::SPEED_OF_SOUND,"SPEED_OF_SOUND");
	HX_VISIT_MEMBER_NAME(AL_obj::DOPPLER_VELOCITY,"DOPPLER_VELOCITY");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTANCE_MODEL,"DISTANCE_MODEL");
	HX_VISIT_MEMBER_NAME(AL_obj::INVERSE_DISTANCE,"INVERSE_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::INVERSE_DISTANCE_CLAMPED,"INVERSE_DISTANCE_CLAMPED");
	HX_VISIT_MEMBER_NAME(AL_obj::LINEAR_DISTANCE,"LINEAR_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::LINEAR_DISTANCE_CLAMPED,"LINEAR_DISTANCE_CLAMPED");
	HX_VISIT_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE,"EXPONENT_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE_CLAMPED,"EXPONENT_DISTANCE_CLAMPED");
	HX_VISIT_MEMBER_NAME(AL_obj::METERS_PER_UNIT,"METERS_PER_UNIT");
	HX_VISIT_MEMBER_NAME(AL_obj::DIRECT_FILTER,"DIRECT_FILTER");
	HX_VISIT_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER,"AUXILIARY_SEND_FILTER");
	HX_VISIT_MEMBER_NAME(AL_obj::AIR_ABSORPTION_FACTOR,"AIR_ABSORPTION_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::ROOM_ROLLOFF_FACTOR,"ROOM_ROLLOFF_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_OUTER_GAINHF,"CONE_OUTER_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::DIRECT_FILTER_GAINHF_AUTO,"DIRECT_FILTER_GAINHF_AUTO");
	HX_VISIT_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER_GAIN_AUTO,"AUXILIARY_SEND_FILTER_GAIN_AUTO");
	HX_VISIT_MEMBER_NAME(AL_obj::AUXILIARY_SEND_FILTER_GAINHF_AUTO,"AUXILIARY_SEND_FILTER_GAINHF_AUTO");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_DENSITY,"REVERB_DENSITY");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_DIFFUSION,"REVERB_DIFFUSION");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_GAIN,"REVERB_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_GAINHF,"REVERB_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_DECAY_TIME,"REVERB_DECAY_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_DECAY_HFRATIO,"REVERB_DECAY_HFRATIO");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_REFLECTIONS_GAIN,"REVERB_REFLECTIONS_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_REFLECTIONS_DELAY,"REVERB_REFLECTIONS_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_LATE_REVERB_GAIN,"REVERB_LATE_REVERB_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_LATE_REVERB_DELAY,"REVERB_LATE_REVERB_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_AIR_ABSORPTION_GAINHF,"REVERB_AIR_ABSORPTION_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_ROOM_ROLLOFF_FACTOR,"REVERB_ROOM_ROLLOFF_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::REVERB_DECAY_HFLIMIT,"REVERB_DECAY_HFLIMIT");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DENSITY,"EAXREVERB_DENSITY");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DIFFUSION,"EAXREVERB_DIFFUSION");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_GAIN,"EAXREVERB_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_GAINHF,"EAXREVERB_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_GAINLF,"EAXREVERB_GAINLF");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_TIME,"EAXREVERB_DECAY_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_HFRATIO,"EAXREVERB_DECAY_HFRATIO");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_LFRATIO,"EAXREVERB_DECAY_LFRATIO");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_GAIN,"EAXREVERB_REFLECTIONS_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_DELAY,"EAXREVERB_REFLECTIONS_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_REFLECTIONS_PAN,"EAXREVERB_REFLECTIONS_PAN");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_GAIN,"EAXREVERB_LATE_REVERB_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_DELAY,"EAXREVERB_LATE_REVERB_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_LATE_REVERB_PAN,"EAXREVERB_LATE_REVERB_PAN");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_ECHO_TIME,"EAXREVERB_ECHO_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_ECHO_DEPTH,"EAXREVERB_ECHO_DEPTH");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_MODULATION_TIME,"EAXREVERB_MODULATION_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_MODULATION_DEPTH,"EAXREVERB_MODULATION_DEPTH");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_AIR_ABSORPTION_GAINHF,"EAXREVERB_AIR_ABSORPTION_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_HFREFERENCE,"EAXREVERB_HFREFERENCE");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_LFREFERENCE,"EAXREVERB_LFREFERENCE");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_ROOM_ROLLOFF_FACTOR,"EAXREVERB_ROOM_ROLLOFF_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::EAXREVERB_DECAY_HFLIMIT,"EAXREVERB_DECAY_HFLIMIT");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_WAVEFORM,"CHORUS_WAVEFORM");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_PHASE,"CHORUS_PHASE");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_RATE,"CHORUS_RATE");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_DEPTH,"CHORUS_DEPTH");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_FEEDBACK,"CHORUS_FEEDBACK");
	HX_VISIT_MEMBER_NAME(AL_obj::CHORUS_DELAY,"CHORUS_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTORTION_EDGE,"DISTORTION_EDGE");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTORTION_GAIN,"DISTORTION_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTORTION_LOWPASS_CUTOFF,"DISTORTION_LOWPASS_CUTOFF");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTORTION_EQCENTER,"DISTORTION_EQCENTER");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTORTION_EQBANDWIDTH,"DISTORTION_EQBANDWIDTH");
	HX_VISIT_MEMBER_NAME(AL_obj::ECHO_DELAY,"ECHO_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::ECHO_LRDELAY,"ECHO_LRDELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::ECHO_DAMPING,"ECHO_DAMPING");
	HX_VISIT_MEMBER_NAME(AL_obj::ECHO_FEEDBACK,"ECHO_FEEDBACK");
	HX_VISIT_MEMBER_NAME(AL_obj::ECHO_SPREAD,"ECHO_SPREAD");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_WAVEFORM,"FLANGER_WAVEFORM");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_PHASE,"FLANGER_PHASE");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_RATE,"FLANGER_RATE");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_DEPTH,"FLANGER_DEPTH");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_FEEDBACK,"FLANGER_FEEDBACK");
	HX_VISIT_MEMBER_NAME(AL_obj::FLANGER_DELAY,"FLANGER_DELAY");
	HX_VISIT_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_FREQUENCY,"FREQUENCY_SHIFTER_FREQUENCY");
	HX_VISIT_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_LEFT_DIRECTION,"FREQUENCY_SHIFTER_LEFT_DIRECTION");
	HX_VISIT_MEMBER_NAME(AL_obj::FREQUENCY_SHIFTER_RIGHT_DIRECTION,"FREQUENCY_SHIFTER_RIGHT_DIRECTION");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEA,"VOCAL_MORPHER_PHONEMEA");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEA_COARSE_TUNING,"VOCAL_MORPHER_PHONEMEA_COARSE_TUNING");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEB,"VOCAL_MORPHER_PHONEMEB");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_PHONEMEB_COARSE_TUNING,"VOCAL_MORPHER_PHONEMEB_COARSE_TUNING");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_WAVEFORM,"VOCAL_MORPHER_WAVEFORM");
	HX_VISIT_MEMBER_NAME(AL_obj::VOCAL_MORPHER_RATE,"VOCAL_MORPHER_RATE");
	HX_VISIT_MEMBER_NAME(AL_obj::PITCH_SHIFTER_COARSE_TUNE,"PITCH_SHIFTER_COARSE_TUNE");
	HX_VISIT_MEMBER_NAME(AL_obj::PITCH_SHIFTER_FINE_TUNE,"PITCH_SHIFTER_FINE_TUNE");
	HX_VISIT_MEMBER_NAME(AL_obj::RING_MODULATOR_FREQUENCY,"RING_MODULATOR_FREQUENCY");
	HX_VISIT_MEMBER_NAME(AL_obj::RING_MODULATOR_HIGHPASS_CUTOFF,"RING_MODULATOR_HIGHPASS_CUTOFF");
	HX_VISIT_MEMBER_NAME(AL_obj::RING_MODULATOR_WAVEFORM,"RING_MODULATOR_WAVEFORM");
	HX_VISIT_MEMBER_NAME(AL_obj::AUTOWAH_ATTACK_TIME,"AUTOWAH_ATTACK_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::AUTOWAH_RELEASE_TIME,"AUTOWAH_RELEASE_TIME");
	HX_VISIT_MEMBER_NAME(AL_obj::AUTOWAH_RESONANCE,"AUTOWAH_RESONANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::AUTOWAH_PEAK_GAIN,"AUTOWAH_PEAK_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::COMPRESSOR_ONOFF,"COMPRESSOR_ONOFF");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_LOW_GAIN,"EQUALIZER_LOW_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_LOW_CUTOFF,"EQUALIZER_LOW_CUTOFF");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID1_GAIN,"EQUALIZER_MID1_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID1_CENTER,"EQUALIZER_MID1_CENTER");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID1_WIDTH,"EQUALIZER_MID1_WIDTH");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID2_GAIN,"EQUALIZER_MID2_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID2_CENTER,"EQUALIZER_MID2_CENTER");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_MID2_WIDTH,"EQUALIZER_MID2_WIDTH");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_HIGH_GAIN,"EQUALIZER_HIGH_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EQUALIZER_HIGH_CUTOFF,"EQUALIZER_HIGH_CUTOFF");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_FIRST_PARAMETER,"EFFECT_FIRST_PARAMETER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_LAST_PARAMETER,"EFFECT_LAST_PARAMETER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_TYPE,"EFFECT_TYPE");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_NULL,"EFFECT_NULL");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_EAXREVERB,"EFFECT_EAXREVERB");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_REVERB,"EFFECT_REVERB");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_CHORUS,"EFFECT_CHORUS");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_DISTORTION,"EFFECT_DISTORTION");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_ECHO,"EFFECT_ECHO");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_FLANGER,"EFFECT_FLANGER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_FREQUENCY_SHIFTER,"EFFECT_FREQUENCY_SHIFTER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_VOCAL_MORPHER,"EFFECT_VOCAL_MORPHER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_PITCH_SHIFTER,"EFFECT_PITCH_SHIFTER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_RING_MODULATOR,"EFFECT_RING_MODULATOR");
	HX_VISIT_MEMBER_NAME(AL_obj::FFECT_AUTOWAH,"FFECT_AUTOWAH");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_COMPRESSOR,"EFFECT_COMPRESSOR");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECT_EQUALIZER,"EFFECT_EQUALIZER");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECTSLOT_EFFECT,"EFFECTSLOT_EFFECT");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECTSLOT_GAIN,"EFFECTSLOT_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::EFFECTSLOT_AUXILIARY_SEND_AUTO,"EFFECTSLOT_AUXILIARY_SEND_AUTO");
	HX_VISIT_MEMBER_NAME(AL_obj::LOWPASS_GAIN,"LOWPASS_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::LOWPASS_GAINHF,"LOWPASS_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::HIGHPASS_GAIN,"HIGHPASS_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::HIGHPASS_GAINLF,"HIGHPASS_GAINLF");
	HX_VISIT_MEMBER_NAME(AL_obj::BANDPASS_GAIN,"BANDPASS_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::BANDPASS_GAINLF,"BANDPASS_GAINLF");
	HX_VISIT_MEMBER_NAME(AL_obj::BANDPASS_GAINHF,"BANDPASS_GAINHF");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_FIRST_PARAMETER,"FILTER_FIRST_PARAMETER");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_LAST_PARAMETER,"FILTER_LAST_PARAMETER");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_TYPE,"FILTER_TYPE");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_NULL,"FILTER_NULL");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_LOWPASS,"FILTER_LOWPASS");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_HIGHPASS,"FILTER_HIGHPASS");
	HX_VISIT_MEMBER_NAME(AL_obj::FILTER_BANDPASS,"FILTER_BANDPASS");
};

#endif

hx::Class AL_obj::__mClass;

static ::String AL_obj_sStaticFields[] = {
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("FALSE","\x83","\x6d","\x3d","\x79"),
	HX_HCSTRING("TRUE","\x4e","\x6f","\xc4","\x37"),
	HX_HCSTRING("SOURCE_RELATIVE","\xf0","\xf3","\x84","\xfe"),
	HX_HCSTRING("CONE_INNER_ANGLE","\x4e","\xa1","\xd7","\x93"),
	HX_HCSTRING("CONE_OUTER_ANGLE","\xf3","\xe1","\xbf","\xcc"),
	HX_HCSTRING("PITCH","\xa0","\xf3","\x8e","\x40"),
	HX_HCSTRING("POSITION","\xa9","\x30","\x80","\x24"),
	HX_HCSTRING("DIRECTION","\x1f","\xd2","\x98","\x0b"),
	HX_HCSTRING("VELOCITY","\x1d","\x92","\x83","\x78"),
	HX_HCSTRING("LOOPING","\xde","\x50","\x51","\xa0"),
	HX_HCSTRING("BUFFER","\x00","\x69","\x17","\x83"),
	HX_HCSTRING("GAIN","\x7f","\xb8","\x1f","\x2f"),
	HX_HCSTRING("MIN_GAIN","\xac","\x29","\xd2","\x21"),
	HX_HCSTRING("MAX_GAIN","\x5a","\x0f","\xb8","\xd4"),
	HX_HCSTRING("ORIENTATION","\xb0","\xfa","\x3a","\xd4"),
	HX_HCSTRING("SOURCE_STATE","\x4d","\xe8","\x1e","\xab"),
	HX_HCSTRING("INITIAL","\x64","\xe4","\x72","\x4b"),
	HX_HCSTRING("PLAYING","\x4e","\xe3","\xeb","\x09"),
	HX_HCSTRING("PAUSED","\xae","\xec","\x06","\xa2"),
	HX_HCSTRING("STOPPED","\xed","\xa5","\x35","\xc3"),
	HX_HCSTRING("BUFFERS_QUEUED","\x5f","\x78","\xce","\x71"),
	HX_HCSTRING("BUFFERS_PROCESSED","\x42","\x9d","\x62","\xac"),
	HX_HCSTRING("REFERENCE_DISTANCE","\x89","\xd5","\xce","\x9a"),
	HX_HCSTRING("ROLLOFF_FACTOR","\xbc","\x10","\x98","\x56"),
	HX_HCSTRING("CONE_OUTER_GAIN","\x3f","\xda","\x8d","\xe3"),
	HX_HCSTRING("MAX_DISTANCE","\x90","\x83","\xbb","\xa5"),
	HX_HCSTRING("SEC_OFFSET","\xe1","\x5d","\xa3","\xac"),
	HX_HCSTRING("SAMPLE_OFFSET","\x48","\x82","\xac","\xb4"),
	HX_HCSTRING("BYTE_OFFSET","\x2a","\xdf","\x43","\x36"),
	HX_HCSTRING("SOURCE_TYPE","\xde","\xff","\x00","\xdf"),
	HX_HCSTRING("STATIC","\xae","\x88","\x7e","\xb8"),
	HX_HCSTRING("STREAMING","\x42","\x38","\x7b","\xb1"),
	HX_HCSTRING("UNDETERMINED","\x0a","\xed","\x9d","\x50"),
	HX_HCSTRING("FORMAT_MONO8","\x6d","\x40","\x81","\x7a"),
	HX_HCSTRING("FORMAT_MONO16","\x10","\x19","\x97","\xb6"),
	HX_HCSTRING("FORMAT_STEREO8","\xb8","\x19","\x58","\xda"),
	HX_HCSTRING("FORMAT_STEREO16","\x65","\x61","\xbe","\x32"),
	HX_HCSTRING("FREQUENCY","\x7c","\xf2","\x42","\xb7"),
	HX_HCSTRING("BITS","\x06","\xc3","\xd7","\x2b"),
	HX_HCSTRING("CHANNELS","\x50","\x3a","\x74","\xc4"),
	HX_HCSTRING("SIZE","\xc1","\x68","\x14","\x37"),
	HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f"),
	HX_HCSTRING("INVALID_NAME","\xf3","\x7b","\x59","\x19"),
	HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13"),
	HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0"),
	HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29"),
	HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1"),
	HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c"),
	HX_HCSTRING("EXTENSIONS","\x14","\xf0","\x79","\x7b"),
	HX_HCSTRING("DOPPLER_FACTOR","\xe0","\x6d","\x21","\x56"),
	HX_HCSTRING("SPEED_OF_SOUND","\x5f","\x3f","\x54","\xba"),
	HX_HCSTRING("DOPPLER_VELOCITY","\x6e","\xe1","\x7d","\x1d"),
	HX_HCSTRING("DISTANCE_MODEL","\xbf","\x9b","\x1a","\x00"),
	HX_HCSTRING("INVERSE_DISTANCE","\x04","\x89","\x17","\x1d"),
	HX_HCSTRING("INVERSE_DISTANCE_CLAMPED","\x7f","\x1a","\x32","\x28"),
	HX_HCSTRING("LINEAR_DISTANCE","\x0f","\xb8","\xc7","\x14"),
	HX_HCSTRING("LINEAR_DISTANCE_CLAMPED","\x8a","\xcc","\x88","\xb2"),
	HX_HCSTRING("EXPONENT_DISTANCE","\x45","\x4a","\xec","\xc8"),
	HX_HCSTRING("EXPONENT_DISTANCE_CLAMPED","\xc0","\x84","\x7b","\x57"),
	HX_HCSTRING("METERS_PER_UNIT","\xdb","\x5f","\xed","\x94"),
	HX_HCSTRING("DIRECT_FILTER","\x4e","\x0d","\xf3","\x01"),
	HX_HCSTRING("AUXILIARY_SEND_FILTER","\xf6","\xaa","\xbb","\xd2"),
	HX_HCSTRING("AIR_ABSORPTION_FACTOR","\xea","\xe3","\x79","\xc8"),
	HX_HCSTRING("ROOM_ROLLOFF_FACTOR","\xa0","\xb9","\xb9","\x3d"),
	HX_HCSTRING("CONE_OUTER_GAINHF","\xfd","\x66","\x68","\x46"),
	HX_HCSTRING("DIRECT_FILTER_GAINHF_AUTO","\x40","\xc9","\x9d","\xc1"),
	HX_HCSTRING("AUXILIARY_SEND_FILTER_GAIN_AUTO","\xa6","\x94","\x92","\x7f"),
	HX_HCSTRING("AUXILIARY_SEND_FILTER_GAINHF_AUTO","\xe8","\x42","\xb0","\x71"),
	HX_HCSTRING("REVERB_DENSITY","\x1b","\x29","\x21","\xf1"),
	HX_HCSTRING("REVERB_DIFFUSION","\xf8","\x27","\x26","\xa8"),
	HX_HCSTRING("REVERB_GAIN","\x4c","\x61","\xa1","\xfa"),
	HX_HCSTRING("REVERB_GAINHF","\x4a","\x8b","\xb5","\xee"),
	HX_HCSTRING("REVERB_DECAY_TIME","\x1f","\xb7","\x71","\x3b"),
	HX_HCSTRING("REVERB_DECAY_HFRATIO","\x5b","\xa9","\x40","\x84"),
	HX_HCSTRING("REVERB_REFLECTIONS_GAIN","\x63","\x83","\x4b","\xb2"),
	HX_HCSTRING("REVERB_REFLECTIONS_DELAY","\xff","\xcb","\x3a","\x98"),
	HX_HCSTRING("REVERB_LATE_REVERB_GAIN","\xc0","\x2b","\x1e","\xbb"),
	HX_HCSTRING("REVERB_LATE_REVERB_DELAY","\x02","\x75","\xbb","\x47"),
	HX_HCSTRING("REVERB_AIR_ABSORPTION_GAINHF","\xeb","\x94","\xef","\xb4"),
	HX_HCSTRING("REVERB_ROOM_ROLLOFF_FACTOR","\x73","\xff","\xe5","\xa7"),
	HX_HCSTRING("REVERB_DECAY_HFLIMIT","\x8b","\x93","\x1d","\x15"),
	HX_HCSTRING("EAXREVERB_DENSITY","\x97","\x1e","\x92","\x06"),
	HX_HCSTRING("EAXREVERB_DIFFUSION","\x74","\x74","\xdc","\xb3"),
	HX_HCSTRING("EAXREVERB_GAIN","\x50","\x66","\x06","\xc3"),
	HX_HCSTRING("EAXREVERB_GAINHF","\x4e","\xd9","\x28","\x5e"),
	HX_HCSTRING("EAXREVERB_GAINLF","\xca","\xdc","\x28","\x5e"),
	HX_HCSTRING("EAXREVERB_DECAY_TIME","\x23","\x57","\x3e","\x6f"),
	HX_HCSTRING("EAXREVERB_DECAY_HFRATIO","\xd7","\xe3","\xbc","\x7c"),
	HX_HCSTRING("EAXREVERB_DECAY_LFRATIO","\xdb","\xbe","\x12","\x23"),
	HX_HCSTRING("EAXREVERB_REFLECTIONS_GAIN","\x67","\xfe","\xa5","\xd7"),
	HX_HCSTRING("EAXREVERB_REFLECTIONS_DELAY","\x7b","\xf4","\x0b","\x22"),
	HX_HCSTRING("EAXREVERB_REFLECTIONS_PAN","\x55","\xdc","\x47","\x41"),
	HX_HCSTRING("EAXREVERB_LATE_REVERB_GAIN","\xc4","\xa6","\x78","\xe0"),
	HX_HCSTRING("EAXREVERB_LATE_REVERB_DELAY","\x7e","\x9d","\x8c","\xd1"),
	HX_HCSTRING("EAXREVERB_LATE_REVERB_PAN","\x98","\x2e","\x1d","\xd3"),
	HX_HCSTRING("EAXREVERB_ECHO_TIME","\x76","\x5f","\xab","\xde"),
	HX_HCSTRING("EAXREVERB_ECHO_DEPTH","\x5a","\x59","\x3c","\xbe"),
	HX_HCSTRING("EAXREVERB_MODULATION_TIME","\xbf","\x35","\x61","\x9e"),
	HX_HCSTRING("EAXREVERB_MODULATION_DEPTH","\xf1","\x02","\xa2","\xbd"),
	HX_HCSTRING("EAXREVERB_AIR_ABSORPTION_GAINHF","\x67","\xab","\x24","\x68"),
	HX_HCSTRING("EAXREVERB_HFREFERENCE","\x3c","\x87","\x30","\x47"),
	HX_HCSTRING("EAXREVERB_LFREFERENCE","\x40","\x34","\xaa","\x4a"),
	HX_HCSTRING("EAXREVERB_ROOM_ROLLOFF_FACTOR","\xef","\x3e","\xaf","\x26"),
	HX_HCSTRING("EAXREVERB_DECAY_HFLIMIT","\x07","\xce","\x99","\x0d"),
	HX_HCSTRING("CHORUS_WAVEFORM","\xb6","\xb2","\xd6","\x08"),
	HX_HCSTRING("CHORUS_PHASE","\x42","\x87","\xea","\x10"),
	HX_HCSTRING("CHORUS_RATE","\x99","\x55","\x85","\x21"),
	HX_HCSTRING("CHORUS_DEPTH","\x0a","\x50","\x2b","\x26"),
	HX_HCSTRING("CHORUS_FEEDBACK","\xbe","\xbb","\xab","\x80"),
	HX_HCSTRING("CHORUS_DELAY","\x8a","\x36","\x28","\x26"),
	HX_HCSTRING("DISTORTION_EDGE","\x9f","\xd2","\x68","\x0f"),
	HX_HCSTRING("DISTORTION_GAIN","\xe1","\xfa","\xb8","\x10"),
	HX_HCSTRING("DISTORTION_LOWPASS_CUTOFF","\x09","\x35","\xca","\xfa"),
	HX_HCSTRING("DISTORTION_EQCENTER","\xa3","\x42","\xe8","\x4c"),
	HX_HCSTRING("DISTORTION_EQBANDWIDTH","\x03","\x36","\xf1","\xf9"),
	HX_HCSTRING("ECHO_DELAY","\x49","\xdf","\x8c","\x45"),
	HX_HCSTRING("ECHO_LRDELAY","\x83","\xfc","\xaf","\x50"),
	HX_HCSTRING("ECHO_DAMPING","\x08","\x7a","\xd1","\x6d"),
	HX_HCSTRING("ECHO_FEEDBACK","\x5f","\xd4","\xdf","\xa1"),
	HX_HCSTRING("ECHO_SPREAD","\xcd","\x87","\x73","\xee"),
	HX_HCSTRING("FLANGER_WAVEFORM","\x1b","\xe8","\xf1","\x82"),
	HX_HCSTRING("FLANGER_PHASE","\xbd","\x30","\xcc","\x5f"),
	HX_HCSTRING("FLANGER_RATE","\x7e","\xb4","\xd6","\x19"),
	HX_HCSTRING("FLANGER_DEPTH","\x85","\xf9","\x0c","\x75"),
	HX_HCSTRING("FLANGER_FEEDBACK","\x23","\xf1","\xc6","\xfa"),
	HX_HCSTRING("FLANGER_DELAY","\x05","\xe0","\x09","\x75"),
	HX_HCSTRING("FREQUENCY_SHIFTER_FREQUENCY","\x89","\x6a","\xf6","\x79"),
	HX_HCSTRING("FREQUENCY_SHIFTER_LEFT_DIRECTION","\x7a","\x45","\x42","\xdd"),
	HX_HCSTRING("FREQUENCY_SHIFTER_RIGHT_DIRECTION","\x69","\x94","\xaa","\x39"),
	HX_HCSTRING("VOCAL_MORPHER_PHONEMEA","\x6f","\x95","\x1f","\xcc"),
	HX_HCSTRING("VOCAL_MORPHER_PHONEMEA_COARSE_TUNING","\x35","\xa2","\xb2","\x43"),
	HX_HCSTRING("VOCAL_MORPHER_PHONEMEB","\x70","\x95","\x1f","\xcc"),
	HX_HCSTRING("VOCAL_MORPHER_PHONEMEB_COARSE_TUNING","\xf6","\x41","\xae","\xd8"),
	HX_HCSTRING("VOCAL_MORPHER_WAVEFORM","\x91","\x89","\xf9","\xd7"),
	HX_HCSTRING("VOCAL_MORPHER_RATE","\xf4","\xe2","\xe6","\x46"),
	HX_HCSTRING("PITCH_SHIFTER_COARSE_TUNE","\x79","\xb9","\xea","\x7e"),
	HX_HCSTRING("PITCH_SHIFTER_FINE_TUNE","\x8e","\xb3","\x51","\x7c"),
	HX_HCSTRING("RING_MODULATOR_FREQUENCY","\x7d","\xd8","\x54","\x9d"),
	HX_HCSTRING("RING_MODULATOR_HIGHPASS_CUTOFF","\xba","\xdc","\xbe","\x64"),
	HX_HCSTRING("RING_MODULATOR_WAVEFORM","\x9c","\xbc","\x60","\x47"),
	HX_HCSTRING("AUTOWAH_ATTACK_TIME","\x94","\x50","\xaf","\x3e"),
	HX_HCSTRING("AUTOWAH_RELEASE_TIME","\x75","\x3d","\x81","\x86"),
	HX_HCSTRING("AUTOWAH_RESONANCE","\x1e","\x30","\x30","\x7b"),
	HX_HCSTRING("AUTOWAH_PEAK_GAIN","\x4f","\xdf","\x1a","\x1d"),
	HX_HCSTRING("COMPRESSOR_ONOFF","\xd6","\x79","\x03","\xa2"),
	HX_HCSTRING("EQUALIZER_LOW_GAIN","\x57","\x24","\x55","\x3e"),
	HX_HCSTRING("EQUALIZER_LOW_CUTOFF","\x05","\xa9","\x04","\x4b"),
	HX_HCSTRING("EQUALIZER_MID1_GAIN","\x68","\x18","\xfa","\x22"),
	HX_HCSTRING("EQUALIZER_MID1_CENTER","\xfe","\xbd","\x7e","\x1f"),
	HX_HCSTRING("EQUALIZER_MID1_WIDTH","\xdd","\x79","\x8a","\xb3"),
	HX_HCSTRING("EQUALIZER_MID2_GAIN","\xc7","\x74","\x55","\x89"),
	HX_HCSTRING("EQUALIZER_MID2_CENTER","\x1d","\x30","\xb1","\x58"),
	HX_HCSTRING("EQUALIZER_MID2_WIDTH","\x9e","\xf0","\x1f","\xdd"),
	HX_HCSTRING("EQUALIZER_HIGH_GAIN","\x2f","\xbc","\x38","\xb3"),
	HX_HCSTRING("EQUALIZER_HIGH_CUTOFF","\xdd","\xe6","\xdf","\x71"),
	HX_HCSTRING("EFFECT_FIRST_PARAMETER","\x6c","\xc0","\xa4","\xde"),
	HX_HCSTRING("EFFECT_LAST_PARAMETER","\x4e","\xc8","\x43","\x5f"),
	HX_HCSTRING("EFFECT_TYPE","\x68","\x62","\xde","\xcb"),
	HX_HCSTRING("EFFECT_NULL","\x35","\x0e","\xe4","\xc7"),
	HX_HCSTRING("EFFECT_EAXREVERB","\xe0","\x74","\xfe","\xb7"),
	HX_HCSTRING("EFFECT_REVERB","\x00","\x09","\x47","\xfd"),
	HX_HCSTRING("EFFECT_CHORUS","\x94","\xbe","\x89","\xb3"),
	HX_HCSTRING("EFFECT_DISTORTION","\x8b","\x06","\xf2","\x0e"),
	HX_HCSTRING("EFFECT_ECHO","\x93","\x76","\xe3","\xc1"),
	HX_HCSTRING("EFFECT_FLANGER","\xb3","\x33","\xdf","\x68"),
	HX_HCSTRING("EFFECT_FREQUENCY_SHIFTER","\xde","\x88","\xb6","\xb3"),
	HX_HCSTRING("EFFECT_VOCAL_MORPHER","\x7d","\xb2","\x94","\x33"),
	HX_HCSTRING("EFFECT_PITCH_SHIFTER","\x02","\x9d","\xfc","\xc1"),
	HX_HCSTRING("EFFECT_RING_MODULATOR","\x6e","\x67","\x28","\x14"),
	HX_HCSTRING("FFECT_AUTOWAH","\x66","\x05","\xc5","\xaa"),
	HX_HCSTRING("EFFECT_COMPRESSOR","\x73","\x67","\x06","\xf9"),
	HX_HCSTRING("EFFECT_EQUALIZER","\xc4","\x3d","\x9a","\x01"),
	HX_HCSTRING("EFFECTSLOT_EFFECT","\x01","\x1f","\x7b","\x09"),
	HX_HCSTRING("EFFECTSLOT_GAIN","\xef","\xd4","\xa0","\xad"),
	HX_HCSTRING("EFFECTSLOT_AUXILIARY_SEND_AUTO","\xbd","\xfc","\x78","\xcd"),
	HX_HCSTRING("LOWPASS_GAIN","\xf9","\x72","\x4b","\xa1"),
	HX_HCSTRING("LOWPASS_GAINHF","\x37","\x22","\x49","\x21"),
	HX_HCSTRING("HIGHPASS_GAIN","\x4b","\x16","\xe0","\x2e"),
	HX_HCSTRING("HIGHPASS_GAINLF","\x85","\xc1","\xca","\xb7"),
	HX_HCSTRING("BANDPASS_GAIN","\x98","\xc7","\x4c","\x03"),
	HX_HCSTRING("BANDPASS_GAINLF","\x12","\x20","\xc0","\x05"),
	HX_HCSTRING("BANDPASS_GAINHF","\x96","\x1c","\xc0","\x05"),
	HX_HCSTRING("FILTER_FIRST_PARAMETER","\x93","\x83","\xf5","\x88"),
	HX_HCSTRING("FILTER_LAST_PARAMETER","\x07","\xe7","\xcd","\x6d"),
	HX_HCSTRING("FILTER_TYPE","\xe1","\x8f","\xad","\x5f"),
	HX_HCSTRING("FILTER_NULL","\xae","\x3b","\xb3","\x5b"),
	HX_HCSTRING("FILTER_LOWPASS","\x7e","\x84","\xb6","\xc7"),
	HX_HCSTRING("FILTER_HIGHPASS","\xda","\xf9","\xa4","\x22"),
	HX_HCSTRING("FILTER_BANDPASS","\xad","\xcb","\xaf","\xfd"),
	HX_HCSTRING("removeDirectFilter","\x25","\x62","\xa4","\x60"),
	HX_HCSTRING("removeSend","\xac","\xc7","\x6f","\xc9"),
	HX_HCSTRING("auxf","\xe2","\xe2","\x76","\x40"),
	HX_HCSTRING("auxfv","\x54","\xa3","\x8f","\x27"),
	HX_HCSTRING("auxi","\xe5","\xe2","\x76","\x40"),
	HX_HCSTRING("auxiv","\xf1","\xa5","\x8f","\x27"),
	HX_HCSTRING("bufferData","\x4a","\xbf","\x73","\x93"),
	HX_HCSTRING("buffer3f","\xd3","\x29","\xfe","\xac"),
	HX_HCSTRING("buffer3i","\xd6","\x29","\xfe","\xac"),
	HX_HCSTRING("bufferf","\x66","\xa3","\x90","\xb1"),
	HX_HCSTRING("bufferfv","\x50","\x56","\xfe","\xac"),
	HX_HCSTRING("bufferi","\x69","\xa3","\x90","\xb1"),
	HX_HCSTRING("bufferiv","\xed","\x58","\xfe","\xac"),
	HX_HCSTRING("createAux","\x68","\xd7","\xd7","\x49"),
	HX_HCSTRING("createBuffer","\x1c","\xfd","\xe9","\xf2"),
	HX_HCSTRING("createEffect","\xad","\x9a","\xf8","\x82"),
	HX_HCSTRING("createFilter","\xd4","\x5f","\x8a","\xa7"),
	HX_HCSTRING("createSource","\xf7","\xf0","\x86","\x54"),
	HX_HCSTRING("deleteBuffer","\x8b","\xe3","\x2c","\x37"),
	HX_HCSTRING("deleteBuffers","\x88","\x36","\x1a","\x10"),
	HX_HCSTRING("deleteSource","\x66","\xd7","\xc9","\x98"),
	HX_HCSTRING("deleteSources","\x4d","\xa2","\xd2","\x17"),
	HX_HCSTRING("disable","\xe8","\x69","\x58","\xb1"),
	HX_HCSTRING("distanceModel","\x34","\x40","\xe1","\xd3"),
	HX_HCSTRING("dopplerFactor","\xdd","\x2d","\x05","\x6f"),
	HX_HCSTRING("dopplerVelocity","\xab","\x76","\xcf","\x06"),
	HX_HCSTRING("effectf","\xb5","\xe4","\x4b","\x2e"),
	HX_HCSTRING("effectfv","\x21","\x3a","\x1c","\x54"),
	HX_HCSTRING("effecti","\xb8","\xe4","\x4b","\x2e"),
	HX_HCSTRING("effectiv","\xbe","\x3c","\x1c","\x54"),
	HX_HCSTRING("enable","\x83","\xae","\x87","\xf8"),
	HX_HCSTRING("genSource","\x8b","\x71","\x07","\xb5"),
	HX_HCSTRING("genSources","\x88","\xe8","\x7b","\xb1"),
	HX_HCSTRING("genBuffer","\xb0","\x7d","\x6a","\x53"),
	HX_HCSTRING("genBuffers","\xc3","\x7c","\xc3","\xa9"),
	HX_HCSTRING("getBoolean","\xb2","\x70","\x60","\xcd"),
	HX_HCSTRING("getBooleanv","\x84","\x2b","\x02","\xe7"),
	HX_HCSTRING("getBuffer3f","\x89","\xec","\xf1","\xd2"),
	HX_HCSTRING("getBuffer3i","\x8c","\xec","\xf1","\xd2"),
	HX_HCSTRING("getBufferf","\x70","\x29","\xf2","\x00"),
	HX_HCSTRING("getBufferfv","\x06","\x19","\xf2","\xd2"),
	HX_HCSTRING("getBufferi","\x73","\x29","\xf2","\x00"),
	HX_HCSTRING("getBufferiv","\xa3","\x1b","\xf2","\xd2"),
	HX_HCSTRING("getDouble","\x47","\xb4","\x21","\xaf"),
	HX_HCSTRING("getDoublev","\x4f","\x0a","\x5c","\x8e"),
	HX_HCSTRING("getEnumValue","\x3a","\x9d","\x5d","\x37"),
	HX_HCSTRING("getError","\x52","\xdb","\x00","\xd3"),
	HX_HCSTRING("getErrorString","\xc3","\xc1","\x3b","\x87"),
	HX_HCSTRING("getFilteri","\xbb","\x27","\xa8","\x58"),
	HX_HCSTRING("getFloat","\x26","\xd5","\x6d","\x62"),
	HX_HCSTRING("getFloatv","\x90","\xac","\xac","\xbd"),
	HX_HCSTRING("getInteger","\xc8","\x43","\x7d","\x66"),
	HX_HCSTRING("getIntegerv","\xae","\x0b","\x1e","\x47"),
	HX_HCSTRING("getListener3f","\x7d","\x8e","\x7c","\x85"),
	HX_HCSTRING("getListener3i","\x80","\x8e","\x7c","\x85"),
	HX_HCSTRING("getListenerf","\xfc","\x01","\xe5","\x02"),
	HX_HCSTRING("getListenerfv","\xfa","\xba","\x7c","\x85"),
	HX_HCSTRING("getListeneri","\xff","\x01","\xe5","\x02"),
	HX_HCSTRING("getListeneriv","\x97","\xbd","\x7c","\x85"),
	HX_HCSTRING("getParameter","\x33","\xd2","\x06","\x58"),
	HX_HCSTRING("getProcAddress","\xc8","\xe3","\xa1","\x89"),
	HX_HCSTRING("getSource3f","\x24","\xcd","\x97","\x8c"),
	HX_HCSTRING("getSourcef","\x35","\x95","\xaa","\x08"),
	HX_HCSTRING("getSource3i","\x27","\xcd","\x97","\x8c"),
	HX_HCSTRING("getSourcefv","\xa1","\xf9","\x97","\x8c"),
	HX_HCSTRING("getSourcei","\x38","\x95","\xaa","\x08"),
	HX_HCSTRING("getSourceiv","\x3e","\xfc","\x97","\x8c"),
	HX_HCSTRING("getString","\x07","\xb2","\x86","\x8d"),
	HX_HCSTRING("isBuffer","\x8a","\x58","\xfe","\x28"),
	HX_HCSTRING("isEnabled","\xb7","\x81","\x2f","\x82"),
	HX_HCSTRING("isExtensionPresent","\x46","\xf9","\x2a","\xb4"),
	HX_HCSTRING("isAux","\x3a","\x2b","\x48","\xc1"),
	HX_HCSTRING("isEffect","\x1b","\xf6","\x0c","\xb9"),
	HX_HCSTRING("isFilter","\x42","\xbb","\x9e","\xdd"),
	HX_HCSTRING("isSource","\x65","\x4c","\x9b","\x8a"),
	HX_HCSTRING("listener3f","\x47","\x32","\x0a","\x29"),
	HX_HCSTRING("listener3i","\x4a","\x32","\x0a","\x29"),
	HX_HCSTRING("listenerf","\x72","\x65","\x8e","\xf3"),
	HX_HCSTRING("listenerfv","\xc4","\x5e","\x0a","\x29"),
	HX_HCSTRING("listeneri","\x75","\x65","\x8e","\xf3"),
	HX_HCSTRING("listeneriv","\x61","\x61","\x0a","\x29"),
	HX_HCSTRING("source3f","\x6e","\x0a","\xa4","\x66"),
	HX_HCSTRING("source3i","\x71","\x0a","\xa4","\x66"),
	HX_HCSTRING("sourcef","\x2b","\x0f","\x49","\xb9"),
	HX_HCSTRING("sourcefv","\xeb","\x36","\xa4","\x66"),
	HX_HCSTRING("sourcei","\x2e","\x0f","\x49","\xb9"),
	HX_HCSTRING("filteri","\xb1","\xa1","\x46","\x09"),
	HX_HCSTRING("filterf","\xae","\xa1","\x46","\x09"),
	HX_HCSTRING("sourceiv","\x88","\x39","\xa4","\x66"),
	HX_HCSTRING("sourcePlay","\x6f","\x14","\xbe","\x72"),
	HX_HCSTRING("sourcePlayv","\x27","\xcd","\x93","\xf3"),
	HX_HCSTRING("sourceStop","\x7d","\xd6","\xbf","\x74"),
	HX_HCSTRING("sourceStopv","\x59","\xd7","\x1b","\xb3"),
	HX_HCSTRING("sourceRewind","\x36","\xe5","\x26","\x01"),
	HX_HCSTRING("sourceRewindv","\x80","\xaa","\xe1","\x00"),
	HX_HCSTRING("sourcePause","\x1b","\x9c","\x5d","\xec"),
	HX_HCSTRING("sourcePausev","\xfb","\xfb","\x8a","\xe5"),
	HX_HCSTRING("sourceQueueBuffer","\x56","\x70","\x65","\x56"),
	HX_HCSTRING("sourceQueueBuffers","\x5d","\xdb","\x5c","\x42"),
	HX_HCSTRING("sourceUnqueueBuffer","\xdd","\x29","\x95","\x2e"),
	HX_HCSTRING("sourceUnqueueBuffers","\xf6","\x77","\xef","\x93"),
	HX_HCSTRING("speedOfSound","\x71","\xe7","\x21","\x0a"),
	::String(null())
};

void AL_obj::__register()
{
	hx::Object *dummy = new AL_obj;
	AL_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.media.openal.AL","\x21","\x39","\x77","\x65");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AL_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AL_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AL_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< AL_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AL_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AL_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void AL_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_19_boot)
HXDLIN(  19)		NONE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_20_boot)
HXDLIN(  20)		FALSE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_21_boot)
HXDLIN(  21)		TRUE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_22_boot)
HXDLIN(  22)		SOURCE_RELATIVE = (int)514;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_23_boot)
HXDLIN(  23)		CONE_INNER_ANGLE = (int)4097;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_24_boot)
HXDLIN(  24)		CONE_OUTER_ANGLE = (int)4098;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_25_boot)
HXDLIN(  25)		PITCH = (int)4099;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_26_boot)
HXDLIN(  26)		POSITION = (int)4100;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_27_boot)
HXDLIN(  27)		DIRECTION = (int)4101;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_28_boot)
HXDLIN(  28)		VELOCITY = (int)4102;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_29_boot)
HXDLIN(  29)		LOOPING = (int)4103;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_30_boot)
HXDLIN(  30)		BUFFER = (int)4105;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_31_boot)
HXDLIN(  31)		GAIN = (int)4106;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_32_boot)
HXDLIN(  32)		MIN_GAIN = (int)4109;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_33_boot)
HXDLIN(  33)		MAX_GAIN = (int)4110;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_34_boot)
HXDLIN(  34)		ORIENTATION = (int)4111;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_35_boot)
HXDLIN(  35)		SOURCE_STATE = (int)4112;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_36_boot)
HXDLIN(  36)		INITIAL = (int)4113;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_37_boot)
HXDLIN(  37)		PLAYING = (int)4114;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_38_boot)
HXDLIN(  38)		PAUSED = (int)4115;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_39_boot)
HXDLIN(  39)		STOPPED = (int)4116;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_40_boot)
HXDLIN(  40)		BUFFERS_QUEUED = (int)4117;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_41_boot)
HXDLIN(  41)		BUFFERS_PROCESSED = (int)4118;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_42_boot)
HXDLIN(  42)		REFERENCE_DISTANCE = (int)4128;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_43_boot)
HXDLIN(  43)		ROLLOFF_FACTOR = (int)4129;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_44_boot)
HXDLIN(  44)		CONE_OUTER_GAIN = (int)4130;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_45_boot)
HXDLIN(  45)		MAX_DISTANCE = (int)4131;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_46_boot)
HXDLIN(  46)		SEC_OFFSET = (int)4132;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_47_boot)
HXDLIN(  47)		SAMPLE_OFFSET = (int)4133;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_48_boot)
HXDLIN(  48)		BYTE_OFFSET = (int)4134;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_49_boot)
HXDLIN(  49)		SOURCE_TYPE = (int)4135;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_50_boot)
HXDLIN(  50)		STATIC = (int)4136;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_51_boot)
HXDLIN(  51)		STREAMING = (int)4137;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_52_boot)
HXDLIN(  52)		UNDETERMINED = (int)4144;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_53_boot)
HXDLIN(  53)		FORMAT_MONO8 = (int)4352;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_54_boot)
HXDLIN(  54)		FORMAT_MONO16 = (int)4353;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_55_boot)
HXDLIN(  55)		FORMAT_STEREO8 = (int)4354;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_56_boot)
HXDLIN(  56)		FORMAT_STEREO16 = (int)4355;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_57_boot)
HXDLIN(  57)		FREQUENCY = (int)8193;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_58_boot)
HXDLIN(  58)		BITS = (int)8194;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_59_boot)
HXDLIN(  59)		CHANNELS = (int)8195;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_60_boot)
HXDLIN(  60)		SIZE = (int)8196;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_61_boot)
HXDLIN(  61)		NO_ERROR = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_62_boot)
HXDLIN(  62)		INVALID_NAME = (int)40961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_63_boot)
HXDLIN(  63)		INVALID_ENUM = (int)40962;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_64_boot)
HXDLIN(  64)		INVALID_VALUE = (int)40963;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_65_boot)
HXDLIN(  65)		INVALID_OPERATION = (int)40964;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_66_boot)
HXDLIN(  66)		OUT_OF_MEMORY = (int)40965;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_67_boot)
HXDLIN(  67)		VENDOR = (int)45057;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_68_boot)
HXDLIN(  68)		VERSION = (int)45058;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_69_boot)
HXDLIN(  69)		RENDERER = (int)45059;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_70_boot)
HXDLIN(  70)		EXTENSIONS = (int)45060;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_71_boot)
HXDLIN(  71)		DOPPLER_FACTOR = (int)49152;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_72_boot)
HXDLIN(  72)		SPEED_OF_SOUND = (int)49155;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_73_boot)
HXDLIN(  73)		DOPPLER_VELOCITY = (int)49153;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_74_boot)
HXDLIN(  74)		DISTANCE_MODEL = (int)53248;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_75_boot)
HXDLIN(  75)		INVERSE_DISTANCE = (int)53249;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_76_boot)
HXDLIN(  76)		INVERSE_DISTANCE_CLAMPED = (int)53250;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_77_boot)
HXDLIN(  77)		LINEAR_DISTANCE = (int)53251;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_78_boot)
HXDLIN(  78)		LINEAR_DISTANCE_CLAMPED = (int)53252;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_79_boot)
HXDLIN(  79)		EXPONENT_DISTANCE = (int)53253;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_80_boot)
HXDLIN(  80)		EXPONENT_DISTANCE_CLAMPED = (int)53254;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_83_boot)
HXDLIN(  83)		METERS_PER_UNIT = (int)131076;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_86_boot)
HXDLIN(  86)		DIRECT_FILTER = (int)131077;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_87_boot)
HXDLIN(  87)		AUXILIARY_SEND_FILTER = (int)131078;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_88_boot)
HXDLIN(  88)		AIR_ABSORPTION_FACTOR = (int)131079;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_89_boot)
HXDLIN(  89)		ROOM_ROLLOFF_FACTOR = (int)131080;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_90_boot)
HXDLIN(  90)		CONE_OUTER_GAINHF = (int)131081;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_91_boot)
HXDLIN(  91)		DIRECT_FILTER_GAINHF_AUTO = (int)131082;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_92_boot)
HXDLIN(  92)		AUXILIARY_SEND_FILTER_GAIN_AUTO = (int)131083;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_93_boot)
HXDLIN(  93)		AUXILIARY_SEND_FILTER_GAINHF_AUTO = (int)131084;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_100_boot)
HXDLIN( 100)		REVERB_DENSITY = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_101_boot)
HXDLIN( 101)		REVERB_DIFFUSION = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_102_boot)
HXDLIN( 102)		REVERB_GAIN = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_103_boot)
HXDLIN( 103)		REVERB_GAINHF = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_104_boot)
HXDLIN( 104)		REVERB_DECAY_TIME = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_105_boot)
HXDLIN( 105)		REVERB_DECAY_HFRATIO = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_106_boot)
HXDLIN( 106)		REVERB_REFLECTIONS_GAIN = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_107_boot)
HXDLIN( 107)		REVERB_REFLECTIONS_DELAY = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_108_boot)
HXDLIN( 108)		REVERB_LATE_REVERB_GAIN = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_109_boot)
HXDLIN( 109)		REVERB_LATE_REVERB_DELAY = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_110_boot)
HXDLIN( 110)		REVERB_AIR_ABSORPTION_GAINHF = (int)11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_111_boot)
HXDLIN( 111)		REVERB_ROOM_ROLLOFF_FACTOR = (int)12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_112_boot)
HXDLIN( 112)		REVERB_DECAY_HFLIMIT = (int)13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_115_boot)
HXDLIN( 115)		EAXREVERB_DENSITY = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_116_boot)
HXDLIN( 116)		EAXREVERB_DIFFUSION = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_117_boot)
HXDLIN( 117)		EAXREVERB_GAIN = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_118_boot)
HXDLIN( 118)		EAXREVERB_GAINHF = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_119_boot)
HXDLIN( 119)		EAXREVERB_GAINLF = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_120_boot)
HXDLIN( 120)		EAXREVERB_DECAY_TIME = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_121_boot)
HXDLIN( 121)		EAXREVERB_DECAY_HFRATIO = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_122_boot)
HXDLIN( 122)		EAXREVERB_DECAY_LFRATIO = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_123_boot)
HXDLIN( 123)		EAXREVERB_REFLECTIONS_GAIN = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_124_boot)
HXDLIN( 124)		EAXREVERB_REFLECTIONS_DELAY = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_125_boot)
HXDLIN( 125)		EAXREVERB_REFLECTIONS_PAN = (int)11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_126_boot)
HXDLIN( 126)		EAXREVERB_LATE_REVERB_GAIN = (int)12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_127_boot)
HXDLIN( 127)		EAXREVERB_LATE_REVERB_DELAY = (int)13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_128_boot)
HXDLIN( 128)		EAXREVERB_LATE_REVERB_PAN = (int)14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_129_boot)
HXDLIN( 129)		EAXREVERB_ECHO_TIME = (int)15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_130_boot)
HXDLIN( 130)		EAXREVERB_ECHO_DEPTH = (int)16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_131_boot)
HXDLIN( 131)		EAXREVERB_MODULATION_TIME = (int)17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_132_boot)
HXDLIN( 132)		EAXREVERB_MODULATION_DEPTH = (int)18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_133_boot)
HXDLIN( 133)		EAXREVERB_AIR_ABSORPTION_GAINHF = (int)19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_134_boot)
HXDLIN( 134)		EAXREVERB_HFREFERENCE = (int)20;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_135_boot)
HXDLIN( 135)		EAXREVERB_LFREFERENCE = (int)21;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_136_boot)
HXDLIN( 136)		EAXREVERB_ROOM_ROLLOFF_FACTOR = (int)22;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_137_boot)
HXDLIN( 137)		EAXREVERB_DECAY_HFLIMIT = (int)23;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_140_boot)
HXDLIN( 140)		CHORUS_WAVEFORM = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_141_boot)
HXDLIN( 141)		CHORUS_PHASE = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_142_boot)
HXDLIN( 142)		CHORUS_RATE = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_143_boot)
HXDLIN( 143)		CHORUS_DEPTH = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_144_boot)
HXDLIN( 144)		CHORUS_FEEDBACK = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_145_boot)
HXDLIN( 145)		CHORUS_DELAY = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_148_boot)
HXDLIN( 148)		DISTORTION_EDGE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_149_boot)
HXDLIN( 149)		DISTORTION_GAIN = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_150_boot)
HXDLIN( 150)		DISTORTION_LOWPASS_CUTOFF = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_151_boot)
HXDLIN( 151)		DISTORTION_EQCENTER = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_152_boot)
HXDLIN( 152)		DISTORTION_EQBANDWIDTH = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_155_boot)
HXDLIN( 155)		ECHO_DELAY = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_156_boot)
HXDLIN( 156)		ECHO_LRDELAY = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_157_boot)
HXDLIN( 157)		ECHO_DAMPING = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_158_boot)
HXDLIN( 158)		ECHO_FEEDBACK = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_159_boot)
HXDLIN( 159)		ECHO_SPREAD = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_162_boot)
HXDLIN( 162)		FLANGER_WAVEFORM = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_163_boot)
HXDLIN( 163)		FLANGER_PHASE = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_164_boot)
HXDLIN( 164)		FLANGER_RATE = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_165_boot)
HXDLIN( 165)		FLANGER_DEPTH = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_166_boot)
HXDLIN( 166)		FLANGER_FEEDBACK = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_167_boot)
HXDLIN( 167)		FLANGER_DELAY = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_170_boot)
HXDLIN( 170)		FREQUENCY_SHIFTER_FREQUENCY = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_171_boot)
HXDLIN( 171)		FREQUENCY_SHIFTER_LEFT_DIRECTION = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_172_boot)
HXDLIN( 172)		FREQUENCY_SHIFTER_RIGHT_DIRECTION = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_175_boot)
HXDLIN( 175)		VOCAL_MORPHER_PHONEMEA = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_176_boot)
HXDLIN( 176)		VOCAL_MORPHER_PHONEMEA_COARSE_TUNING = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_177_boot)
HXDLIN( 177)		VOCAL_MORPHER_PHONEMEB = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_178_boot)
HXDLIN( 178)		VOCAL_MORPHER_PHONEMEB_COARSE_TUNING = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_179_boot)
HXDLIN( 179)		VOCAL_MORPHER_WAVEFORM = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_180_boot)
HXDLIN( 180)		VOCAL_MORPHER_RATE = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_183_boot)
HXDLIN( 183)		PITCH_SHIFTER_COARSE_TUNE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_184_boot)
HXDLIN( 184)		PITCH_SHIFTER_FINE_TUNE = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_187_boot)
HXDLIN( 187)		RING_MODULATOR_FREQUENCY = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_188_boot)
HXDLIN( 188)		RING_MODULATOR_HIGHPASS_CUTOFF = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_189_boot)
HXDLIN( 189)		RING_MODULATOR_WAVEFORM = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_192_boot)
HXDLIN( 192)		AUTOWAH_ATTACK_TIME = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_193_boot)
HXDLIN( 193)		AUTOWAH_RELEASE_TIME = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_194_boot)
HXDLIN( 194)		AUTOWAH_RESONANCE = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_195_boot)
HXDLIN( 195)		AUTOWAH_PEAK_GAIN = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_198_boot)
HXDLIN( 198)		COMPRESSOR_ONOFF = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_201_boot)
HXDLIN( 201)		EQUALIZER_LOW_GAIN = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_202_boot)
HXDLIN( 202)		EQUALIZER_LOW_CUTOFF = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_203_boot)
HXDLIN( 203)		EQUALIZER_MID1_GAIN = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_204_boot)
HXDLIN( 204)		EQUALIZER_MID1_CENTER = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_205_boot)
HXDLIN( 205)		EQUALIZER_MID1_WIDTH = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_206_boot)
HXDLIN( 206)		EQUALIZER_MID2_GAIN = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_207_boot)
HXDLIN( 207)		EQUALIZER_MID2_CENTER = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_208_boot)
HXDLIN( 208)		EQUALIZER_MID2_WIDTH = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_209_boot)
HXDLIN( 209)		EQUALIZER_HIGH_GAIN = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_210_boot)
HXDLIN( 210)		EQUALIZER_HIGH_CUTOFF = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_213_boot)
HXDLIN( 213)		EFFECT_FIRST_PARAMETER = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_214_boot)
HXDLIN( 214)		EFFECT_LAST_PARAMETER = (int)32768;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_215_boot)
HXDLIN( 215)		EFFECT_TYPE = (int)32769;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_218_boot)
HXDLIN( 218)		EFFECT_NULL = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_219_boot)
HXDLIN( 219)		EFFECT_EAXREVERB = (int)32768;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_220_boot)
HXDLIN( 220)		EFFECT_REVERB = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_221_boot)
HXDLIN( 221)		EFFECT_CHORUS = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_222_boot)
HXDLIN( 222)		EFFECT_DISTORTION = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_223_boot)
HXDLIN( 223)		EFFECT_ECHO = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_224_boot)
HXDLIN( 224)		EFFECT_FLANGER = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_225_boot)
HXDLIN( 225)		EFFECT_FREQUENCY_SHIFTER = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_226_boot)
HXDLIN( 226)		EFFECT_VOCAL_MORPHER = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_227_boot)
HXDLIN( 227)		EFFECT_PITCH_SHIFTER = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_228_boot)
HXDLIN( 228)		EFFECT_RING_MODULATOR = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_229_boot)
HXDLIN( 229)		FFECT_AUTOWAH = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_230_boot)
HXDLIN( 230)		EFFECT_COMPRESSOR = (int)11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_231_boot)
HXDLIN( 231)		EFFECT_EQUALIZER = (int)12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_234_boot)
HXDLIN( 234)		EFFECTSLOT_EFFECT = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_235_boot)
HXDLIN( 235)		EFFECTSLOT_GAIN = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_236_boot)
HXDLIN( 236)		EFFECTSLOT_AUXILIARY_SEND_AUTO = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_246_boot)
HXDLIN( 246)		LOWPASS_GAIN = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_247_boot)
HXDLIN( 247)		LOWPASS_GAINHF = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_250_boot)
HXDLIN( 250)		HIGHPASS_GAIN = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_251_boot)
HXDLIN( 251)		HIGHPASS_GAINLF = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_254_boot)
HXDLIN( 254)		BANDPASS_GAIN = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_255_boot)
HXDLIN( 255)		BANDPASS_GAINLF = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_256_boot)
HXDLIN( 256)		BANDPASS_GAINHF = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_259_boot)
HXDLIN( 259)		FILTER_FIRST_PARAMETER = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_260_boot)
HXDLIN( 260)		FILTER_LAST_PARAMETER = (int)32768;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_261_boot)
HXDLIN( 261)		FILTER_TYPE = (int)32769;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_264_boot)
HXDLIN( 264)		FILTER_NULL = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_265_boot)
HXDLIN( 265)		FILTER_LOWPASS = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_266_boot)
HXDLIN( 266)		FILTER_HIGHPASS = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_267_boot)
HXDLIN( 267)		FILTER_BANDPASS = (int)3;
            	}
}

} // end namespace lime
} // end namespace media
} // end namespace openal
