// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_ATC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_ATC_texture.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7a228448205ba8a3_6_new,"lime.graphics.opengl.ext.AMD_compressed_ATC_texture","new",0xe60aeca9,"lime.graphics.opengl.ext.AMD_compressed_ATC_texture.new","lime/graphics/opengl/ext/AMD_compressed_ATC_texture.hx",6,0x5b741105)
namespace lime{
namespace graphics{
namespace opengl{
namespace ext{

void AMD_compressed_ATC_texture_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_7a228448205ba8a3_6_new)
HXLINE(  11)		this->ATC_RGBA_INTERPOLATED_ALPHA_AMD = (int)34798;
HXLINE(  10)		this->ATC_RGBA_EXPLICIT_ALPHA_AMD = (int)35987;
HXLINE(   9)		this->ATC_RGB_AMD = (int)35986;
            	}

Dynamic AMD_compressed_ATC_texture_obj::__CreateEmpty() { return new AMD_compressed_ATC_texture_obj; }

void *AMD_compressed_ATC_texture_obj::_hx_vtable = 0;

Dynamic AMD_compressed_ATC_texture_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AMD_compressed_ATC_texture_obj > _hx_result = new AMD_compressed_ATC_texture_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AMD_compressed_ATC_texture_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6edfb27f;
}


AMD_compressed_ATC_texture_obj::AMD_compressed_ATC_texture_obj()
{
}

hx::Val AMD_compressed_ATC_texture_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"ATC_RGB_AMD") ) { return hx::Val( ATC_RGB_AMD ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"ATC_RGBA_EXPLICIT_ALPHA_AMD") ) { return hx::Val( ATC_RGBA_EXPLICIT_ALPHA_AMD ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"ATC_RGBA_INTERPOLATED_ALPHA_AMD") ) { return hx::Val( ATC_RGBA_INTERPOLATED_ALPHA_AMD ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val AMD_compressed_ATC_texture_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"ATC_RGB_AMD") ) { ATC_RGB_AMD=inValue.Cast< int >(); return inValue; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"ATC_RGBA_EXPLICIT_ALPHA_AMD") ) { ATC_RGBA_EXPLICIT_ALPHA_AMD=inValue.Cast< int >(); return inValue; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"ATC_RGBA_INTERPOLATED_ALPHA_AMD") ) { ATC_RGBA_INTERPOLATED_ALPHA_AMD=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AMD_compressed_ATC_texture_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("ATC_RGB_AMD","\xb7","\x31","\x75","\x34"));
	outFields->push(HX_HCSTRING("ATC_RGBA_EXPLICIT_ALPHA_AMD","\x28","\x5c","\x13","\x57"));
	outFields->push(HX_HCSTRING("ATC_RGBA_INTERPOLATED_ALPHA_AMD","\x77","\xdc","\xe4","\x2a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo AMD_compressed_ATC_texture_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(AMD_compressed_ATC_texture_obj,ATC_RGB_AMD),HX_HCSTRING("ATC_RGB_AMD","\xb7","\x31","\x75","\x34")},
	{hx::fsInt,(int)offsetof(AMD_compressed_ATC_texture_obj,ATC_RGBA_EXPLICIT_ALPHA_AMD),HX_HCSTRING("ATC_RGBA_EXPLICIT_ALPHA_AMD","\x28","\x5c","\x13","\x57")},
	{hx::fsInt,(int)offsetof(AMD_compressed_ATC_texture_obj,ATC_RGBA_INTERPOLATED_ALPHA_AMD),HX_HCSTRING("ATC_RGBA_INTERPOLATED_ALPHA_AMD","\x77","\xdc","\xe4","\x2a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *AMD_compressed_ATC_texture_obj_sStaticStorageInfo = 0;
#endif

static ::String AMD_compressed_ATC_texture_obj_sMemberFields[] = {
	HX_HCSTRING("ATC_RGB_AMD","\xb7","\x31","\x75","\x34"),
	HX_HCSTRING("ATC_RGBA_EXPLICIT_ALPHA_AMD","\x28","\x5c","\x13","\x57"),
	HX_HCSTRING("ATC_RGBA_INTERPOLATED_ALPHA_AMD","\x77","\xdc","\xe4","\x2a"),
	::String(null()) };

static void AMD_compressed_ATC_texture_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AMD_compressed_ATC_texture_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AMD_compressed_ATC_texture_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AMD_compressed_ATC_texture_obj::__mClass,"__mClass");
};

#endif

hx::Class AMD_compressed_ATC_texture_obj::__mClass;

void AMD_compressed_ATC_texture_obj::__register()
{
	hx::Object *dummy = new AMD_compressed_ATC_texture_obj;
	AMD_compressed_ATC_texture_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.opengl.ext.AMD_compressed_ATC_texture","\x37","\x64","\xc3","\xec");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AMD_compressed_ATC_texture_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(AMD_compressed_ATC_texture_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< AMD_compressed_ATC_texture_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AMD_compressed_ATC_texture_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AMD_compressed_ATC_texture_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AMD_compressed_ATC_texture_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace opengl
} // end namespace ext
