// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7de8773c9a509473_43_new,"haxe.io.Bytes","new",0x3938d57d,"haxe.io.Bytes.new","haxe/io/Bytes.hx",43,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_59_get,"haxe.io.Bytes","get",0x393385b3,"haxe.io.Bytes.get","haxe/io/Bytes.hx",59,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_77_set,"haxe.io.Bytes","set",0x393ca0bf,"haxe.io.Bytes.set","haxe/io/Bytes.hx",77,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_89_blit,"haxe.io.Bytes","blit",0xd098ac78,"haxe.io.Bytes.blit","haxe/io/Bytes.hx",89,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_136_fill,"haxe.io.Bytes","fill",0xd33b42c6,"haxe.io.Bytes.fill","haxe/io/Bytes.hx",136,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_143_sub,"haxe.io.Bytes","sub",0x393cae9d,"haxe.io.Bytes.sub","haxe/io/Bytes.hx",143,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_205_compare,"haxe.io.Bytes","compare",0x46537042,"haxe.io.Bytes.compare","haxe/io/Bytes.hx",205,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_223_getDouble,"haxe.io.Bytes","getDouble",0xc306ed24,"haxe.io.Bytes.getDouble","haxe/io/Bytes.hx",223,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_242_getFloat,"haxe.io.Bytes","getFloat",0x2c9026e9,"haxe.io.Bytes.getFloat","haxe/io/Bytes.hx",242,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_261_setDouble,"haxe.io.Bytes","setDouble",0xa657d930,"haxe.io.Bytes.setDouble","haxe/io/Bytes.hx",261,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_284_setFloat,"haxe.io.Bytes","setFloat",0xdaed805d,"haxe.io.Bytes.setFloat","haxe/io/Bytes.hx",284,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_307_getUInt16,"haxe.io.Bytes","getUInt16",0xa94afaf2,"haxe.io.Bytes.getUInt16","haxe/io/Bytes.hx",307,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_314_setUInt16,"haxe.io.Bytes","setUInt16",0x8c9be6fe,"haxe.io.Bytes.setUInt16","haxe/io/Bytes.hx",314,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_336_getInt32,"haxe.io.Bytes","getInt32",0xe819f49b,"haxe.io.Bytes.getInt32","haxe/io/Bytes.hx",336,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_344_getInt64,"haxe.io.Bytes","getInt64",0xe819f73a,"haxe.io.Bytes.getInt64","haxe/io/Bytes.hx",344,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_350_setInt32,"haxe.io.Bytes","setInt32",0x96774e0f,"haxe.io.Bytes.setInt32","haxe/io/Bytes.hx",350,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_364_setInt64,"haxe.io.Bytes","setInt64",0x967750ae,"haxe.io.Bytes.setInt64","haxe/io/Bytes.hx",364,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_369_getString,"haxe.io.Bytes","getString",0xa16beae4,"haxe.io.Bytes.getString","haxe/io/Bytes.hx",369,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_429_readString,"haxe.io.Bytes","readString",0x5f58954a,"haxe.io.Bytes.readString","haxe/io/Bytes.hx",429,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_449_toString,"haxe.io.Bytes","toString",0x0291226f,"haxe.io.Bytes.toString","haxe/io/Bytes.hx",449,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_453_toHex,"haxe.io.Bytes","toHex",0x14173a7d,"haxe.io.Bytes.toHex","haxe/io/Bytes.hx",453,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_468_getData,"haxe.io.Bytes","getData",0xd7d05d7d,"haxe.io.Bytes.getData","haxe/io/Bytes.hx",468,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_471_alloc,"haxe.io.Bytes","alloc",0x2199ead2,"haxe.io.Bytes.alloc","haxe/io/Bytes.hx",471,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_499_ofString,"haxe.io.Bytes","ofString",0x6e53bb0b,"haxe.io.Bytes.ofString","haxe/io/Bytes.hx",499,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_570_ofData,"haxe.io.Bytes","ofData",0x4f3005e4,"haxe.io.Bytes.ofData","haxe/io/Bytes.hx",570,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_586_fastGet,"haxe.io.Bytes","fastGet",0xa10d56f7,"haxe.io.Bytes.fastGet","haxe/io/Bytes.hx",586,0x68bfff33)
namespace haxe{
namespace io{

void Bytes_obj::__construct(int length,::Array< unsigned char > b){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_43_new)
HXLINE(  44)		this->length = length;
HXLINE(  45)		this->b = b;
            	}

Dynamic Bytes_obj::__CreateEmpty() { return new Bytes_obj; }

void *Bytes_obj::_hx_vtable = 0;

Dynamic Bytes_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Bytes_obj > _hx_result = new Bytes_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Bytes_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5b931193;
}

int Bytes_obj::get(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_59_get)
HXDLIN(  59)		return this->b->__get(pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,get,return )

void Bytes_obj::set(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_77_set)
HXDLIN(  77)		this->b[pos] = v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,set,(void))

void Bytes_obj::blit(int pos, ::haxe::io::Bytes src,int srcpos,int len){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_89_blit)
HXLINE(  91)		bool _hx_tmp;
HXDLIN(  91)		bool _hx_tmp1;
HXDLIN(  91)		bool _hx_tmp2;
HXDLIN(  91)		bool _hx_tmp3;
HXDLIN(  91)		if ((pos >= (int)0)) {
HXLINE(  91)			_hx_tmp3 = (srcpos < (int)0);
            		}
            		else {
HXLINE(  91)			_hx_tmp3 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp3)) {
HXLINE(  91)			_hx_tmp2 = (len < (int)0);
            		}
            		else {
HXLINE(  91)			_hx_tmp2 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp2)) {
HXLINE(  91)			_hx_tmp1 = ((pos + len) > this->length);
            		}
            		else {
HXLINE(  91)			_hx_tmp1 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp1)) {
HXLINE(  91)			_hx_tmp = ((srcpos + len) > src->length);
            		}
            		else {
HXLINE(  91)			_hx_tmp = true;
            		}
HXDLIN(  91)		if (_hx_tmp) {
HXLINE(  91)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 107)		this->b->blit(pos,src->b,srcpos,len);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Bytes_obj,blit,(void))

void Bytes_obj::fill(int pos,int len,int value){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_136_fill)
HXDLIN( 136)		::__hxcpp_memory_memset(this->b,pos,len,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Bytes_obj,fill,(void))

 ::haxe::io::Bytes Bytes_obj::sub(int pos,int len){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_143_sub)
HXLINE( 145)		bool _hx_tmp;
HXDLIN( 145)		bool _hx_tmp1;
HXDLIN( 145)		if ((pos >= (int)0)) {
HXLINE( 145)			_hx_tmp1 = (len < (int)0);
            		}
            		else {
HXLINE( 145)			_hx_tmp1 = true;
            		}
HXDLIN( 145)		if (!(_hx_tmp1)) {
HXLINE( 145)			_hx_tmp = ((pos + len) > this->length);
            		}
            		else {
HXLINE( 145)			_hx_tmp = true;
            		}
HXDLIN( 145)		if (_hx_tmp) {
HXLINE( 145)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 167)		::Array< unsigned char > _hx_tmp2 = this->b;
HXDLIN( 167)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,len,_hx_tmp2->slice(pos,(pos + len)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,sub,return )

int Bytes_obj::compare( ::haxe::io::Bytes other){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_205_compare)
HXDLIN( 205)		return this->b->memcmp(other->b);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,compare,return )

Float Bytes_obj::getDouble(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_223_getDouble)
HXLINE( 230)		bool _hx_tmp;
HXDLIN( 230)		if ((pos >= (int)0)) {
HXLINE( 230)			_hx_tmp = ((pos + (int)8) > this->length);
            		}
            		else {
HXLINE( 230)			_hx_tmp = true;
            		}
HXDLIN( 230)		if (_hx_tmp) {
HXLINE( 230)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 231)		return ::__hxcpp_memory_get_double(this->b,pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getDouble,return )

Float Bytes_obj::getFloat(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_242_getFloat)
HXLINE( 249)		bool _hx_tmp;
HXDLIN( 249)		if ((pos >= (int)0)) {
HXLINE( 249)			_hx_tmp = ((pos + (int)4) > this->length);
            		}
            		else {
HXLINE( 249)			_hx_tmp = true;
            		}
HXDLIN( 249)		if (_hx_tmp) {
HXLINE( 249)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 250)		return ::__hxcpp_memory_get_float(this->b,pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getFloat,return )

void Bytes_obj::setDouble(int pos,Float v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_261_setDouble)
HXLINE( 270)		bool _hx_tmp;
HXDLIN( 270)		if ((pos >= (int)0)) {
HXLINE( 270)			_hx_tmp = ((pos + (int)8) > this->length);
            		}
            		else {
HXLINE( 270)			_hx_tmp = true;
            		}
HXDLIN( 270)		if (_hx_tmp) {
HXLINE( 270)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 271)		::__hxcpp_memory_set_double(this->b,pos,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setDouble,(void))

void Bytes_obj::setFloat(int pos,Float v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_284_setFloat)
HXLINE( 293)		bool _hx_tmp;
HXDLIN( 293)		if ((pos >= (int)0)) {
HXLINE( 293)			_hx_tmp = ((pos + (int)4) > this->length);
            		}
            		else {
HXLINE( 293)			_hx_tmp = true;
            		}
HXDLIN( 293)		if (_hx_tmp) {
HXLINE( 293)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 294)		::__hxcpp_memory_set_float(this->b,pos,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setFloat,(void))

int Bytes_obj::getUInt16(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_307_getUInt16)
HXDLIN( 307)		int _hx_tmp = this->b->__get(pos);
HXDLIN( 307)		::Array< unsigned char > _hx_tmp1 = this->b;
HXDLIN( 307)		return ((int)_hx_tmp | (int)((int)_hx_tmp1->__get((pos + (int)1)) << (int)(int)8));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getUInt16,return )

void Bytes_obj::setUInt16(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_314_setUInt16)
HXLINE( 318)		this->b[pos] = v;
HXLINE( 319)		::Array< unsigned char > _hx_tmp = this->b;
HXDLIN( 319)		_hx_tmp[(pos + (int)1)] = ((int)v >> (int)(int)8);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setUInt16,(void))

int Bytes_obj::getInt32(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_336_getInt32)
HXDLIN( 336)		int _hx_tmp = this->b->__get(pos);
HXDLIN( 336)		::Array< unsigned char > _hx_tmp1 = this->b;
HXDLIN( 336)		int _hx_tmp2 = ((int)_hx_tmp | (int)((int)_hx_tmp1->__get((pos + (int)1)) << (int)(int)8));
HXDLIN( 336)		::Array< unsigned char > _hx_tmp3 = this->b;
HXDLIN( 336)		int _hx_tmp4 = ((int)_hx_tmp2 | (int)((int)_hx_tmp3->__get((pos + (int)2)) << (int)(int)16));
HXDLIN( 336)		::Array< unsigned char > _hx_tmp5 = this->b;
HXDLIN( 336)		return ((int)_hx_tmp4 | (int)((int)_hx_tmp5->__get((pos + (int)3)) << (int)(int)24));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getInt32,return )

 cpp::Int64Struct Bytes_obj::getInt64(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_344_getInt64)
HXDLIN( 344)		int pos1 = (pos + (int)4);
HXDLIN( 344)		int high = this->b->__get(pos1);
HXDLIN( 344)		::Array< unsigned char > high1 = this->b;
HXDLIN( 344)		int high2 = ((int)high | (int)((int)high1->__get((pos1 + (int)1)) << (int)(int)8));
HXDLIN( 344)		::Array< unsigned char > high3 = this->b;
HXDLIN( 344)		int high4 = ((int)high2 | (int)((int)high3->__get((pos1 + (int)2)) << (int)(int)16));
HXDLIN( 344)		::Array< unsigned char > high5 = this->b;
HXDLIN( 344)		int low = this->b->__get(pos);
HXDLIN( 344)		::Array< unsigned char > low1 = this->b;
HXDLIN( 344)		int low2 = ((int)low | (int)((int)low1->__get((pos + (int)1)) << (int)(int)8));
HXDLIN( 344)		::Array< unsigned char > low3 = this->b;
HXDLIN( 344)		int low4 = ((int)low2 | (int)((int)low3->__get((pos + (int)2)) << (int)(int)16));
HXDLIN( 344)		::Array< unsigned char > low5 = this->b;
HXDLIN( 344)		return _hx_int64_make(((int)high4 | (int)((int)high5->__get((pos1 + (int)3)) << (int)(int)24)),((int)low4 | (int)((int)low5->__get((pos + (int)3)) << (int)(int)24)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getInt64,return )

void Bytes_obj::setInt32(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_350_setInt32)
HXLINE( 354)		::Array< unsigned char > _hx_tmp = this->b;
HXDLIN( 354)		_hx_tmp[pos] = ((int)v & (int)(int)255);
HXLINE( 355)		::Array< unsigned char > _hx_tmp1 = this->b;
HXDLIN( 355)		_hx_tmp1[(pos + (int)1)] = ((int)((int)v >> (int)(int)8) & (int)(int)255);
HXLINE( 356)		::Array< unsigned char > _hx_tmp2 = this->b;
HXDLIN( 356)		_hx_tmp2[(pos + (int)2)] = ((int)((int)v >> (int)(int)16) & (int)(int)255);
HXLINE( 357)		::Array< unsigned char > _hx_tmp3 = this->b;
HXDLIN( 357)		_hx_tmp3[(pos + (int)3)] = ((int)hx::UShr(v,(int)24) & (int)(int)255);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setInt32,(void))

void Bytes_obj::setInt64(int pos, cpp::Int64Struct v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_364_setInt64)
HXLINE( 365)		{
HXLINE( 365)			int v1 = _hx_int64_low(v);
HXDLIN( 365)			::Array< unsigned char > _hx_tmp = this->b;
HXDLIN( 365)			_hx_tmp[pos] = ((int)v1 & (int)(int)255);
HXDLIN( 365)			::Array< unsigned char > _hx_tmp1 = this->b;
HXDLIN( 365)			_hx_tmp1[(pos + (int)1)] = ((int)((int)v1 >> (int)(int)8) & (int)(int)255);
HXDLIN( 365)			::Array< unsigned char > _hx_tmp2 = this->b;
HXDLIN( 365)			_hx_tmp2[(pos + (int)2)] = ((int)((int)v1 >> (int)(int)16) & (int)(int)255);
HXDLIN( 365)			::Array< unsigned char > _hx_tmp3 = this->b;
HXDLIN( 365)			_hx_tmp3[(pos + (int)3)] = ((int)hx::UShr(v1,(int)24) & (int)(int)255);
            		}
HXLINE( 366)		{
HXLINE( 366)			int pos1 = (pos + (int)4);
HXDLIN( 366)			int v2 = _hx_int64_high(v);
HXDLIN( 366)			::Array< unsigned char > _hx_tmp4 = this->b;
HXDLIN( 366)			_hx_tmp4[pos1] = ((int)v2 & (int)(int)255);
HXDLIN( 366)			::Array< unsigned char > _hx_tmp5 = this->b;
HXDLIN( 366)			_hx_tmp5[(pos1 + (int)1)] = ((int)((int)v2 >> (int)(int)8) & (int)(int)255);
HXDLIN( 366)			::Array< unsigned char > _hx_tmp6 = this->b;
HXDLIN( 366)			_hx_tmp6[(pos1 + (int)2)] = ((int)((int)v2 >> (int)(int)16) & (int)(int)255);
HXDLIN( 366)			::Array< unsigned char > _hx_tmp7 = this->b;
HXDLIN( 366)			_hx_tmp7[(pos1 + (int)3)] = ((int)hx::UShr(v2,(int)24) & (int)(int)255);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setInt64,(void))

::String Bytes_obj::getString(int pos,int len){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_369_getString)
HXLINE( 371)		bool _hx_tmp;
HXDLIN( 371)		bool _hx_tmp1;
HXDLIN( 371)		if ((pos >= (int)0)) {
HXLINE( 371)			_hx_tmp1 = (len < (int)0);
            		}
            		else {
HXLINE( 371)			_hx_tmp1 = true;
            		}
HXDLIN( 371)		if (!(_hx_tmp1)) {
HXLINE( 371)			_hx_tmp = ((pos + len) > this->length);
            		}
            		else {
HXLINE( 371)			_hx_tmp = true;
            		}
HXDLIN( 371)		if (_hx_tmp) {
HXLINE( 371)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 381)		::String result = HX_("",00,00,00,00);
HXLINE( 382)		::__hxcpp_string_of_bytes(this->b,result,pos,len);
HXLINE( 383)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,getString,return )

::String Bytes_obj::readString(int pos,int len){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_429_readString)
HXDLIN( 429)		return this->getString(pos,len);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,readString,return )

::String Bytes_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_449_toString)
HXDLIN( 449)		return this->getString((int)0,this->length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,toString,return )

::String Bytes_obj::toHex(){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_453_toHex)
HXLINE( 454)		 ::StringBuf s =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 455)		::Array< ::Dynamic> chars = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 456)		::String str = HX_("0123456789abcdef",68,7e,d5,ef);
HXLINE( 457)		{
HXLINE( 457)			int _g1 = (int)0;
HXDLIN( 457)			int _g = str.length;
HXDLIN( 457)			while((_g1 < _g)){
HXLINE( 457)				_g1 = (_g1 + (int)1);
HXDLIN( 457)				int i = (_g1 - (int)1);
HXLINE( 458)				chars->push(str.charCodeAt(i));
            			}
            		}
HXLINE( 459)		{
HXLINE( 459)			int _g11 = (int)0;
HXDLIN( 459)			int _g2 = this->length;
HXDLIN( 459)			while((_g11 < _g2)){
HXLINE( 459)				_g11 = (_g11 + (int)1);
HXDLIN( 459)				int i1 = (_g11 - (int)1);
HXLINE( 460)				int c = this->b->__get(i1);
HXLINE( 461)				{
HXLINE( 461)					int c1 = chars->__get(((int)c >> (int)(int)4));
HXDLIN( 461)					if (hx::IsNull( s->charBuf )) {
HXLINE( 461)						s->charBuf = ::Array_obj< char >::__new();
            					}
HXDLIN( 461)					s->charBuf->push(c1);
            				}
HXLINE( 462)				{
HXLINE( 462)					int c2 = chars->__get(((int)c & (int)(int)15));
HXDLIN( 462)					if (hx::IsNull( s->charBuf )) {
HXLINE( 462)						s->charBuf = ::Array_obj< char >::__new();
            					}
HXDLIN( 462)					s->charBuf->push(c2);
            				}
            			}
            		}
HXLINE( 464)		return s->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,toHex,return )

::Array< unsigned char > Bytes_obj::getData(){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_468_getData)
HXDLIN( 468)		return this->b;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,getData,return )

 ::haxe::io::Bytes Bytes_obj::alloc(int length){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_471_alloc)
HXLINE( 481)		::Array< unsigned char > a = ::Array_obj< unsigned char >::__new();
HXLINE( 482)		if ((length > (int)0)) {
HXLINE( 482)			_hx_array_set_size_exact(a,length);
            		}
HXLINE( 483)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,length,a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,alloc,return )

 ::haxe::io::Bytes Bytes_obj::ofString(::String s){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_499_ofString)
HXLINE( 510)		::Array< unsigned char > a = ::Array_obj< unsigned char >::__new();
HXLINE( 511)		::__hxcpp_bytes_of_string(a,s);
HXLINE( 512)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,a->length,a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,ofString,return )

 ::haxe::io::Bytes Bytes_obj::ofData(::Array< unsigned char > b){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_570_ofData)
HXDLIN( 570)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,b->length,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,ofData,return )

int Bytes_obj::fastGet(::Array< unsigned char > b,int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_586_fastGet)
HXDLIN( 586)		return ( (int)(_hx_array_unsafe_get(b,pos)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,fastGet,return )


hx::ObjectPtr< Bytes_obj > Bytes_obj::__new(int length,::Array< unsigned char > b) {
	hx::ObjectPtr< Bytes_obj > __this = new Bytes_obj();
	__this->__construct(length,b);
	return __this;
}

hx::ObjectPtr< Bytes_obj > Bytes_obj::__alloc(hx::Ctx *_hx_ctx,int length,::Array< unsigned char > b) {
	Bytes_obj *__this = (Bytes_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Bytes_obj), true, "haxe.io.Bytes"));
	*(void **)__this = Bytes_obj::_hx_vtable;
	__this->__construct(length,b);
	return __this;
}

Bytes_obj::Bytes_obj()
{
}

void Bytes_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Bytes);
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_END_CLASS();
}

void Bytes_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(length,"length");
	HX_VISIT_MEMBER_NAME(b,"b");
}

hx::Val Bytes_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"blit") ) { return hx::Val( blit_dyn() ); }
		if (HX_FIELD_EQ(inName,"fill") ) { return hx::Val( fill_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toHex") ) { return hx::Val( toHex_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compare") ) { return hx::Val( compare_dyn() ); }
		if (HX_FIELD_EQ(inName,"getData") ) { return hx::Val( getData_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getFloat") ) { return hx::Val( getFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat") ) { return hx::Val( setFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt32") ) { return hx::Val( getInt32_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt64") ) { return hx::Val( getInt64_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt32") ) { return hx::Val( setInt32_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt64") ) { return hx::Val( setInt64_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getDouble") ) { return hx::Val( getDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDouble") ) { return hx::Val( setDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUInt16") ) { return hx::Val( getUInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUInt16") ) { return hx::Val( setUInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"getString") ) { return hx::Val( getString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"readString") ) { return hx::Val( readString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Bytes_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"alloc") ) { outValue = alloc_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"ofData") ) { outValue = ofData_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastGet") ) { outValue = fastGet_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ofString") ) { outValue = ofString_dyn(); return true; }
	}
	return false;
}

hx::Val Bytes_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< unsigned char > >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Bytes_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Bytes_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Bytes_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{hx::fsObject /*Array< unsigned char >*/ ,(int)offsetof(Bytes_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Bytes_obj_sStaticStorageInfo = 0;
#endif

static ::String Bytes_obj_sMemberFields[] = {
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("blit","\x35","\x38","\x19","\x41"),
	HX_HCSTRING("fill","\x83","\xce","\xbb","\x43"),
	HX_HCSTRING("sub","\x80","\xa9","\x57","\x00"),
	HX_HCSTRING("compare","\xa5","\x18","\x69","\x83"),
	HX_HCSTRING("getDouble","\x47","\xb4","\x21","\xaf"),
	HX_HCSTRING("getFloat","\x26","\xd5","\x6d","\x62"),
	HX_HCSTRING("setDouble","\x53","\xa0","\x72","\x92"),
	HX_HCSTRING("setFloat","\x9a","\x2e","\xcb","\x10"),
	HX_HCSTRING("getUInt16","\x15","\xc2","\x65","\x95"),
	HX_HCSTRING("setUInt16","\x21","\xae","\xb6","\x78"),
	HX_HCSTRING("getInt32","\xd8","\xa2","\xf7","\x1d"),
	HX_HCSTRING("getInt64","\x77","\xa5","\xf7","\x1d"),
	HX_HCSTRING("setInt32","\x4c","\xfc","\x54","\xcc"),
	HX_HCSTRING("setInt64","\xeb","\xfe","\x54","\xcc"),
	HX_HCSTRING("getString","\x07","\xb2","\x86","\x8d"),
	HX_HCSTRING("readString","\xc7","\x0c","\xac","\x0a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("toHex","\x20","\xf4","\x10","\x14"),
	HX_HCSTRING("getData","\xe0","\x05","\xe6","\x14"),
	::String(null()) };

static void Bytes_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Bytes_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Bytes_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Bytes_obj::__mClass,"__mClass");
};

#endif

hx::Class Bytes_obj::__mClass;

static ::String Bytes_obj_sStaticFields[] = {
	HX_HCSTRING("alloc","\x75","\xa4","\x93","\x21"),
	HX_HCSTRING("ofString","\x48","\x69","\x31","\xa4"),
	HX_HCSTRING("ofData","\xe1","\xba","\xb8","\x49"),
	HX_HCSTRING("fastGet","\x5a","\xff","\x22","\xde"),
	::String(null())
};

void Bytes_obj::__register()
{
	hx::Object *dummy = new Bytes_obj;
	Bytes_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.io.Bytes","\x0b","\x53","\x6f","\x9f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Bytes_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Bytes_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Bytes_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Bytes_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Bytes_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Bytes_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bytes_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bytes_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace io
