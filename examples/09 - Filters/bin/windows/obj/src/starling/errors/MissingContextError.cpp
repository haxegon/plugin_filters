// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_starling_errors_MissingContextError
#include <starling/errors/MissingContextError.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_22d45904b01d445f_22_new,"starling.errors.MissingContextError","new",0xfff29b54,"starling.errors.MissingContextError.new","starling/errors/MissingContextError.hx",22,0x9ec834bc)
namespace starling{
namespace errors{

void MissingContextError_obj::__construct(::String __o_message,hx::Null< int >  __o_id){
::String message = __o_message.Default(HX_HCSTRING("Starling context is missing","\xf9","\x53","\x74","\x16"));
int id = __o_id.Default(0);
            	HX_STACKFRAME(&_hx_pos_22d45904b01d445f_22_new)
HXDLIN(  22)		super::__construct(message,id);
            	}

Dynamic MissingContextError_obj::__CreateEmpty() { return new MissingContextError_obj; }

void *MissingContextError_obj::_hx_vtable = 0;

Dynamic MissingContextError_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MissingContextError_obj > _hx_result = new MissingContextError_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool MissingContextError_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1fc85c4d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1fc85c4d;
	} else {
		return inClassId==(int)0x6b49a808;
	}
}


hx::ObjectPtr< MissingContextError_obj > MissingContextError_obj::__new(::String __o_message,hx::Null< int >  __o_id) {
	hx::ObjectPtr< MissingContextError_obj > __this = new MissingContextError_obj();
	__this->__construct(__o_message,__o_id);
	return __this;
}

hx::ObjectPtr< MissingContextError_obj > MissingContextError_obj::__alloc(hx::Ctx *_hx_ctx,::String __o_message,hx::Null< int >  __o_id) {
	MissingContextError_obj *__this = (MissingContextError_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MissingContextError_obj), true, "starling.errors.MissingContextError"));
	*(void **)__this = MissingContextError_obj::_hx_vtable;
	__this->__construct(__o_message,__o_id);
	return __this;
}

MissingContextError_obj::MissingContextError_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MissingContextError_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MissingContextError_obj_sStaticStorageInfo = 0;
#endif

static void MissingContextError_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MissingContextError_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MissingContextError_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MissingContextError_obj::__mClass,"__mClass");
};

#endif

hx::Class MissingContextError_obj::__mClass;

void MissingContextError_obj::__register()
{
	hx::Object *dummy = new MissingContextError_obj;
	MissingContextError_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.errors.MissingContextError","\x62","\xa1","\x0d","\x66");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MissingContextError_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MissingContextError_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MissingContextError_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MissingContextError_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MissingContextError_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace starling
} // end namespace errors
