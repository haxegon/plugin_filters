// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_AbstractVector
#include <openfl/_Vector/AbstractVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif
#ifndef INCLUDED_starling_text_BitmapChar
#include <starling/text/BitmapChar.h>
#endif
#ifndef INCLUDED_starling_text_CharLocation
#include <starling/text/CharLocation.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_514_new,"starling.text.CharLocation","new",0x752a9a78,"starling.text.CharLocation.new","starling/text/BitmapFont.hx",514,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_518_reset,"starling.text.CharLocation","reset",0x5677c9e7,"starling.text.CharLocation.reset","starling/text/BitmapFont.hx",518,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_532_instanceFromPool,"starling.text.CharLocation","instanceFromPool",0xe8670f03,"starling.text.CharLocation.instanceFromPool","starling/text/BitmapFont.hx",532,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_543_vectorFromPool,"starling.text.CharLocation","vectorFromPool",0xc9a67431,"starling.text.CharLocation.vectorFromPool","starling/text/BitmapFont.hx",543,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_554_rechargePool,"starling.text.CharLocation","rechargePool",0xf3f5e5cb,"starling.text.CharLocation.rechargePool","starling/text/BitmapFont.hx",554,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_525_boot,"starling.text.CharLocation","boot",0x08358f1a,"starling.text.CharLocation.boot","starling/text/BitmapFont.hx",525,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_526_boot,"starling.text.CharLocation","boot",0x08358f1a,"starling.text.CharLocation.boot","starling/text/BitmapFont.hx",526,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_528_boot,"starling.text.CharLocation","boot",0x08358f1a,"starling.text.CharLocation.boot","starling/text/BitmapFont.hx",528,0xe1349c05)
HX_LOCAL_STACK_FRAME(_hx_pos_b9c3130cbc8a9f27_529_boot,"starling.text.CharLocation","boot",0x08358f1a,"starling.text.CharLocation.boot","starling/text/BitmapFont.hx",529,0xe1349c05)
namespace starling{
namespace text{

void CharLocation_obj::__construct( ::starling::text::BitmapChar _hx_char){
            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_514_new)
HXDLIN( 514)		this->reset(_hx_char);
            	}

Dynamic CharLocation_obj::__CreateEmpty() { return new CharLocation_obj; }

void *CharLocation_obj::_hx_vtable = 0;

Dynamic CharLocation_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CharLocation_obj > _hx_result = new CharLocation_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CharLocation_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x34f00164;
}

 ::starling::text::CharLocation CharLocation_obj::reset( ::starling::text::BitmapChar _hx_char){
            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_518_reset)
HXLINE( 519)		this->_hx_char = _hx_char;
HXLINE( 520)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharLocation_obj,reset,return )

 ::openfl::_Vector::AbstractVector CharLocation_obj::sInstancePool;

::Array< ::Dynamic> CharLocation_obj::sVectorPool;

 ::openfl::_Vector::AbstractVector CharLocation_obj::sInstanceLoan;

::Array< ::Dynamic> CharLocation_obj::sVectorLoan;

 ::starling::text::CharLocation CharLocation_obj::instanceFromPool( ::starling::text::BitmapChar _hx_char){
            	HX_GC_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_532_instanceFromPool)
HXLINE( 533)		 ::starling::text::CharLocation instance;
HXDLIN( 533)		if ((::openfl::_Vector::IVector_obj::get_length(::starling::text::CharLocation_obj::sInstancePool->data) > (int)0)) {
HXLINE( 533)			instance = ( ( ::starling::text::CharLocation)(::openfl::_Vector::IVector_obj::pop(::starling::text::CharLocation_obj::sInstancePool->data)) );
            		}
            		else {
HXLINE( 533)			instance =  ::starling::text::CharLocation_obj::__alloc( HX_CTX ,_hx_char);
            		}
HXLINE( 536)		instance->reset(_hx_char);
HXLINE( 537)		{
HXLINE( 537)			 ::openfl::_Vector::AbstractVector this1 = ::starling::text::CharLocation_obj::sInstanceLoan;
HXDLIN( 537)			int index = ::openfl::_Vector::IVector_obj::get_length(::starling::text::CharLocation_obj::sInstanceLoan->data);
HXDLIN( 537)			::openfl::_Vector::IVector_obj::set(this1->data,index,instance);
            		}
HXLINE( 539)		return instance;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CharLocation_obj,instanceFromPool,return )

 ::openfl::_Vector::AbstractVector CharLocation_obj::vectorFromPool(){
            	HX_GC_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_543_vectorFromPool)
HXLINE( 544)		 ::openfl::_Vector::AbstractVector vector;
HXDLIN( 544)		if ((::starling::text::CharLocation_obj::sVectorPool->length > (int)0)) {
HXLINE( 544)			vector = ::starling::text::CharLocation_obj::sVectorPool->pop().StaticCast<  ::openfl::_Vector::AbstractVector >();
            		}
            		else {
HXLINE( 545)			int length = null();
HXDLIN( 545)			bool fixed = null();
HXLINE( 544)			vector =  ::openfl::_Vector::AbstractVector_obj::__alloc( HX_CTX , ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,length,fixed,null()),null());
            		}
HXLINE( 547)		::openfl::_Vector::IVector_obj::set_length(vector->data,(int)0);
HXLINE( 548)		::starling::text::CharLocation_obj::sVectorLoan[::starling::text::CharLocation_obj::sVectorLoan->length] = vector;
HXLINE( 550)		return vector;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CharLocation_obj,vectorFromPool,return )

void CharLocation_obj::rechargePool(){
            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_554_rechargePool)
HXLINE( 555)		 ::starling::text::CharLocation instance;
HXLINE( 556)		 ::openfl::_Vector::AbstractVector vector;
HXLINE( 558)		while((::openfl::_Vector::IVector_obj::get_length(::starling::text::CharLocation_obj::sInstanceLoan->data) > (int)0)){
HXLINE( 560)			instance = ( ( ::starling::text::CharLocation)(::openfl::_Vector::IVector_obj::pop(::starling::text::CharLocation_obj::sInstanceLoan->data)) );
HXLINE( 561)			instance->_hx_char = null();
HXLINE( 562)			{
HXLINE( 562)				 ::openfl::_Vector::AbstractVector this1 = ::starling::text::CharLocation_obj::sInstancePool;
HXDLIN( 562)				int index = ::openfl::_Vector::IVector_obj::get_length(::starling::text::CharLocation_obj::sInstancePool->data);
HXDLIN( 562)				::openfl::_Vector::IVector_obj::set(this1->data,index,instance);
            			}
            		}
HXLINE( 565)		while((::starling::text::CharLocation_obj::sVectorLoan->length > (int)0)){
HXLINE( 567)			vector = ::starling::text::CharLocation_obj::sVectorLoan->pop().StaticCast<  ::openfl::_Vector::AbstractVector >();
HXLINE( 568)			::openfl::_Vector::IVector_obj::set_length(vector->data,(int)0);
HXLINE( 569)			::starling::text::CharLocation_obj::sVectorPool[::starling::text::CharLocation_obj::sVectorPool->length] = vector;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CharLocation_obj,rechargePool,(void))


hx::ObjectPtr< CharLocation_obj > CharLocation_obj::__new( ::starling::text::BitmapChar _hx_char) {
	hx::ObjectPtr< CharLocation_obj > __this = new CharLocation_obj();
	__this->__construct(_hx_char);
	return __this;
}

hx::ObjectPtr< CharLocation_obj > CharLocation_obj::__alloc(hx::Ctx *_hx_ctx, ::starling::text::BitmapChar _hx_char) {
	CharLocation_obj *__this = (CharLocation_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CharLocation_obj), true, "starling.text.CharLocation"));
	*(void **)__this = CharLocation_obj::_hx_vtable;
	__this->__construct(_hx_char);
	return __this;
}

CharLocation_obj::CharLocation_obj()
{
}

void CharLocation_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharLocation);
	HX_MARK_MEMBER_NAME(_hx_char,"char");
	HX_MARK_MEMBER_NAME(scale,"scale");
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_END_CLASS();
}

void CharLocation_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx_char,"char");
	HX_VISIT_MEMBER_NAME(scale,"scale");
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
}

hx::Val CharLocation_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"char") ) { return hx::Val( _hx_char ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { return hx::Val( scale ); }
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CharLocation_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"sVectorPool") ) { outValue = ( sVectorPool ); return true; }
		if (HX_FIELD_EQ(inName,"sVectorLoan") ) { outValue = ( sVectorLoan ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"rechargePool") ) { outValue = rechargePool_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sInstancePool") ) { outValue = ( sInstancePool ); return true; }
		if (HX_FIELD_EQ(inName,"sInstanceLoan") ) { outValue = ( sInstanceLoan ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"vectorFromPool") ) { outValue = vectorFromPool_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"instanceFromPool") ) { outValue = instanceFromPool_dyn(); return true; }
	}
	return false;
}

hx::Val CharLocation_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"char") ) { _hx_char=inValue.Cast<  ::starling::text::BitmapChar >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { scale=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool CharLocation_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"sVectorPool") ) { sVectorPool=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"sVectorLoan") ) { sVectorLoan=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sInstancePool") ) { sInstancePool=ioValue.Cast<  ::openfl::_Vector::AbstractVector >(); return true; }
		if (HX_FIELD_EQ(inName,"sInstanceLoan") ) { sInstanceLoan=ioValue.Cast<  ::openfl::_Vector::AbstractVector >(); return true; }
	}
	return false;
}

void CharLocation_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41"));
	outFields->push(HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo CharLocation_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::starling::text::BitmapChar*/ ,(int)offsetof(CharLocation_obj,_hx_char),HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41")},
	{hx::fsFloat,(int)offsetof(CharLocation_obj,scale),HX_HCSTRING("scale","\x8a","\xce","\xce","\x78")},
	{hx::fsFloat,(int)offsetof(CharLocation_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(CharLocation_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo CharLocation_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::_Vector::AbstractVector*/ ,(void *) &CharLocation_obj::sInstancePool,HX_HCSTRING("sInstancePool","\x24","\x68","\xd1","\xe7")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(void *) &CharLocation_obj::sVectorPool,HX_HCSTRING("sVectorPool","\x92","\xad","\xe9","\xe6")},
	{hx::fsObject /*::openfl::_Vector::AbstractVector*/ ,(void *) &CharLocation_obj::sInstanceLoan,HX_HCSTRING("sInstanceLoan","\x78","\x81","\x2c","\xe5")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(void *) &CharLocation_obj::sVectorLoan,HX_HCSTRING("sVectorLoan","\xe6","\xc6","\x44","\xe4")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String CharLocation_obj_sMemberFields[] = {
	HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41"),
	HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"),
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	::String(null()) };

static void CharLocation_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CharLocation_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(CharLocation_obj::sInstancePool,"sInstancePool");
	HX_MARK_MEMBER_NAME(CharLocation_obj::sVectorPool,"sVectorPool");
	HX_MARK_MEMBER_NAME(CharLocation_obj::sInstanceLoan,"sInstanceLoan");
	HX_MARK_MEMBER_NAME(CharLocation_obj::sVectorLoan,"sVectorLoan");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CharLocation_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CharLocation_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CharLocation_obj::sInstancePool,"sInstancePool");
	HX_VISIT_MEMBER_NAME(CharLocation_obj::sVectorPool,"sVectorPool");
	HX_VISIT_MEMBER_NAME(CharLocation_obj::sInstanceLoan,"sInstanceLoan");
	HX_VISIT_MEMBER_NAME(CharLocation_obj::sVectorLoan,"sVectorLoan");
};

#endif

hx::Class CharLocation_obj::__mClass;

static ::String CharLocation_obj_sStaticFields[] = {
	HX_HCSTRING("sInstancePool","\x24","\x68","\xd1","\xe7"),
	HX_HCSTRING("sVectorPool","\x92","\xad","\xe9","\xe6"),
	HX_HCSTRING("sInstanceLoan","\x78","\x81","\x2c","\xe5"),
	HX_HCSTRING("sVectorLoan","\xe6","\xc6","\x44","\xe4"),
	HX_HCSTRING("instanceFromPool","\x1b","\x48","\xf4","\x26"),
	HX_HCSTRING("vectorFromPool","\x49","\xb7","\x4a","\xe4"),
	HX_HCSTRING("rechargePool","\xe3","\xb2","\xfa","\xe9"),
	::String(null())
};

void CharLocation_obj::__register()
{
	hx::Object *dummy = new CharLocation_obj;
	CharLocation_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.text.CharLocation","\x86","\x3e","\xc6","\xfb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CharLocation_obj::__GetStatic;
	__mClass->mSetStaticField = &CharLocation_obj::__SetStatic;
	__mClass->mMarkFunc = CharLocation_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CharLocation_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CharLocation_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CharLocation_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CharLocation_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharLocation_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharLocation_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CharLocation_obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_525_boot)
HXDLIN( 525)			int length = null();
HXDLIN( 525)			bool fixed = null();
HXDLIN( 525)			return  ::openfl::_Vector::AbstractVector_obj::__alloc( HX_CTX , ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,length,fixed,null()),null());
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_525_boot)
HXDLIN( 525)		sInstancePool =  ::Dynamic(new _hx_Closure_0())();
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_526_boot)
HXDLIN( 526)		sVectorPool = ::Array_obj< ::Dynamic>::__new(0);
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_528_boot)
HXDLIN( 528)			int length = null();
HXDLIN( 528)			bool fixed = null();
HXDLIN( 528)			return  ::openfl::_Vector::AbstractVector_obj::__alloc( HX_CTX , ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,length,fixed,null()),null());
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_528_boot)
HXDLIN( 528)		sInstanceLoan =  ::Dynamic(new _hx_Closure_0())();
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9c3130cbc8a9f27_529_boot)
HXDLIN( 529)		sVectorLoan = ::Array_obj< ::Dynamic>::__new(0);
            	}
}

} // end namespace starling
} // end namespace text
