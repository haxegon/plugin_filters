// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_starling_text_TextFieldAutoSize
#include <starling/text/TextFieldAutoSize.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a9308d138d88a1f2_18_boot,"starling.text.TextFieldAutoSize","boot",0x51fd8f9e,"starling.text.TextFieldAutoSize.boot","starling/text/TextFieldAutoSize.hx",18,0xe2d23fdc)
HX_LOCAL_STACK_FRAME(_hx_pos_a9308d138d88a1f2_22_boot,"starling.text.TextFieldAutoSize","boot",0x51fd8f9e,"starling.text.TextFieldAutoSize.boot","starling/text/TextFieldAutoSize.hx",22,0xe2d23fdc)
HX_LOCAL_STACK_FRAME(_hx_pos_a9308d138d88a1f2_26_boot,"starling.text.TextFieldAutoSize","boot",0x51fd8f9e,"starling.text.TextFieldAutoSize.boot","starling/text/TextFieldAutoSize.hx",26,0xe2d23fdc)
HX_LOCAL_STACK_FRAME(_hx_pos_a9308d138d88a1f2_29_boot,"starling.text.TextFieldAutoSize","boot",0x51fd8f9e,"starling.text.TextFieldAutoSize.boot","starling/text/TextFieldAutoSize.hx",29,0xe2d23fdc)
namespace starling{
namespace text{

void TextFieldAutoSize_obj::__construct() { }

Dynamic TextFieldAutoSize_obj::__CreateEmpty() { return new TextFieldAutoSize_obj; }

void *TextFieldAutoSize_obj::_hx_vtable = 0;

Dynamic TextFieldAutoSize_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TextFieldAutoSize_obj > _hx_result = new TextFieldAutoSize_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextFieldAutoSize_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1b796c00;
}

::String TextFieldAutoSize_obj::NONE;

::String TextFieldAutoSize_obj::HORIZONTAL;

::String TextFieldAutoSize_obj::VERTICAL;

::String TextFieldAutoSize_obj::BOTH_DIRECTIONS;


TextFieldAutoSize_obj::TextFieldAutoSize_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *TextFieldAutoSize_obj_sMemberStorageInfo = 0;
static hx::StaticInfo TextFieldAutoSize_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &TextFieldAutoSize_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsString,(void *) &TextFieldAutoSize_obj::HORIZONTAL,HX_HCSTRING("HORIZONTAL","\xe4","\x70","\xcd","\x07")},
	{hx::fsString,(void *) &TextFieldAutoSize_obj::VERTICAL,HX_HCSTRING("VERTICAL","\x76","\x4c","\x9b","\xc3")},
	{hx::fsString,(void *) &TextFieldAutoSize_obj::BOTH_DIRECTIONS,HX_HCSTRING("BOTH_DIRECTIONS","\x92","\xc3","\x04","\xca")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void TextFieldAutoSize_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TextFieldAutoSize_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(TextFieldAutoSize_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(TextFieldAutoSize_obj::HORIZONTAL,"HORIZONTAL");
	HX_MARK_MEMBER_NAME(TextFieldAutoSize_obj::VERTICAL,"VERTICAL");
	HX_MARK_MEMBER_NAME(TextFieldAutoSize_obj::BOTH_DIRECTIONS,"BOTH_DIRECTIONS");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TextFieldAutoSize_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TextFieldAutoSize_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(TextFieldAutoSize_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(TextFieldAutoSize_obj::HORIZONTAL,"HORIZONTAL");
	HX_VISIT_MEMBER_NAME(TextFieldAutoSize_obj::VERTICAL,"VERTICAL");
	HX_VISIT_MEMBER_NAME(TextFieldAutoSize_obj::BOTH_DIRECTIONS,"BOTH_DIRECTIONS");
};

#endif

hx::Class TextFieldAutoSize_obj::__mClass;

static ::String TextFieldAutoSize_obj_sStaticFields[] = {
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("HORIZONTAL","\xe4","\x70","\xcd","\x07"),
	HX_HCSTRING("VERTICAL","\x76","\x4c","\x9b","\xc3"),
	HX_HCSTRING("BOTH_DIRECTIONS","\x92","\xc3","\x04","\xca"),
	::String(null())
};

void TextFieldAutoSize_obj::__register()
{
	hx::Object *dummy = new TextFieldAutoSize_obj;
	TextFieldAutoSize_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.text.TextFieldAutoSize","\x82","\x0c","\x86","\x08");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TextFieldAutoSize_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(TextFieldAutoSize_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< TextFieldAutoSize_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TextFieldAutoSize_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextFieldAutoSize_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextFieldAutoSize_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TextFieldAutoSize_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a9308d138d88a1f2_18_boot)
HXDLIN(  18)		NONE = HX_("none",b8,12,0a,49);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9308d138d88a1f2_22_boot)
HXDLIN(  22)		HORIZONTAL = HX_("horizontal",e4,fc,c3,15);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9308d138d88a1f2_26_boot)
HXDLIN(  26)		VERTICAL = HX_("vertical",76,bc,15,6a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9308d138d88a1f2_29_boot)
HXDLIN(  29)		BOTH_DIRECTIONS = HX_("bothDirections",35,2d,b0,08);
            	}
}

} // end namespace starling
} // end namespace text
