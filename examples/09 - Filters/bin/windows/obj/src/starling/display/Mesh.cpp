// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_openfl_errors_ArgumentError
#include <openfl/errors/ArgumentError.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif
#ifndef INCLUDED_starling_display_DisplayObject
#include <starling/display/DisplayObject.h>
#endif
#ifndef INCLUDED_starling_display_Mesh
#include <starling/display/Mesh.h>
#endif
#ifndef INCLUDED_starling_events_EventDispatcher
#include <starling/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_starling_geom_Polygon
#include <starling/geom/Polygon.h>
#endif
#ifndef INCLUDED_starling_rendering_IndexData
#include <starling/rendering/IndexData.h>
#endif
#ifndef INCLUDED_starling_rendering_Painter
#include <starling/rendering/Painter.h>
#endif
#ifndef INCLUDED_starling_rendering_RenderState
#include <starling/rendering/RenderState.h>
#endif
#ifndef INCLUDED_starling_rendering_VertexData
#include <starling/rendering/VertexData.h>
#endif
#ifndef INCLUDED_starling_rendering_VertexDataFormat
#include <starling/rendering/VertexDataFormat.h>
#endif
#ifndef INCLUDED_starling_styles_MeshStyle
#include <starling/styles/MeshStyle.h>
#endif
#ifndef INCLUDED_starling_textures_Texture
#include <starling/textures/Texture.h>
#endif
#ifndef INCLUDED_starling_utils_MatrixUtil
#include <starling/utils/MatrixUtil.h>
#endif
#ifndef INCLUDED_starling_utils_MeshSubset
#include <starling/utils/MeshSubset.h>
#endif
#ifndef INCLUDED_starling_utils_MeshUtil
#include <starling/utils/MeshUtil.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_59_new,"starling.display.Mesh","new",0xfa758b91,"starling.display.Mesh.new","starling/display/Mesh.hx",59,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_73_dispose,"starling.display.Mesh","dispose",0xff0a2850,"starling.display.Mesh.dispose","starling/display/Mesh.hx",73,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_83_hitTest,"starling.display.Mesh","hitTest",0x263d07f6,"starling.display.Mesh.hitTest","starling/display/Mesh.hx",83,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_90_getBounds,"starling.display.Mesh","getBounds",0xceafc59c,"starling.display.Mesh.getBounds","starling/display/Mesh.hx",90,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_95_render,"starling.display.Mesh","render",0x10f204c5,"starling.display.Mesh.render","starling/display/Mesh.hx",95,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_118_setStyle,"starling.display.Mesh","setStyle",0x9487215e,"starling.display.Mesh.setStyle","starling/display/Mesh.hx",118,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_136___createDefaultMeshStyle,"starling.display.Mesh","__createDefaultMeshStyle",0x8ded5e6e,"starling.display.Mesh.__createDefaultMeshStyle","starling/display/Mesh.hx",136,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_164_setVertexDataChanged,"starling.display.Mesh","setVertexDataChanged",0xd41af693,"starling.display.Mesh.setVertexDataChanged","starling/display/Mesh.hx",164,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_171_setIndexDataChanged,"starling.display.Mesh","setIndexDataChanged",0x3a21d6eb,"starling.display.Mesh.setIndexDataChanged","starling/display/Mesh.hx",171,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_187_getVertexPosition,"starling.display.Mesh","getVertexPosition",0x26447a54,"starling.display.Mesh.getVertexPosition","starling/display/Mesh.hx",187,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_192_setVertexPosition,"starling.display.Mesh","setVertexPosition",0x49b25260,"starling.display.Mesh.setVertexPosition","starling/display/Mesh.hx",192,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_198_getVertexAlpha,"starling.display.Mesh","getVertexAlpha",0x8fa6e4d3,"starling.display.Mesh.getVertexAlpha","starling/display/Mesh.hx",198,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_204_setVertexAlpha,"starling.display.Mesh","setVertexAlpha",0xafc6cd47,"starling.display.Mesh.setVertexAlpha","starling/display/Mesh.hx",204,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_210_getVertexColor,"starling.display.Mesh","getVertexColor",0xb86caed8,"starling.display.Mesh.getVertexColor","starling/display/Mesh.hx",210,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_216_setVertexColor,"starling.display.Mesh","setVertexColor",0xd88c974c,"starling.display.Mesh.setVertexColor","starling/display/Mesh.hx",216,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_222_getTexCoords,"starling.display.Mesh","getTexCoords",0x1e59d09e,"starling.display.Mesh.getTexCoords","starling/display/Mesh.hx",222,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_228_setTexCoords,"starling.display.Mesh","setTexCoords",0x3352f412,"starling.display.Mesh.setTexCoords","starling/display/Mesh.hx",228,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_236_get_vertexData,"starling.display.Mesh","get_vertexData",0x1b4b8866,"starling.display.Mesh.get_vertexData","starling/display/Mesh.hx",236,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_241_get_indexData,"starling.display.Mesh","get_indexData",0x3020e4a4,"starling.display.Mesh.get_indexData","starling/display/Mesh.hx",241,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_252_get_style,"starling.display.Mesh","get_style",0xb402b779,"starling.display.Mesh.get_style","starling/display/Mesh.hx",252,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_254_set_style,"starling.display.Mesh","set_style",0x9753a385,"starling.display.Mesh.set_style","starling/display/Mesh.hx",254,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_261_get_texture,"starling.display.Mesh","get_texture",0x5fe4fd23,"starling.display.Mesh.get_texture","starling/display/Mesh.hx",261,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_262_set_texture,"starling.display.Mesh","set_texture",0x6a52042f,"starling.display.Mesh.set_texture","starling/display/Mesh.hx",262,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_267_get_color,"starling.display.Mesh","get_color",0x7a4183ab,"starling.display.Mesh.get_color","starling/display/Mesh.hx",267,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_268_set_color,"starling.display.Mesh","set_color",0x5d926fb7,"starling.display.Mesh.set_color","starling/display/Mesh.hx",268,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_273_get_textureSmoothing,"starling.display.Mesh","get_textureSmoothing",0x9df67bd1,"starling.display.Mesh.get_textureSmoothing","starling/display/Mesh.hx",273,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_274_set_textureSmoothing,"starling.display.Mesh","set_textureSmoothing",0x6aae3345,"starling.display.Mesh.set_textureSmoothing","starling/display/Mesh.hx",274,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_280_get_textureRepeat,"starling.display.Mesh","get_textureRepeat",0x03c104de,"starling.display.Mesh.get_textureRepeat","starling/display/Mesh.hx",280,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_281_set_textureRepeat,"starling.display.Mesh","set_textureRepeat",0x272edcea,"starling.display.Mesh.set_textureRepeat","starling/display/Mesh.hx",281,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_287_get_pixelSnapping,"starling.display.Mesh","get_pixelSnapping",0x22ce48aa,"starling.display.Mesh.get_pixelSnapping","starling/display/Mesh.hx",287,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_288_set_pixelSnapping,"starling.display.Mesh","set_pixelSnapping",0x463c20b6,"starling.display.Mesh.set_pixelSnapping","starling/display/Mesh.hx",288,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_292_get_numVertices,"starling.display.Mesh","get_numVertices",0x343408a7,"starling.display.Mesh.get_numVertices","starling/display/Mesh.hx",292,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_296_get_numIndices,"starling.display.Mesh","get_numIndices",0x5ba02e39,"starling.display.Mesh.get_numIndices","starling/display/Mesh.hx",296,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_301_get_numTriangles,"starling.display.Mesh","get_numTriangles",0x8fa2803d,"starling.display.Mesh.get_numTriangles","starling/display/Mesh.hx",301,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_305_get_vertexFormat,"starling.display.Mesh","get_vertexFormat",0x0694c873,"starling.display.Mesh.get_vertexFormat","starling/display/Mesh.hx",305,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_313_get_defaultStyle,"starling.display.Mesh","get_defaultStyle",0xa26a2768,"starling.display.Mesh.get_defaultStyle","starling/display/Mesh.hx",313,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_316_set_defaultStyle,"starling.display.Mesh","set_defaultStyle",0xf8ac14dc,"starling.display.Mesh.set_defaultStyle","starling/display/Mesh.hx",316,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_334_get_defaultStyleFactory,"starling.display.Mesh","get_defaultStyleFactory",0x3fe05a42,"starling.display.Mesh.get_defaultStyleFactory","starling/display/Mesh.hx",334,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_337_set_defaultStyleFactory,"starling.display.Mesh","set_defaultStyleFactory",0x4241c34e,"starling.display.Mesh.set_defaultStyleFactory","starling/display/Mesh.hx",337,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_347_fromPolygon,"starling.display.Mesh","fromPolygon",0xe5db3a61,"starling.display.Mesh.fromPolygon","starling/display/Mesh.hx",347,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_51_boot,"starling.display.Mesh","boot",0x247d93e1,"starling.display.Mesh.boot","starling/display/Mesh.hx",51,0xd7086c3d)
HX_LOCAL_STACK_FRAME(_hx_pos_e33c7a76d55a5a37_52_boot,"starling.display.Mesh","boot",0x247d93e1,"starling.display.Mesh.boot","starling/display/Mesh.hx",52,0xd7086c3d)
namespace starling{
namespace display{

void Mesh_obj::__construct( ::starling::rendering::VertexData vertexData, ::starling::rendering::IndexData indexData, ::starling::styles::MeshStyle style){
            	HX_GC_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_59_new)
HXLINE(  60)		super::__construct();
HXLINE(  62)		if (hx::IsNull( vertexData )) {
HXLINE(  62)			HX_STACK_DO_THROW( ::openfl::errors::ArgumentError_obj::__alloc( HX_CTX ,HX_("VertexData must not be null",f2,bd,1a,a0)));
            		}
HXLINE(  63)		if (hx::IsNull( indexData )) {
HXLINE(  63)			HX_STACK_DO_THROW( ::openfl::errors::ArgumentError_obj::__alloc( HX_CTX ,HX_("IndexData must not be null",c4,17,8d,26)));
            		}
HXLINE(  65)		this->_hx___vertexData = vertexData;
HXLINE(  66)		this->_hx___indexData = indexData;
HXLINE(  68)		this->setStyle(style,false);
            	}

Dynamic Mesh_obj::__CreateEmpty() { return new Mesh_obj; }

void *Mesh_obj::_hx_vtable = 0;

Dynamic Mesh_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Mesh_obj > _hx_result = new Mesh_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Mesh_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3cebba07) {
		if (inClassId<=(int)0x25137bc0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x25137bc0;
		} else {
			return inClassId==(int)0x3cebba07;
		}
	} else {
		return inClassId==(int)0x6dea180f;
	}
}

void Mesh_obj::dispose(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_73_dispose)
HXLINE(  74)		this->_hx___vertexData->clear();
HXLINE(  75)		this->_hx___indexData->clear();
HXLINE(  77)		this->super::dispose();
            	}


 ::starling::display::DisplayObject Mesh_obj::hitTest( ::openfl::geom::Point localPoint){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_83_hitTest)
HXDLIN(  83)		bool _hx_tmp;
HXDLIN(  83)		bool _hx_tmp1;
HXDLIN(  83)		if (!(!(this->get_visible()))) {
HXDLIN(  83)			_hx_tmp1 = !(this->get_touchable());
            		}
            		else {
HXDLIN(  83)			_hx_tmp1 = true;
            		}
HXDLIN(  83)		if (!(_hx_tmp1)) {
HXDLIN(  83)			_hx_tmp = !(this->hitTestMask(localPoint));
            		}
            		else {
HXDLIN(  83)			_hx_tmp = true;
            		}
HXDLIN(  83)		if (_hx_tmp) {
HXDLIN(  83)			return null();
            		}
            		else {
HXLINE(  84)			if (::starling::utils::MeshUtil_obj::containsPoint(this->_hx___vertexData,this->_hx___indexData,localPoint)) {
HXLINE(  84)				return hx::ObjectPtr<OBJ_>(this);
            			}
            			else {
HXLINE(  84)				return null();
            			}
            		}
HXLINE(  83)		return null();
            	}


 ::openfl::geom::Rectangle Mesh_obj::getBounds( ::starling::display::DisplayObject targetSpace, ::openfl::geom::Rectangle out){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_90_getBounds)
HXDLIN(  90)		return ::starling::utils::MeshUtil_obj::calculateBounds(this->_hx___vertexData,hx::ObjectPtr<OBJ_>(this),targetSpace,out);
            	}


void Mesh_obj::render( ::starling::rendering::Painter painter){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_95_render)
HXLINE(  96)		if (this->_hx___pixelSnapping) {
HXLINE(  97)			 ::openfl::geom::Matrix _hx_tmp = painter->get_state()->get_modelviewMatrix();
HXDLIN(  97)			::starling::utils::MatrixUtil_obj::snapToPixels(_hx_tmp,painter->get_pixelSize());
            		}
HXLINE(  99)		painter->batchMesh(hx::ObjectPtr<OBJ_>(this),null());
            	}


void Mesh_obj::setStyle( ::starling::styles::MeshStyle meshStyle,hx::Null< bool >  __o_mergeWithPredecessor){
bool mergeWithPredecessor = __o_mergeWithPredecessor.Default(true);
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_118_setStyle)
HXLINE( 119)		if (hx::IsNull( meshStyle )) {
HXLINE( 119)			meshStyle = this->_hx___createDefaultMeshStyle();
            		}
            		else {
HXLINE( 120)			if (hx::IsEq( meshStyle,this->_hx___style )) {
HXLINE( 120)				return;
            			}
            			else {
HXLINE( 121)				if (hx::IsNotNull( meshStyle->get_target() )) {
HXLINE( 121)					meshStyle->get_target()->setStyle(null(),null());
            				}
            			}
            		}
HXLINE( 123)		if (hx::IsNotNull( this->_hx___style )) {
HXLINE( 125)			if (mergeWithPredecessor) {
HXLINE( 125)				meshStyle->copyFrom(this->_hx___style);
            			}
HXLINE( 126)			this->_hx___style->setTarget(null(),null(),null());
            		}
HXLINE( 129)		this->_hx___style = meshStyle;
HXLINE( 130)		this->_hx___style->setTarget(hx::ObjectPtr<OBJ_>(this),this->_hx___vertexData,this->_hx___indexData);
HXLINE( 132)		this->setRequiresRedraw();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,setStyle,(void))

 ::starling::styles::MeshStyle Mesh_obj::_hx___createDefaultMeshStyle(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_136___createDefaultMeshStyle)
HXLINE( 137)		 ::starling::styles::MeshStyle meshStyle = null();
HXLINE( 139)		if (hx::IsNotNull( ::starling::display::Mesh_obj::sDefaultStyleFactory )) {
HXLINE( 146)			int numArgs = ( (int)(::starling::display::Mesh_obj::sDefaultStyleFactory->__ArgCount()) );
HXLINE( 150)			if ((numArgs == (int)0)) {
HXLINE( 150)				meshStyle = ( ( ::starling::styles::MeshStyle)(::starling::display::Mesh_obj::sDefaultStyleFactory(null())) );
            			}
            			else {
HXLINE( 151)				meshStyle = ( ( ::starling::styles::MeshStyle)(::starling::display::Mesh_obj::sDefaultStyleFactory(hx::ObjectPtr<OBJ_>(this))) );
            			}
            		}
HXLINE( 154)		if (hx::IsNull( meshStyle )) {
HXLINE( 155)			meshStyle = ( ( ::starling::styles::MeshStyle)(::Type_obj::createInstance(::starling::display::Mesh_obj::sDefaultStyle,::cpp::VirtualArray_obj::__new(0))) );
            		}
HXLINE( 157)		return meshStyle;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,_hx___createDefaultMeshStyle,return )

void Mesh_obj::setVertexDataChanged(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_164_setVertexDataChanged)
HXDLIN( 164)		this->setRequiresRedraw();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,setVertexDataChanged,(void))

void Mesh_obj::setIndexDataChanged(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_171_setIndexDataChanged)
HXDLIN( 171)		this->setRequiresRedraw();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,setIndexDataChanged,(void))

 ::openfl::geom::Point Mesh_obj::getVertexPosition(int vertexID, ::openfl::geom::Point out){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_187_getVertexPosition)
HXDLIN( 187)		return this->_hx___style->getVertexPosition(vertexID,out);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,getVertexPosition,return )

void Mesh_obj::setVertexPosition(int vertexID,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_192_setVertexPosition)
HXDLIN( 192)		this->_hx___style->setVertexPosition(vertexID,x,y);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mesh_obj,setVertexPosition,(void))

Float Mesh_obj::getVertexAlpha(int vertexID){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_198_getVertexAlpha)
HXDLIN( 198)		return this->_hx___style->getVertexAlpha(vertexID);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,getVertexAlpha,return )

void Mesh_obj::setVertexAlpha(int vertexID,Float alpha){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_204_setVertexAlpha)
HXDLIN( 204)		this->_hx___style->setVertexAlpha(vertexID,alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,setVertexAlpha,(void))

int Mesh_obj::getVertexColor(int vertexID){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_210_getVertexColor)
HXDLIN( 210)		return this->_hx___style->getVertexColor(vertexID);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,getVertexColor,return )

void Mesh_obj::setVertexColor(int vertexID,int color){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_216_setVertexColor)
HXDLIN( 216)		this->_hx___style->setVertexColor(vertexID,color);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,setVertexColor,(void))

 ::openfl::geom::Point Mesh_obj::getTexCoords(int vertexID, ::openfl::geom::Point out){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_222_getTexCoords)
HXDLIN( 222)		return this->_hx___style->getTexCoords(vertexID,out);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,getTexCoords,return )

void Mesh_obj::setTexCoords(int vertexID,Float u,Float v){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_228_setTexCoords)
HXDLIN( 228)		this->_hx___style->setTexCoords(vertexID,u,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mesh_obj,setTexCoords,(void))

 ::starling::rendering::VertexData Mesh_obj::get_vertexData(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_236_get_vertexData)
HXDLIN( 236)		return this->_hx___vertexData;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_vertexData,return )

 ::starling::rendering::IndexData Mesh_obj::get_indexData(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_241_get_indexData)
HXDLIN( 241)		return this->_hx___indexData;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_indexData,return )

 ::starling::styles::MeshStyle Mesh_obj::get_style(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_252_get_style)
HXDLIN( 252)		return this->_hx___style;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_style,return )

 ::starling::styles::MeshStyle Mesh_obj::set_style( ::starling::styles::MeshStyle value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_254_set_style)
HXLINE( 255)		this->setStyle(value,null());
HXLINE( 256)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_style,return )

 ::starling::textures::Texture Mesh_obj::get_texture(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_261_get_texture)
HXDLIN( 261)		return this->_hx___style->get_texture();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_texture,return )

 ::starling::textures::Texture Mesh_obj::set_texture( ::starling::textures::Texture value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_262_set_texture)
HXDLIN( 262)		return this->_hx___style->set_texture(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_texture,return )

int Mesh_obj::get_color(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_267_get_color)
HXDLIN( 267)		return this->_hx___style->get_color();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_color,return )

int Mesh_obj::set_color(int value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_268_set_color)
HXDLIN( 268)		return this->_hx___style->set_color(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_color,return )

::String Mesh_obj::get_textureSmoothing(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_273_get_textureSmoothing)
HXDLIN( 273)		return this->_hx___style->get_textureSmoothing();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_textureSmoothing,return )

::String Mesh_obj::set_textureSmoothing(::String value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_274_set_textureSmoothing)
HXDLIN( 274)		return this->_hx___style->set_textureSmoothing(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_textureSmoothing,return )

bool Mesh_obj::get_textureRepeat(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_280_get_textureRepeat)
HXDLIN( 280)		return this->_hx___style->get_textureRepeat();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_textureRepeat,return )

bool Mesh_obj::set_textureRepeat(bool value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_281_set_textureRepeat)
HXDLIN( 281)		return this->_hx___style->set_textureRepeat(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_textureRepeat,return )

bool Mesh_obj::get_pixelSnapping(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_287_get_pixelSnapping)
HXDLIN( 287)		return this->_hx___pixelSnapping;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_pixelSnapping,return )

bool Mesh_obj::set_pixelSnapping(bool value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_288_set_pixelSnapping)
HXDLIN( 288)		return (this->_hx___pixelSnapping = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_pixelSnapping,return )

int Mesh_obj::get_numVertices(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_292_get_numVertices)
HXDLIN( 292)		return this->_hx___vertexData->get_numVertices();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_numVertices,return )

int Mesh_obj::get_numIndices(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_296_get_numIndices)
HXDLIN( 296)		return this->_hx___indexData->get_numIndices();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_numIndices,return )

int Mesh_obj::get_numTriangles(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_301_get_numTriangles)
HXDLIN( 301)		return this->_hx___indexData->get_numTriangles();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_numTriangles,return )

 ::starling::rendering::VertexDataFormat Mesh_obj::get_vertexFormat(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_305_get_vertexFormat)
HXDLIN( 305)		return this->_hx___style->get_vertexFormat();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_vertexFormat,return )

hx::Class Mesh_obj::sDefaultStyle;

 ::Dynamic Mesh_obj::sDefaultStyleFactory;

hx::Class Mesh_obj::get_defaultStyle(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_313_get_defaultStyle)
HXDLIN( 313)		return ::starling::display::Mesh_obj::sDefaultStyle;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_defaultStyle,return )

hx::Class Mesh_obj::set_defaultStyle(hx::Class value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_316_set_defaultStyle)
HXDLIN( 316)		return (::starling::display::Mesh_obj::sDefaultStyle = value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_defaultStyle,return )

 ::Dynamic Mesh_obj::get_defaultStyleFactory(){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_334_get_defaultStyleFactory)
HXDLIN( 334)		return ::starling::display::Mesh_obj::sDefaultStyleFactory;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Mesh_obj,get_defaultStyleFactory,return )

 ::Dynamic Mesh_obj::set_defaultStyleFactory( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_337_set_defaultStyleFactory)
HXDLIN( 337)		return (::starling::display::Mesh_obj::sDefaultStyleFactory = value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Mesh_obj,set_defaultStyleFactory,return )

 ::starling::display::Mesh Mesh_obj::fromPolygon( ::starling::geom::Polygon polygon, ::starling::styles::MeshStyle style){
            	HX_GC_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_347_fromPolygon)
HXLINE( 348)		 ::starling::rendering::VertexData vertexData =  ::starling::rendering::VertexData_obj::__alloc( HX_CTX ,null(),polygon->get_numVertices());
HXLINE( 349)		 ::starling::rendering::IndexData indexData =  ::starling::rendering::IndexData_obj::__alloc( HX_CTX ,polygon->get_numTriangles());
HXLINE( 351)		polygon->copyToVertexData(vertexData,null(),null());
HXLINE( 352)		polygon->triangulate(indexData,null());
HXLINE( 354)		return  ::starling::display::Mesh_obj::__alloc( HX_CTX ,vertexData,indexData,style);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Mesh_obj,fromPolygon,return )


hx::ObjectPtr< Mesh_obj > Mesh_obj::__new( ::starling::rendering::VertexData vertexData, ::starling::rendering::IndexData indexData, ::starling::styles::MeshStyle style) {
	hx::ObjectPtr< Mesh_obj > __this = new Mesh_obj();
	__this->__construct(vertexData,indexData,style);
	return __this;
}

hx::ObjectPtr< Mesh_obj > Mesh_obj::__alloc(hx::Ctx *_hx_ctx, ::starling::rendering::VertexData vertexData, ::starling::rendering::IndexData indexData, ::starling::styles::MeshStyle style) {
	Mesh_obj *__this = (Mesh_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Mesh_obj), true, "starling.display.Mesh"));
	*(void **)__this = Mesh_obj::_hx_vtable;
	__this->__construct(vertexData,indexData,style);
	return __this;
}

Mesh_obj::Mesh_obj()
{
}

void Mesh_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Mesh);
	HX_MARK_MEMBER_NAME(_hx___style,"__style");
	HX_MARK_MEMBER_NAME(_hx___vertexData,"__vertexData");
	HX_MARK_MEMBER_NAME(_hx___indexData,"__indexData");
	HX_MARK_MEMBER_NAME(_hx___pixelSnapping,"__pixelSnapping");
	 ::starling::display::DisplayObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Mesh_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___style,"__style");
	HX_VISIT_MEMBER_NAME(_hx___vertexData,"__vertexData");
	HX_VISIT_MEMBER_NAME(_hx___indexData,"__indexData");
	HX_VISIT_MEMBER_NAME(_hx___pixelSnapping,"__pixelSnapping");
	 ::starling::display::DisplayObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Mesh_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"style") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_style() ); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_color() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__style") ) { return hx::Val( _hx___style ); }
		if (HX_FIELD_EQ(inName,"dispose") ) { return hx::Val( dispose_dyn() ); }
		if (HX_FIELD_EQ(inName,"hitTest") ) { return hx::Val( hitTest_dyn() ); }
		if (HX_FIELD_EQ(inName,"texture") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_texture() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setStyle") ) { return hx::Val( setStyle_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getBounds") ) { return hx::Val( getBounds_dyn() ); }
		if (HX_FIELD_EQ(inName,"indexData") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_indexData() ); }
		if (HX_FIELD_EQ(inName,"get_style") ) { return hx::Val( get_style_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_style") ) { return hx::Val( set_style_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_color") ) { return hx::Val( get_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_color") ) { return hx::Val( set_color_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"vertexData") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_vertexData() ); }
		if (HX_FIELD_EQ(inName,"numIndices") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_numIndices() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"__indexData") ) { return hx::Val( _hx___indexData ); }
		if (HX_FIELD_EQ(inName,"get_texture") ) { return hx::Val( get_texture_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_texture") ) { return hx::Val( set_texture_dyn() ); }
		if (HX_FIELD_EQ(inName,"numVertices") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_numVertices() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__vertexData") ) { return hx::Val( _hx___vertexData ); }
		if (HX_FIELD_EQ(inName,"getTexCoords") ) { return hx::Val( getTexCoords_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTexCoords") ) { return hx::Val( setTexCoords_dyn() ); }
		if (HX_FIELD_EQ(inName,"numTriangles") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_numTriangles() ); }
		if (HX_FIELD_EQ(inName,"vertexFormat") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_vertexFormat() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_indexData") ) { return hx::Val( get_indexData_dyn() ); }
		if (HX_FIELD_EQ(inName,"textureRepeat") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_textureRepeat() ); }
		if (HX_FIELD_EQ(inName,"pixelSnapping") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pixelSnapping() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getVertexAlpha") ) { return hx::Val( getVertexAlpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVertexAlpha") ) { return hx::Val( setVertexAlpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexColor") ) { return hx::Val( getVertexColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVertexColor") ) { return hx::Val( setVertexColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vertexData") ) { return hx::Val( get_vertexData_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_numIndices") ) { return hx::Val( get_numIndices_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__pixelSnapping") ) { return hx::Val( _hx___pixelSnapping ); }
		if (HX_FIELD_EQ(inName,"get_numVertices") ) { return hx::Val( get_numVertices_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"textureSmoothing") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_textureSmoothing() ); }
		if (HX_FIELD_EQ(inName,"get_numTriangles") ) { return hx::Val( get_numTriangles_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vertexFormat") ) { return hx::Val( get_vertexFormat_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getVertexPosition") ) { return hx::Val( getVertexPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVertexPosition") ) { return hx::Val( setVertexPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_textureRepeat") ) { return hx::Val( get_textureRepeat_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_textureRepeat") ) { return hx::Val( set_textureRepeat_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_pixelSnapping") ) { return hx::Val( get_pixelSnapping_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pixelSnapping") ) { return hx::Val( set_pixelSnapping_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"setIndexDataChanged") ) { return hx::Val( setIndexDataChanged_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"setVertexDataChanged") ) { return hx::Val( setVertexDataChanged_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_textureSmoothing") ) { return hx::Val( get_textureSmoothing_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_textureSmoothing") ) { return hx::Val( set_textureSmoothing_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"__createDefaultMeshStyle") ) { return hx::Val( _hx___createDefaultMeshStyle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Mesh_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"fromPolygon") ) { outValue = fromPolygon_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"defaultStyle") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_defaultStyle() ); return true; } }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sDefaultStyle") ) { outValue = ( sDefaultStyle ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_defaultStyle") ) { outValue = get_defaultStyle_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_defaultStyle") ) { outValue = set_defaultStyle_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"defaultStyleFactory") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_defaultStyleFactory() ); return true; } }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"sDefaultStyleFactory") ) { outValue = ( sDefaultStyleFactory ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_defaultStyleFactory") ) { outValue = get_defaultStyleFactory_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_defaultStyleFactory") ) { outValue = set_defaultStyleFactory_dyn(); return true; }
	}
	return false;
}

hx::Val Mesh_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"style") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_style(inValue.Cast<  ::starling::styles::MeshStyle >()) ); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_color(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__style") ) { _hx___style=inValue.Cast<  ::starling::styles::MeshStyle >(); return inValue; }
		if (HX_FIELD_EQ(inName,"texture") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_texture(inValue.Cast<  ::starling::textures::Texture >()) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"__indexData") ) { _hx___indexData=inValue.Cast<  ::starling::rendering::IndexData >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__vertexData") ) { _hx___vertexData=inValue.Cast<  ::starling::rendering::VertexData >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"textureRepeat") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_textureRepeat(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"pixelSnapping") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pixelSnapping(inValue.Cast< bool >()) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__pixelSnapping") ) { _hx___pixelSnapping=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"textureSmoothing") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_textureSmoothing(inValue.Cast< ::String >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Mesh_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"defaultStyle") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_defaultStyle(ioValue.Cast< hx::Class >()) ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sDefaultStyle") ) { sDefaultStyle=ioValue.Cast< hx::Class >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"defaultStyleFactory") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_defaultStyleFactory(ioValue.Cast<  ::Dynamic >()) ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"sDefaultStyleFactory") ) { sDefaultStyleFactory=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void Mesh_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("__style","\x11","\xfe","\x7b","\xee"));
	outFields->push(HX_HCSTRING("__vertexData","\xce","\x5a","\xb3","\x0b"));
	outFields->push(HX_HCSTRING("__indexData","\x3c","\x57","\x9d","\x2c"));
	outFields->push(HX_HCSTRING("__pixelSnapping","\x42","\xe7","\x53","\x40"));
	outFields->push(HX_HCSTRING("vertexData","\xae","\xdf","\x1f","\xd3"));
	outFields->push(HX_HCSTRING("indexData","\x5c","\x0e","\x71","\xfe"));
	outFields->push(HX_HCSTRING("style","\x31","\xa5","\x1d","\x84"));
	outFields->push(HX_HCSTRING("texture","\xdb","\xc8","\xe0","\x9e"));
	outFields->push(HX_HCSTRING("color","\x63","\x71","\x5c","\x4a"));
	outFields->push(HX_HCSTRING("textureSmoothing","\x19","\x79","\x2f","\x6a"));
	outFields->push(HX_HCSTRING("textureRepeat","\x96","\x6a","\x94","\x99"));
	outFields->push(HX_HCSTRING("pixelSnapping","\x62","\xae","\xa1","\xb8"));
	outFields->push(HX_HCSTRING("numVertices","\x5f","\x10","\x2c","\x56"));
	outFields->push(HX_HCSTRING("numIndices","\x81","\x85","\x74","\x13"));
	outFields->push(HX_HCSTRING("numTriangles","\x85","\x39","\xb1","\x26"));
	outFields->push(HX_HCSTRING("vertexFormat","\xbb","\x81","\xa3","\x9d"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Mesh_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::starling::styles::MeshStyle*/ ,(int)offsetof(Mesh_obj,_hx___style),HX_HCSTRING("__style","\x11","\xfe","\x7b","\xee")},
	{hx::fsObject /*::starling::rendering::VertexData*/ ,(int)offsetof(Mesh_obj,_hx___vertexData),HX_HCSTRING("__vertexData","\xce","\x5a","\xb3","\x0b")},
	{hx::fsObject /*::starling::rendering::IndexData*/ ,(int)offsetof(Mesh_obj,_hx___indexData),HX_HCSTRING("__indexData","\x3c","\x57","\x9d","\x2c")},
	{hx::fsBool,(int)offsetof(Mesh_obj,_hx___pixelSnapping),HX_HCSTRING("__pixelSnapping","\x42","\xe7","\x53","\x40")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Mesh_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::hx::Class*/ ,(void *) &Mesh_obj::sDefaultStyle,HX_HCSTRING("sDefaultStyle","\xc3","\x8d","\x03","\x57")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Mesh_obj::sDefaultStyleFactory,HX_HCSTRING("sDefaultStyleFactory","\x47","\x45","\xce","\xae")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Mesh_obj_sMemberFields[] = {
	HX_HCSTRING("__style","\x11","\xfe","\x7b","\xee"),
	HX_HCSTRING("__vertexData","\xce","\x5a","\xb3","\x0b"),
	HX_HCSTRING("__indexData","\x3c","\x57","\x9d","\x2c"),
	HX_HCSTRING("__pixelSnapping","\x42","\xe7","\x53","\x40"),
	HX_HCSTRING("dispose","\x9f","\x80","\x4c","\xbb"),
	HX_HCSTRING("hitTest","\x45","\x60","\x7f","\xe2"),
	HX_HCSTRING("getBounds","\xab","\x0f","\x74","\xe2"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	HX_HCSTRING("setStyle","\x2f","\x0e","\x52","\x92"),
	HX_HCSTRING("__createDefaultMeshStyle","\x3f","\xbd","\x5e","\xee"),
	HX_HCSTRING("setVertexDataChanged","\xe4","\x58","\xbe","\xbe"),
	HX_HCSTRING("setIndexDataChanged","\xba","\xe9","\xee","\x02"),
	HX_HCSTRING("getVertexPosition","\x63","\xeb","\x87","\xc2"),
	HX_HCSTRING("setVertexPosition","\x6f","\xc3","\xf5","\xe5"),
	HX_HCSTRING("getVertexAlpha","\x64","\xc4","\x70","\xbd"),
	HX_HCSTRING("setVertexAlpha","\xd8","\xac","\x90","\xdd"),
	HX_HCSTRING("getVertexColor","\x69","\x8e","\x36","\xe6"),
	HX_HCSTRING("setVertexColor","\xdd","\x76","\x56","\x06"),
	HX_HCSTRING("getTexCoords","\xef","\xf9","\xc9","\xb0"),
	HX_HCSTRING("setTexCoords","\x63","\x1d","\xc3","\xc5"),
	HX_HCSTRING("get_vertexData","\xf7","\x67","\x15","\x49"),
	HX_HCSTRING("get_indexData","\x33","\xe2","\xd4","\xbf"),
	HX_HCSTRING("get_style","\x88","\x01","\xc7","\xc7"),
	HX_HCSTRING("set_style","\x94","\xed","\x17","\xab"),
	HX_HCSTRING("get_texture","\xf2","\x28","\xdb","\x24"),
	HX_HCSTRING("set_texture","\xfe","\x2f","\x48","\x2f"),
	HX_HCSTRING("get_color","\xba","\xcd","\x05","\x8e"),
	HX_HCSTRING("set_color","\xc6","\xb9","\x56","\x71"),
	HX_HCSTRING("get_textureSmoothing","\x22","\xde","\x99","\x88"),
	HX_HCSTRING("set_textureSmoothing","\x96","\x95","\x51","\x55"),
	HX_HCSTRING("get_textureRepeat","\xed","\x75","\x04","\xa0"),
	HX_HCSTRING("set_textureRepeat","\xf9","\x4d","\x72","\xc3"),
	HX_HCSTRING("get_pixelSnapping","\xb9","\xb9","\x11","\xbf"),
	HX_HCSTRING("set_pixelSnapping","\xc5","\x91","\x7f","\xe2"),
	HX_HCSTRING("get_numVertices","\xf6","\xc7","\x0d","\x17"),
	HX_HCSTRING("get_numIndices","\xca","\x0d","\x6a","\x89"),
	HX_HCSTRING("get_numTriangles","\x0e","\x26","\x50","\x2b"),
	HX_HCSTRING("get_vertexFormat","\x44","\x6e","\x42","\xa2"),
	::String(null()) };

static void Mesh_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Mesh_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Mesh_obj::sDefaultStyle,"sDefaultStyle");
	HX_MARK_MEMBER_NAME(Mesh_obj::sDefaultStyleFactory,"sDefaultStyleFactory");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Mesh_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Mesh_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Mesh_obj::sDefaultStyle,"sDefaultStyle");
	HX_VISIT_MEMBER_NAME(Mesh_obj::sDefaultStyleFactory,"sDefaultStyleFactory");
};

#endif

hx::Class Mesh_obj::__mClass;

static ::String Mesh_obj_sStaticFields[] = {
	HX_HCSTRING("sDefaultStyle","\xc3","\x8d","\x03","\x57"),
	HX_HCSTRING("sDefaultStyleFactory","\x47","\x45","\xce","\xae"),
	HX_HCSTRING("get_defaultStyle","\x39","\xcd","\x17","\x3e"),
	HX_HCSTRING("set_defaultStyle","\xad","\xba","\x59","\x94"),
	HX_HCSTRING("get_defaultStyleFactory","\x91","\x80","\x90","\x59"),
	HX_HCSTRING("set_defaultStyleFactory","\x9d","\xe9","\xf1","\x5b"),
	HX_HCSTRING("fromPolygon","\x30","\x66","\xd1","\xaa"),
	::String(null())
};

void Mesh_obj::__register()
{
	hx::Object *dummy = new Mesh_obj;
	Mesh_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.display.Mesh","\x1f","\x6f","\xea","\xca");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Mesh_obj::__GetStatic;
	__mClass->mSetStaticField = &Mesh_obj::__SetStatic;
	__mClass->mMarkFunc = Mesh_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Mesh_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Mesh_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Mesh_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Mesh_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mesh_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mesh_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Mesh_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_51_boot)
HXDLIN(  51)		sDefaultStyle = hx::ClassOf< ::starling::styles::MeshStyle >();
            	}
{
            	HX_STACKFRAME(&_hx_pos_e33c7a76d55a5a37_52_boot)
HXDLIN(  52)		sDefaultStyleFactory = null();
            	}
}

} // end namespace starling
} // end namespace display
