// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_starling_utils_Max
#include <starling/utils/Max.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2ae8fc1785dcb3b4_9_boot,"starling.utils.Max","boot",0xb0b3c11f,"starling.utils.Max.boot","starling/utils/Max.hx",9,0x7c6f86ff)
HX_LOCAL_STACK_FRAME(_hx_pos_2ae8fc1785dcb3b4_12_boot,"starling.utils.Max","boot",0xb0b3c11f,"starling.utils.Max.boot","starling/utils/Max.hx",12,0x7c6f86ff)
HX_LOCAL_STACK_FRAME(_hx_pos_2ae8fc1785dcb3b4_15_boot,"starling.utils.Max","boot",0xb0b3c11f,"starling.utils.Max.boot","starling/utils/Max.hx",15,0x7c6f86ff)
HX_LOCAL_STACK_FRAME(_hx_pos_2ae8fc1785dcb3b4_18_boot,"starling.utils.Max","boot",0xb0b3c11f,"starling.utils.Max.boot","starling/utils/Max.hx",18,0x7c6f86ff)
HX_LOCAL_STACK_FRAME(_hx_pos_2ae8fc1785dcb3b4_21_boot,"starling.utils.Max","boot",0xb0b3c11f,"starling.utils.Max.boot","starling/utils/Max.hx",21,0x7c6f86ff)
namespace starling{
namespace utils{

void Max_obj::__construct() { }

Dynamic Max_obj::__CreateEmpty() { return new Max_obj; }

void *Max_obj::_hx_vtable = 0;

Dynamic Max_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Max_obj > _hx_result = new Max_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Max_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x50b61c43;
}

Float Max_obj::MAX_VALUE;

Float Max_obj::MIN_VALUE;

int Max_obj::INT_MAX_VALUE;

int Max_obj::INT_MIN_VALUE;

int Max_obj::UINT_MAX_VALUE;


Max_obj::Max_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Max_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Max_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &Max_obj::MAX_VALUE,HX_HCSTRING("MAX_VALUE","\x16","\x60","\x5a","\xef")},
	{hx::fsFloat,(void *) &Max_obj::MIN_VALUE,HX_HCSTRING("MIN_VALUE","\x84","\x4d","\x17","\x19")},
	{hx::fsInt,(void *) &Max_obj::INT_MAX_VALUE,HX_HCSTRING("INT_MAX_VALUE","\x66","\x3d","\x2f","\x80")},
	{hx::fsInt,(void *) &Max_obj::INT_MIN_VALUE,HX_HCSTRING("INT_MIN_VALUE","\xd4","\x2a","\xec","\xa9")},
	{hx::fsInt,(void *) &Max_obj::UINT_MAX_VALUE,HX_HCSTRING("UINT_MAX_VALUE","\xf1","\xeb","\xbb","\x23")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Max_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Max_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Max_obj::MAX_VALUE,"MAX_VALUE");
	HX_MARK_MEMBER_NAME(Max_obj::MIN_VALUE,"MIN_VALUE");
	HX_MARK_MEMBER_NAME(Max_obj::INT_MAX_VALUE,"INT_MAX_VALUE");
	HX_MARK_MEMBER_NAME(Max_obj::INT_MIN_VALUE,"INT_MIN_VALUE");
	HX_MARK_MEMBER_NAME(Max_obj::UINT_MAX_VALUE,"UINT_MAX_VALUE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Max_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Max_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Max_obj::MAX_VALUE,"MAX_VALUE");
	HX_VISIT_MEMBER_NAME(Max_obj::MIN_VALUE,"MIN_VALUE");
	HX_VISIT_MEMBER_NAME(Max_obj::INT_MAX_VALUE,"INT_MAX_VALUE");
	HX_VISIT_MEMBER_NAME(Max_obj::INT_MIN_VALUE,"INT_MIN_VALUE");
	HX_VISIT_MEMBER_NAME(Max_obj::UINT_MAX_VALUE,"UINT_MAX_VALUE");
};

#endif

hx::Class Max_obj::__mClass;

static ::String Max_obj_sStaticFields[] = {
	HX_HCSTRING("MAX_VALUE","\x16","\x60","\x5a","\xef"),
	HX_HCSTRING("MIN_VALUE","\x84","\x4d","\x17","\x19"),
	HX_HCSTRING("INT_MAX_VALUE","\x66","\x3d","\x2f","\x80"),
	HX_HCSTRING("INT_MIN_VALUE","\xd4","\x2a","\xec","\xa9"),
	HX_HCSTRING("UINT_MAX_VALUE","\xf1","\xeb","\xbb","\x23"),
	::String(null())
};

void Max_obj::__register()
{
	hx::Object *dummy = new Max_obj;
	Max_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.utils.Max","\xa1","\x4a","\x9f","\xb4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Max_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Max_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Max_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Max_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Max_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Max_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Max_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_2ae8fc1785dcb3b4_9_boot)
HXDLIN(   9)		MAX_VALUE = ((Float)1.79e+308);
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ae8fc1785dcb3b4_12_boot)
HXDLIN(  12)		MIN_VALUE = ((Float)5e-324);
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ae8fc1785dcb3b4_15_boot)
HXDLIN(  15)		INT_MAX_VALUE = (int)2147483647;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ae8fc1785dcb3b4_18_boot)
HXDLIN(  18)		INT_MIN_VALUE = (int)-2147483647;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ae8fc1785dcb3b4_21_boot)
HXDLIN(  21)		UINT_MAX_VALUE = (int)-1;
            	}
}

} // end namespace starling
} // end namespace utils
