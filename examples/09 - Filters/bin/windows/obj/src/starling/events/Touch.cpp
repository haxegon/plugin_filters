// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_AbstractVector
#include <openfl/_Vector/AbstractVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_starling_display_DisplayObject
#include <starling/display/DisplayObject.h>
#endif
#ifndef INCLUDED_starling_display_DisplayObjectContainer
#include <starling/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_starling_events_Event
#include <starling/events/Event.h>
#endif
#ifndef INCLUDED_starling_events_EventDispatcher
#include <starling/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_starling_events_Touch
#include <starling/events/Touch.h>
#endif
#ifndef INCLUDED_starling_events_TouchEvent
#include <starling/events/TouchEvent.h>
#endif
#ifndef INCLUDED_starling_utils_StringUtil
#include <starling/utils/StringUtil.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_60_new,"starling.events.Touch","new",0x056984e2,"starling.events.Touch.new","starling/events/Touch.hx",60,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_72_getLocation,"starling.events.Touch","getLocation",0x89bb376d,"starling.events.Touch.getLocation","starling/events/Touch.hx",72,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_81_getPreviousLocation,"starling.events.Touch","getPreviousLocation",0x965736c4,"starling.events.Touch.getPreviousLocation","starling/events/Touch.hx",81,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_90_getMovement,"starling.events.Touch","getMovement",0xa4ac4e67,"starling.events.Touch.getMovement","starling/events/Touch.hx",90,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_103_isTouching,"starling.events.Touch","isTouching",0xf63ae84b,"starling.events.Touch.isTouching","starling/events/Touch.hx",103,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_109_toString,"starling.events.Touch","toString",0xde9184ea,"starling.events.Touch.toString","starling/events/Touch.hx",109,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_115_clone,"starling.events.Touch","clone",0x05b06c5f,"starling.events.Touch.clone","starling/events/Touch.hx",115,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_136_updateBubbleChain,"starling.events.Touch","updateBubbleChain",0x7b3bca4e,"starling.events.Touch.updateBubbleChain","starling/events/Touch.hx",136,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_157_get_id,"starling.events.Touch","get_id",0x89907be2,"starling.events.Touch.get_id","starling/events/Touch.hx",157,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_161_get_previousGlobalX,"starling.events.Touch","get_previousGlobalX",0xa3189db7,"starling.events.Touch.get_previousGlobalX","starling/events/Touch.hx",161,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_165_get_previousGlobalY,"starling.events.Touch","get_previousGlobalY",0xa3189db8,"starling.events.Touch.get_previousGlobalY","starling/events/Touch.hx",165,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_170_get_globalX,"starling.events.Touch","get_globalX",0x18b46c2e,"starling.events.Touch.get_globalX","starling/events/Touch.hx",170,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_172_set_globalX,"starling.events.Touch","set_globalX",0x2321733a,"starling.events.Touch.set_globalX","starling/events/Touch.hx",172,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_180_get_globalY,"starling.events.Touch","get_globalY",0x18b46c2f,"starling.events.Touch.get_globalY","starling/events/Touch.hx",180,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_182_set_globalY,"starling.events.Touch","set_globalY",0x2321733b,"starling.events.Touch.set_globalY","starling/events/Touch.hx",182,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_190_get_tapCount,"starling.events.Touch","get_tapCount",0x398532b3,"starling.events.Touch.get_tapCount","starling/events/Touch.hx",190,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_191_set_tapCount,"starling.events.Touch","set_tapCount",0x4e7e5627,"starling.events.Touch.set_tapCount","starling/events/Touch.hx",191,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_195_get_phase,"starling.events.Touch","get_phase",0xbdcd8694,"starling.events.Touch.get_phase","starling/events/Touch.hx",195,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_196_set_phase,"starling.events.Touch","set_phase",0xa11e72a0,"starling.events.Touch.set_phase","starling/events/Touch.hx",196,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_200_get_target,"starling.events.Touch","get_target",0xf2db22d8,"starling.events.Touch.get_target","starling/events/Touch.hx",200,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_202_set_target,"starling.events.Touch","set_target",0xf658c14c,"starling.events.Touch.set_target","starling/events/Touch.hx",202,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_213_get_timestamp,"starling.events.Touch","get_timestamp",0x4ce3d3af,"starling.events.Touch.get_timestamp","starling/events/Touch.hx",213,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_214_set_timestamp,"starling.events.Touch","set_timestamp",0x91e9b5bb,"starling.events.Touch.set_timestamp","starling/events/Touch.hx",214,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_219_get_pressure,"starling.events.Touch","get_pressure",0x579c0b0c,"starling.events.Touch.get_pressure","starling/events/Touch.hx",219,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_220_set_pressure,"starling.events.Touch","set_pressure",0x6c952e80,"starling.events.Touch.set_pressure","starling/events/Touch.hx",220,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_225_get_width,"starling.events.Touch","get_width",0xc647145f,"starling.events.Touch.get_width","starling/events/Touch.hx",225,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_226_set_width,"starling.events.Touch","set_width",0xa998006b,"starling.events.Touch.set_width","starling/events/Touch.hx",226,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_231_get_height,"starling.events.Touch","get_height",0x6e3a376e,"starling.events.Touch.get_height","starling/events/Touch.hx",231,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_232_set_height,"starling.events.Touch","set_height",0x71b7d5e2,"starling.events.Touch.set_height","starling/events/Touch.hx",232,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_237_get_cancelled,"starling.events.Touch","get_cancelled",0xc949856a,"starling.events.Touch.get_cancelled","starling/events/Touch.hx",237,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_238_set_cancelled,"starling.events.Touch","set_cancelled",0x0e4f6776,"starling.events.Touch.set_cancelled","starling/events/Touch.hx",238,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_247_dispatchEvent,"starling.events.Touch","dispatchEvent",0xac15f202,"starling.events.Touch.dispatchEvent","starling/events/Touch.hx",247,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_254_get_bubbleChain,"starling.events.Touch","get_bubbleChain",0xf85770ee,"starling.events.Touch.get_bubbleChain","starling/events/Touch.hx",254,0x86a3beee)
HX_LOCAL_STACK_FRAME(_hx_pos_57acfcdd6b7f2e9f_56_boot,"starling.events.Touch","boot",0xaf03c170,"starling.events.Touch.boot","starling/events/Touch.hx",56,0x86a3beee)
namespace starling{
namespace events{

void Touch_obj::__construct(int id){
            	HX_GC_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_60_new)
HXLINE(  61)		this->_hx___id = id;
HXLINE(  62)		this->_hx___tapCount = (int)0;
HXLINE(  63)		this->_hx___phase = HX_("hover",bc,e5,64,2b);
HXLINE(  64)		this->_hx___pressure = (this->_hx___width = (this->_hx___height = ((Float)1.0)));
HXLINE(  65)		int length = null();
HXDLIN(  65)		bool fixed = null();
HXDLIN(  65)		this->_hx___bubbleChain =  ::openfl::_Vector::AbstractVector_obj::__alloc( HX_CTX , ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,length,fixed,null()),null());
            	}

Dynamic Touch_obj::__CreateEmpty() { return new Touch_obj; }

void *Touch_obj::_hx_vtable = 0;

Dynamic Touch_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Touch_obj > _hx_result = new Touch_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Touch_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x04ad087a;
}

 ::openfl::geom::Point Touch_obj::getLocation( ::starling::display::DisplayObject space, ::openfl::geom::Point out){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_72_getLocation)
HXLINE(  73)		::starling::events::Touch_obj::sHelperPoint->setTo(this->_hx___globalX,this->_hx___globalY);
HXLINE(  74)		return space->globalToLocal(::starling::events::Touch_obj::sHelperPoint,out);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Touch_obj,getLocation,return )

 ::openfl::geom::Point Touch_obj::getPreviousLocation( ::starling::display::DisplayObject space, ::openfl::geom::Point out){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_81_getPreviousLocation)
HXLINE(  82)		::starling::events::Touch_obj::sHelperPoint->setTo(this->_hx___previousGlobalX,this->_hx___previousGlobalY);
HXLINE(  83)		return space->globalToLocal(::starling::events::Touch_obj::sHelperPoint,out);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Touch_obj,getPreviousLocation,return )

 ::openfl::geom::Point Touch_obj::getMovement( ::starling::display::DisplayObject space, ::openfl::geom::Point out){
            	HX_GC_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_90_getMovement)
HXLINE(  91)		if (hx::IsNull( out )) {
HXLINE(  91)			out =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,null(),null());
            		}
HXLINE(  92)		this->getLocation(space,out);
HXLINE(  93)		Float x = out->x;
HXLINE(  94)		Float y = out->y;
HXLINE(  95)		this->getPreviousLocation(space,out);
HXLINE(  96)		Float _hx_tmp = (x - out->x);
HXDLIN(  96)		out->setTo(_hx_tmp,(y - out->y));
HXLINE(  97)		return out;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Touch_obj,getMovement,return )

bool Touch_obj::isTouching( ::starling::display::DisplayObject target){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_103_isTouching)
HXDLIN( 103)		return (::openfl::_Vector::IVector_obj::indexOf(this->_hx___bubbleChain->data,target,(int)0) != (int)-1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,isTouching,return )

::String Touch_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_109_toString)
HXDLIN( 109)		return ::starling::utils::StringUtil_obj::format(HX_("[Touch {0}: globalX={1}, globalY={2}, phase={3}]",2c,aa,4e,84),::cpp::VirtualArray_obj::__new(4)->init(0,this->_hx___id)->init(1,this->_hx___globalX)->init(2,this->_hx___globalY)->init(3,this->_hx___phase));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,toString,return )

 ::starling::events::Touch Touch_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_115_clone)
HXLINE( 116)		 ::starling::events::Touch clone =  ::starling::events::Touch_obj::__alloc( HX_CTX ,this->_hx___id);
HXLINE( 117)		clone->_hx___globalX = this->_hx___globalX;
HXLINE( 118)		clone->_hx___globalY = this->_hx___globalY;
HXLINE( 119)		clone->_hx___previousGlobalX = this->_hx___previousGlobalX;
HXLINE( 120)		clone->_hx___previousGlobalY = this->_hx___previousGlobalY;
HXLINE( 121)		clone->_hx___phase = this->_hx___phase;
HXLINE( 122)		clone->_hx___tapCount = this->_hx___tapCount;
HXLINE( 123)		clone->_hx___timestamp = this->_hx___timestamp;
HXLINE( 124)		clone->_hx___pressure = this->_hx___pressure;
HXLINE( 125)		clone->_hx___width = this->_hx___width;
HXLINE( 126)		clone->_hx___height = this->_hx___height;
HXLINE( 127)		clone->_hx___cancelled = this->_hx___cancelled;
HXLINE( 128)		clone->set_target(this->_hx___target);
HXLINE( 129)		return clone;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,clone,return )

void Touch_obj::updateBubbleChain(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_136_updateBubbleChain)
HXDLIN( 136)		if (hx::IsNotNull( this->_hx___target )) {
HXLINE( 138)			int length = (int)1;
HXLINE( 139)			 ::starling::display::DisplayObject element = this->_hx___target;
HXLINE( 141)			::openfl::_Vector::IVector_obj::set_length(this->_hx___bubbleChain->data,(int)1);
HXLINE( 142)			::openfl::_Vector::IVector_obj::set(this->_hx___bubbleChain->data,(int)0,element);
HXLINE( 144)			while(true){
HXLINE( 144)				element = element->get_parent();
HXDLIN( 144)				if (!(hx::IsNotNull( element ))) {
HXLINE( 144)					goto _hx_goto_7;
            				}
HXLINE( 145)				length = (length + (int)1);
HXDLIN( 145)				::openfl::_Vector::IVector_obj::set(this->_hx___bubbleChain->data,(length - (int)1),element);
            			}
            			_hx_goto_7:;
            		}
            		else {
HXLINE( 149)			::openfl::_Vector::IVector_obj::set_length(this->_hx___bubbleChain->data,(int)0);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,updateBubbleChain,(void))

int Touch_obj::get_id(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_157_get_id)
HXDLIN( 157)		return this->_hx___id;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_id,return )

Float Touch_obj::get_previousGlobalX(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_161_get_previousGlobalX)
HXDLIN( 161)		return this->_hx___previousGlobalX;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_previousGlobalX,return )

Float Touch_obj::get_previousGlobalY(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_165_get_previousGlobalY)
HXDLIN( 165)		return this->_hx___previousGlobalY;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_previousGlobalY,return )

Float Touch_obj::get_globalX(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_170_get_globalX)
HXDLIN( 170)		return this->_hx___globalX;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_globalX,return )

Float Touch_obj::set_globalX(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_172_set_globalX)
HXLINE( 173)		Float _hx_tmp;
HXDLIN( 173)		if ((this->_hx___globalX != this->_hx___globalX)) {
HXLINE( 173)			_hx_tmp = value;
            		}
            		else {
HXLINE( 173)			_hx_tmp = this->_hx___globalX;
            		}
HXDLIN( 173)		this->_hx___previousGlobalX = _hx_tmp;
HXLINE( 174)		return (this->_hx___globalX = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_globalX,return )

Float Touch_obj::get_globalY(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_180_get_globalY)
HXDLIN( 180)		return this->_hx___globalY;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_globalY,return )

Float Touch_obj::set_globalY(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_182_set_globalY)
HXLINE( 183)		Float _hx_tmp;
HXDLIN( 183)		if ((this->_hx___globalY != this->_hx___globalY)) {
HXLINE( 183)			_hx_tmp = value;
            		}
            		else {
HXLINE( 183)			_hx_tmp = this->_hx___globalY;
            		}
HXDLIN( 183)		this->_hx___previousGlobalY = _hx_tmp;
HXLINE( 184)		return (this->_hx___globalY = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_globalY,return )

int Touch_obj::get_tapCount(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_190_get_tapCount)
HXDLIN( 190)		return this->_hx___tapCount;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_tapCount,return )

int Touch_obj::set_tapCount(int value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_191_set_tapCount)
HXDLIN( 191)		return (this->_hx___tapCount = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_tapCount,return )

::String Touch_obj::get_phase(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_195_get_phase)
HXDLIN( 195)		return this->_hx___phase;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_phase,return )

::String Touch_obj::set_phase(::String value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_196_set_phase)
HXDLIN( 196)		return (this->_hx___phase = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_phase,return )

 ::starling::display::DisplayObject Touch_obj::get_target(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_200_get_target)
HXDLIN( 200)		return this->_hx___target;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_target,return )

 ::starling::display::DisplayObject Touch_obj::set_target( ::starling::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_202_set_target)
HXLINE( 203)		if (hx::IsNotEq( this->_hx___target,value )) {
HXLINE( 205)			this->_hx___target = value;
HXLINE( 206)			this->updateBubbleChain();
            		}
HXLINE( 208)		return this->_hx___target;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_target,return )

Float Touch_obj::get_timestamp(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_213_get_timestamp)
HXDLIN( 213)		return this->_hx___timestamp;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_timestamp,return )

Float Touch_obj::set_timestamp(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_214_set_timestamp)
HXDLIN( 214)		return (this->_hx___timestamp = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_timestamp,return )

Float Touch_obj::get_pressure(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_219_get_pressure)
HXDLIN( 219)		return this->_hx___pressure;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_pressure,return )

Float Touch_obj::set_pressure(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_220_set_pressure)
HXDLIN( 220)		return (this->_hx___pressure = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_pressure,return )

Float Touch_obj::get_width(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_225_get_width)
HXDLIN( 225)		return this->_hx___width;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_width,return )

Float Touch_obj::set_width(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_226_set_width)
HXDLIN( 226)		return (this->_hx___width = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_width,return )

Float Touch_obj::get_height(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_231_get_height)
HXDLIN( 231)		return this->_hx___height;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_height,return )

Float Touch_obj::set_height(Float value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_232_set_height)
HXDLIN( 232)		return (this->_hx___height = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_height,return )

bool Touch_obj::get_cancelled(){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_237_get_cancelled)
HXDLIN( 237)		return this->_hx___cancelled;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_cancelled,return )

bool Touch_obj::set_cancelled(bool value){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_238_set_cancelled)
HXDLIN( 238)		return (this->_hx___cancelled = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,set_cancelled,return )

void Touch_obj::dispatchEvent( ::starling::events::TouchEvent event){
            	HX_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_247_dispatchEvent)
HXDLIN( 247)		if (hx::IsNotNull( this->_hx___target )) {
HXDLIN( 247)			event->dispatch(this->_hx___bubbleChain);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Touch_obj,dispatchEvent,(void))

 ::openfl::_Vector::AbstractVector Touch_obj::get_bubbleChain(){
            	HX_GC_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_254_get_bubbleChain)
HXDLIN( 254)		::Dynamic data = null();
HXDLIN( 254)		return  ::openfl::_Vector::AbstractVector_obj::__alloc( HX_CTX ,::openfl::_Vector::IVector_obj::concat(this->_hx___bubbleChain->data,data),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Touch_obj,get_bubbleChain,return )

 ::openfl::geom::Point Touch_obj::sHelperPoint;


hx::ObjectPtr< Touch_obj > Touch_obj::__new(int id) {
	hx::ObjectPtr< Touch_obj > __this = new Touch_obj();
	__this->__construct(id);
	return __this;
}

hx::ObjectPtr< Touch_obj > Touch_obj::__alloc(hx::Ctx *_hx_ctx,int id) {
	Touch_obj *__this = (Touch_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Touch_obj), true, "starling.events.Touch"));
	*(void **)__this = Touch_obj::_hx_vtable;
	__this->__construct(id);
	return __this;
}

Touch_obj::Touch_obj()
{
}

void Touch_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Touch);
	HX_MARK_MEMBER_NAME(_hx___id,"__id");
	HX_MARK_MEMBER_NAME(_hx___globalX,"__globalX");
	HX_MARK_MEMBER_NAME(_hx___globalY,"__globalY");
	HX_MARK_MEMBER_NAME(_hx___previousGlobalX,"__previousGlobalX");
	HX_MARK_MEMBER_NAME(_hx___previousGlobalY,"__previousGlobalY");
	HX_MARK_MEMBER_NAME(_hx___tapCount,"__tapCount");
	HX_MARK_MEMBER_NAME(_hx___phase,"__phase");
	HX_MARK_MEMBER_NAME(_hx___target,"__target");
	HX_MARK_MEMBER_NAME(_hx___timestamp,"__timestamp");
	HX_MARK_MEMBER_NAME(_hx___pressure,"__pressure");
	HX_MARK_MEMBER_NAME(_hx___width,"__width");
	HX_MARK_MEMBER_NAME(_hx___height,"__height");
	HX_MARK_MEMBER_NAME(_hx___cancelled,"__cancelled");
	HX_MARK_MEMBER_NAME(_hx___bubbleChain,"__bubbleChain");
	HX_MARK_END_CLASS();
}

void Touch_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___id,"__id");
	HX_VISIT_MEMBER_NAME(_hx___globalX,"__globalX");
	HX_VISIT_MEMBER_NAME(_hx___globalY,"__globalY");
	HX_VISIT_MEMBER_NAME(_hx___previousGlobalX,"__previousGlobalX");
	HX_VISIT_MEMBER_NAME(_hx___previousGlobalY,"__previousGlobalY");
	HX_VISIT_MEMBER_NAME(_hx___tapCount,"__tapCount");
	HX_VISIT_MEMBER_NAME(_hx___phase,"__phase");
	HX_VISIT_MEMBER_NAME(_hx___target,"__target");
	HX_VISIT_MEMBER_NAME(_hx___timestamp,"__timestamp");
	HX_VISIT_MEMBER_NAME(_hx___pressure,"__pressure");
	HX_VISIT_MEMBER_NAME(_hx___width,"__width");
	HX_VISIT_MEMBER_NAME(_hx___height,"__height");
	HX_VISIT_MEMBER_NAME(_hx___cancelled,"__cancelled");
	HX_VISIT_MEMBER_NAME(_hx___bubbleChain,"__bubbleChain");
}

hx::Val Touch_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_id() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"__id") ) { return hx::Val( _hx___id ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		if (HX_FIELD_EQ(inName,"phase") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_phase() ); }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_width() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { return hx::Val( get_id_dyn() ); }
		if (HX_FIELD_EQ(inName,"target") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_target() ); }
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_height() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__phase") ) { return hx::Val( _hx___phase ); }
		if (HX_FIELD_EQ(inName,"__width") ) { return hx::Val( _hx___width ); }
		if (HX_FIELD_EQ(inName,"globalX") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_globalX() ); }
		if (HX_FIELD_EQ(inName,"globalY") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_globalY() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__target") ) { return hx::Val( _hx___target ); }
		if (HX_FIELD_EQ(inName,"__height") ) { return hx::Val( _hx___height ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"tapCount") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_tapCount() ); }
		if (HX_FIELD_EQ(inName,"pressure") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pressure() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"__globalX") ) { return hx::Val( _hx___globalX ); }
		if (HX_FIELD_EQ(inName,"__globalY") ) { return hx::Val( _hx___globalY ); }
		if (HX_FIELD_EQ(inName,"get_phase") ) { return hx::Val( get_phase_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_phase") ) { return hx::Val( set_phase_dyn() ); }
		if (HX_FIELD_EQ(inName,"timestamp") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_timestamp() ); }
		if (HX_FIELD_EQ(inName,"get_width") ) { return hx::Val( get_width_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_width") ) { return hx::Val( set_width_dyn() ); }
		if (HX_FIELD_EQ(inName,"cancelled") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_cancelled() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"__tapCount") ) { return hx::Val( _hx___tapCount ); }
		if (HX_FIELD_EQ(inName,"__pressure") ) { return hx::Val( _hx___pressure ); }
		if (HX_FIELD_EQ(inName,"isTouching") ) { return hx::Val( isTouching_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_target") ) { return hx::Val( get_target_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_target") ) { return hx::Val( set_target_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_height") ) { return hx::Val( get_height_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_height") ) { return hx::Val( set_height_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"__timestamp") ) { return hx::Val( _hx___timestamp ); }
		if (HX_FIELD_EQ(inName,"__cancelled") ) { return hx::Val( _hx___cancelled ); }
		if (HX_FIELD_EQ(inName,"getLocation") ) { return hx::Val( getLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMovement") ) { return hx::Val( getMovement_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_globalX") ) { return hx::Val( get_globalX_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_globalX") ) { return hx::Val( set_globalX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_globalY") ) { return hx::Val( get_globalY_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_globalY") ) { return hx::Val( set_globalY_dyn() ); }
		if (HX_FIELD_EQ(inName,"bubbleChain") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_bubbleChain() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_tapCount") ) { return hx::Val( get_tapCount_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_tapCount") ) { return hx::Val( set_tapCount_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_pressure") ) { return hx::Val( get_pressure_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pressure") ) { return hx::Val( set_pressure_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"__bubbleChain") ) { return hx::Val( _hx___bubbleChain ); }
		if (HX_FIELD_EQ(inName,"get_timestamp") ) { return hx::Val( get_timestamp_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_timestamp") ) { return hx::Val( set_timestamp_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_cancelled") ) { return hx::Val( get_cancelled_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_cancelled") ) { return hx::Val( set_cancelled_dyn() ); }
		if (HX_FIELD_EQ(inName,"dispatchEvent") ) { return hx::Val( dispatchEvent_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"previousGlobalX") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_previousGlobalX() ); }
		if (HX_FIELD_EQ(inName,"previousGlobalY") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_previousGlobalY() ); }
		if (HX_FIELD_EQ(inName,"get_bubbleChain") ) { return hx::Val( get_bubbleChain_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"__previousGlobalX") ) { return hx::Val( _hx___previousGlobalX ); }
		if (HX_FIELD_EQ(inName,"__previousGlobalY") ) { return hx::Val( _hx___previousGlobalY ); }
		if (HX_FIELD_EQ(inName,"updateBubbleChain") ) { return hx::Val( updateBubbleChain_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getPreviousLocation") ) { return hx::Val( getPreviousLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_previousGlobalX") ) { return hx::Val( get_previousGlobalX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_previousGlobalY") ) { return hx::Val( get_previousGlobalY_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Touch_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"sHelperPoint") ) { outValue = ( sHelperPoint ); return true; }
	}
	return false;
}

hx::Val Touch_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"__id") ) { _hx___id=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"phase") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_phase(inValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_width(inValue.Cast< Float >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_target(inValue.Cast<  ::starling::display::DisplayObject >()) ); }
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_height(inValue.Cast< Float >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__phase") ) { _hx___phase=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__width") ) { _hx___width=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"globalX") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_globalX(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"globalY") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_globalY(inValue.Cast< Float >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__target") ) { _hx___target=inValue.Cast<  ::starling::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__height") ) { _hx___height=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tapCount") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_tapCount(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"pressure") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pressure(inValue.Cast< Float >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"__globalX") ) { _hx___globalX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__globalY") ) { _hx___globalY=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"timestamp") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_timestamp(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"cancelled") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_cancelled(inValue.Cast< bool >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"__tapCount") ) { _hx___tapCount=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__pressure") ) { _hx___pressure=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"__timestamp") ) { _hx___timestamp=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__cancelled") ) { _hx___cancelled=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"__bubbleChain") ) { _hx___bubbleChain=inValue.Cast<  ::openfl::_Vector::AbstractVector >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"__previousGlobalX") ) { _hx___previousGlobalX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__previousGlobalY") ) { _hx___previousGlobalY=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Touch_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"sHelperPoint") ) { sHelperPoint=ioValue.Cast<  ::openfl::geom::Point >(); return true; }
	}
	return false;
}

void Touch_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f"));
	outFields->push(HX_HCSTRING("__globalX","\x75","\x56","\x87","\x95"));
	outFields->push(HX_HCSTRING("__globalY","\x76","\x56","\x87","\x95"));
	outFields->push(HX_HCSTRING("__previousGlobalX","\xfe","\xa6","\xd9","\x6c"));
	outFields->push(HX_HCSTRING("__previousGlobalY","\xff","\xa6","\xd9","\x6c"));
	outFields->push(HX_HCSTRING("__tapCount","\x8c","\x46","\x3f","\xf5"));
	outFields->push(HX_HCSTRING("__phase","\x1b","\x81","\x47","\x2c"));
	outFields->push(HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f"));
	outFields->push(HX_HCSTRING("__timestamp","\xb6","\x1d","\xfb","\xd3"));
	outFields->push(HX_HCSTRING("__pressure","\xe5","\x1e","\x56","\x13"));
	outFields->push(HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34"));
	outFields->push(HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa"));
	outFields->push(HX_HCSTRING("__cancelled","\x71","\xcf","\x60","\x50"));
	outFields->push(HX_HCSTRING("__bubbleChain","\xb5","\x8a","\x5a","\xeb"));
	outFields->push(HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"));
	outFields->push(HX_HCSTRING("previousGlobalX","\x1e","\x76","\x7f","\xe9"));
	outFields->push(HX_HCSTRING("previousGlobalY","\x1f","\x76","\x7f","\xe9"));
	outFields->push(HX_HCSTRING("globalX","\x95","\x05","\x39","\x14"));
	outFields->push(HX_HCSTRING("globalY","\x96","\x05","\x39","\x14"));
	outFields->push(HX_HCSTRING("tapCount","\x6c","\xd3","\x06","\x52"));
	outFields->push(HX_HCSTRING("phase","\x3b","\x28","\xe9","\xc1"));
	outFields->push(HX_HCSTRING("target","\x51","\xf3","\xec","\x86"));
	outFields->push(HX_HCSTRING("timestamp","\xd6","\xd4","\xce","\xa5"));
	outFields->push(HX_HCSTRING("pressure","\xc5","\xab","\x1d","\x70"));
	outFields->push(HX_HCSTRING("width","\x06","\xb6","\x62","\xca"));
	outFields->push(HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"));
	outFields->push(HX_HCSTRING("cancelled","\x91","\x86","\x34","\x22"));
	outFields->push(HX_HCSTRING("bubbleChain","\xd5","\x49","\xe2","\xa2"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Touch_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Touch_obj,_hx___id),HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___globalX),HX_HCSTRING("__globalX","\x75","\x56","\x87","\x95")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___globalY),HX_HCSTRING("__globalY","\x76","\x56","\x87","\x95")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___previousGlobalX),HX_HCSTRING("__previousGlobalX","\xfe","\xa6","\xd9","\x6c")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___previousGlobalY),HX_HCSTRING("__previousGlobalY","\xff","\xa6","\xd9","\x6c")},
	{hx::fsInt,(int)offsetof(Touch_obj,_hx___tapCount),HX_HCSTRING("__tapCount","\x8c","\x46","\x3f","\xf5")},
	{hx::fsString,(int)offsetof(Touch_obj,_hx___phase),HX_HCSTRING("__phase","\x1b","\x81","\x47","\x2c")},
	{hx::fsObject /*::starling::display::DisplayObject*/ ,(int)offsetof(Touch_obj,_hx___target),HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___timestamp),HX_HCSTRING("__timestamp","\xb6","\x1d","\xfb","\xd3")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___pressure),HX_HCSTRING("__pressure","\xe5","\x1e","\x56","\x13")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___width),HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34")},
	{hx::fsFloat,(int)offsetof(Touch_obj,_hx___height),HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa")},
	{hx::fsBool,(int)offsetof(Touch_obj,_hx___cancelled),HX_HCSTRING("__cancelled","\x71","\xcf","\x60","\x50")},
	{hx::fsObject /*::openfl::_Vector::AbstractVector*/ ,(int)offsetof(Touch_obj,_hx___bubbleChain),HX_HCSTRING("__bubbleChain","\xb5","\x8a","\x5a","\xeb")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Touch_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::geom::Point*/ ,(void *) &Touch_obj::sHelperPoint,HX_HCSTRING("sHelperPoint","\x4f","\x0e","\x3c","\xff")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Touch_obj_sMemberFields[] = {
	HX_HCSTRING("__id","\xfb","\xb6","\x13","\x3f"),
	HX_HCSTRING("__globalX","\x75","\x56","\x87","\x95"),
	HX_HCSTRING("__globalY","\x76","\x56","\x87","\x95"),
	HX_HCSTRING("__previousGlobalX","\xfe","\xa6","\xd9","\x6c"),
	HX_HCSTRING("__previousGlobalY","\xff","\xa6","\xd9","\x6c"),
	HX_HCSTRING("__tapCount","\x8c","\x46","\x3f","\xf5"),
	HX_HCSTRING("__phase","\x1b","\x81","\x47","\x2c"),
	HX_HCSTRING("__target","\x71","\x5e","\x1c","\x2f"),
	HX_HCSTRING("__timestamp","\xb6","\x1d","\xfb","\xd3"),
	HX_HCSTRING("__pressure","\xe5","\x1e","\x56","\x13"),
	HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34"),
	HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa"),
	HX_HCSTRING("__cancelled","\x71","\xcf","\x60","\x50"),
	HX_HCSTRING("__bubbleChain","\xb5","\x8a","\x5a","\xeb"),
	HX_HCSTRING("getLocation","\xeb","\x30","\x3a","\x0b"),
	HX_HCSTRING("getPreviousLocation","\x42","\xde","\xc8","\x67"),
	HX_HCSTRING("getMovement","\xe5","\x47","\x2b","\x26"),
	HX_HCSTRING("isTouching","\x8d","\x28","\xd4","\x7a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("updateBubbleChain","\x4c","\xf6","\x4b","\x07"),
	HX_HCSTRING("get_id","\x24","\xf3","\x2f","\xa3"),
	HX_HCSTRING("get_previousGlobalX","\x35","\x45","\x8a","\x74"),
	HX_HCSTRING("get_previousGlobalY","\x36","\x45","\x8a","\x74"),
	HX_HCSTRING("get_globalX","\xac","\x65","\x33","\x9a"),
	HX_HCSTRING("set_globalX","\xb8","\x6c","\xa0","\xa4"),
	HX_HCSTRING("get_globalY","\xad","\x65","\x33","\x9a"),
	HX_HCSTRING("set_globalY","\xb9","\x6c","\xa0","\xa4"),
	HX_HCSTRING("get_tapCount","\x75","\x87","\x20","\x07"),
	HX_HCSTRING("set_tapCount","\xe9","\xaa","\x19","\x1c"),
	HX_HCSTRING("get_phase","\x92","\x84","\x92","\x05"),
	HX_HCSTRING("set_phase","\x9e","\x70","\xe3","\xe8"),
	HX_HCSTRING("get_target","\x1a","\x63","\x74","\x77"),
	HX_HCSTRING("set_target","\x8e","\x01","\xf2","\x7a"),
	HX_HCSTRING("get_timestamp","\xad","\xa8","\x32","\x67"),
	HX_HCSTRING("set_timestamp","\xb9","\x8a","\x38","\xac"),
	HX_HCSTRING("get_pressure","\xce","\x5f","\x37","\x25"),
	HX_HCSTRING("set_pressure","\x42","\x83","\x30","\x3a"),
	HX_HCSTRING("get_width","\x5d","\x12","\x0c","\x0e"),
	HX_HCSTRING("set_width","\x69","\xfe","\x5c","\xf1"),
	HX_HCSTRING("get_height","\xb0","\x77","\xd3","\xf2"),
	HX_HCSTRING("set_height","\x24","\x16","\x51","\xf6"),
	HX_HCSTRING("get_cancelled","\x68","\x5a","\x98","\xe3"),
	HX_HCSTRING("set_cancelled","\x74","\x3c","\x9e","\x28"),
	HX_HCSTRING("dispatchEvent","\x00","\xc7","\x64","\xc6"),
	HX_HCSTRING("get_bubbleChain","\x6c","\x01","\xc4","\x63"),
	::String(null()) };

static void Touch_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Touch_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Touch_obj::sHelperPoint,"sHelperPoint");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Touch_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Touch_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Touch_obj::sHelperPoint,"sHelperPoint");
};

#endif

hx::Class Touch_obj::__mClass;

static ::String Touch_obj_sStaticFields[] = {
	HX_HCSTRING("sHelperPoint","\x4f","\x0e","\x3c","\xff"),
	::String(null())
};

void Touch_obj::__register()
{
	hx::Object *dummy = new Touch_obj;
	Touch_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("starling.events.Touch","\xf0","\x2b","\x11","\x1f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Touch_obj::__GetStatic;
	__mClass->mSetStaticField = &Touch_obj::__SetStatic;
	__mClass->mMarkFunc = Touch_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Touch_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Touch_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Touch_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Touch_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Touch_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Touch_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Touch_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_57acfcdd6b7f2e9f_56_boot)
HXDLIN(  56)		sHelperPoint =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,null(),null());
            	}
}

} // end namespace starling
} // end namespace events
