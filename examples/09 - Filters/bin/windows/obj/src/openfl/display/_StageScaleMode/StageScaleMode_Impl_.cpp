// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display__StageScaleMode_StageScaleMode_Impl_
#include <openfl/display/_StageScaleMode/StageScaleMode_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_13_fromString,"openfl.display._StageScaleMode.StageScaleMode_Impl_","fromString",0xa7123530,"openfl.display._StageScaleMode.StageScaleMode_Impl_.fromString","openfl/display/StageScaleMode.hx",13,0x7043b2c3)
HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_27_toString,"openfl.display._StageScaleMode.StageScaleMode_Impl_","toString",0x32c6e8c1,"openfl.display._StageScaleMode.StageScaleMode_Impl_.toString","openfl/display/StageScaleMode.hx",27,0x7043b2c3)
HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_6_boot,"openfl.display._StageScaleMode.StageScaleMode_Impl_","boot",0x3976adc7,"openfl.display._StageScaleMode.StageScaleMode_Impl_.boot","openfl/display/StageScaleMode.hx",6,0x7043b2c3)
HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_7_boot,"openfl.display._StageScaleMode.StageScaleMode_Impl_","boot",0x3976adc7,"openfl.display._StageScaleMode.StageScaleMode_Impl_.boot","openfl/display/StageScaleMode.hx",7,0x7043b2c3)
HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_8_boot,"openfl.display._StageScaleMode.StageScaleMode_Impl_","boot",0x3976adc7,"openfl.display._StageScaleMode.StageScaleMode_Impl_.boot","openfl/display/StageScaleMode.hx",8,0x7043b2c3)
HX_LOCAL_STACK_FRAME(_hx_pos_2edbc9abb5fbacde_9_boot,"openfl.display._StageScaleMode.StageScaleMode_Impl_","boot",0x3976adc7,"openfl.display._StageScaleMode.StageScaleMode_Impl_.boot","openfl/display/StageScaleMode.hx",9,0x7043b2c3)
namespace openfl{
namespace display{
namespace _StageScaleMode{

void StageScaleMode_Impl__obj::__construct() { }

Dynamic StageScaleMode_Impl__obj::__CreateEmpty() { return new StageScaleMode_Impl__obj; }

void *StageScaleMode_Impl__obj::_hx_vtable = 0;

Dynamic StageScaleMode_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StageScaleMode_Impl__obj > _hx_result = new StageScaleMode_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StageScaleMode_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5ae04e6b;
}

 ::Dynamic StageScaleMode_Impl__obj::EXACT_FIT;

 ::Dynamic StageScaleMode_Impl__obj::NO_BORDER;

 ::Dynamic StageScaleMode_Impl__obj::NO_SCALE;

 ::Dynamic StageScaleMode_Impl__obj::SHOW_ALL;

 ::Dynamic StageScaleMode_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_13_fromString)
HXDLIN(  13)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("exactFit",52,58,22,25)) ){
HXLINE(  15)			return (int)0;
HXDLIN(  15)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("noBorder",0d,48,2a,34)) ){
HXLINE(  16)			return (int)1;
HXDLIN(  16)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("noScale",89,52,d2,4b)) ){
HXLINE(  17)			return (int)2;
HXDLIN(  17)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("showAll",24,58,96,7b)) ){
HXLINE(  18)			return (int)3;
HXDLIN(  18)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE(  19)			return null();
            		}
            		_hx_goto_0:;
HXLINE(  13)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StageScaleMode_Impl__obj,fromString,return )

::String StageScaleMode_Impl__obj::toString(int value){
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_27_toString)
HXDLIN(  27)		switch((int)(value)){
            			case (int)0: {
HXLINE(  29)				return HX_("exactFit",52,58,22,25);
            			}
            			break;
            			case (int)1: {
HXLINE(  30)				return HX_("noBorder",0d,48,2a,34);
            			}
            			break;
            			case (int)2: {
HXLINE(  31)				return HX_("noScale",89,52,d2,4b);
            			}
            			break;
            			case (int)3: {
HXLINE(  32)				return HX_("showAll",24,58,96,7b);
            			}
            			break;
            			default:{
HXLINE(  33)				return null();
            			}
            		}
HXLINE(  27)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StageScaleMode_Impl__obj,toString,return )


StageScaleMode_Impl__obj::StageScaleMode_Impl__obj()
{
}

bool StageScaleMode_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StageScaleMode_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo StageScaleMode_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &StageScaleMode_Impl__obj::EXACT_FIT,HX_HCSTRING("EXACT_FIT","\xd1","\x38","\xee","\x79")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageScaleMode_Impl__obj::NO_BORDER,HX_HCSTRING("NO_BORDER","\x6a","\x40","\x33","\x71")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageScaleMode_Impl__obj::NO_SCALE,HX_HCSTRING("NO_SCALE","\xac","\xb8","\x22","\x35")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageScaleMode_Impl__obj::SHOW_ALL,HX_HCSTRING("SHOW_ALL","\x7f","\x39","\x6f","\x2a")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void StageScaleMode_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StageScaleMode_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(StageScaleMode_Impl__obj::EXACT_FIT,"EXACT_FIT");
	HX_MARK_MEMBER_NAME(StageScaleMode_Impl__obj::NO_BORDER,"NO_BORDER");
	HX_MARK_MEMBER_NAME(StageScaleMode_Impl__obj::NO_SCALE,"NO_SCALE");
	HX_MARK_MEMBER_NAME(StageScaleMode_Impl__obj::SHOW_ALL,"SHOW_ALL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StageScaleMode_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StageScaleMode_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(StageScaleMode_Impl__obj::EXACT_FIT,"EXACT_FIT");
	HX_VISIT_MEMBER_NAME(StageScaleMode_Impl__obj::NO_BORDER,"NO_BORDER");
	HX_VISIT_MEMBER_NAME(StageScaleMode_Impl__obj::NO_SCALE,"NO_SCALE");
	HX_VISIT_MEMBER_NAME(StageScaleMode_Impl__obj::SHOW_ALL,"SHOW_ALL");
};

#endif

hx::Class StageScaleMode_Impl__obj::__mClass;

static ::String StageScaleMode_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("EXACT_FIT","\xd1","\x38","\xee","\x79"),
	HX_HCSTRING("NO_BORDER","\x6a","\x40","\x33","\x71"),
	HX_HCSTRING("NO_SCALE","\xac","\xb8","\x22","\x35"),
	HX_HCSTRING("SHOW_ALL","\x7f","\x39","\x6f","\x2a"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void StageScaleMode_Impl__obj::__register()
{
	hx::Object *dummy = new StageScaleMode_Impl__obj;
	StageScaleMode_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display._StageScaleMode.StageScaleMode_Impl_","\xf9","\x9e","\x13","\xb1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StageScaleMode_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StageScaleMode_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StageScaleMode_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StageScaleMode_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StageScaleMode_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageScaleMode_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageScaleMode_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StageScaleMode_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_6_boot)
HXDLIN(   6)		EXACT_FIT = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_7_boot)
HXDLIN(   7)		NO_BORDER = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_8_boot)
HXDLIN(   8)		NO_SCALE = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2edbc9abb5fbacde_9_boot)
HXDLIN(   9)		SHOW_ALL = (int)3;
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _StageScaleMode
