// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display__ShaderParameterType_ShaderParameterType_Impl_
#include <openfl/display/_ShaderParameterType/ShaderParameterType_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_30_fromString,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","fromString",0x95cd8270,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.fromString","openfl/display/ShaderParameterType.hx",30,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_61_toString,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","toString",0xc4386601,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.toString","openfl/display/ShaderParameterType.hx",61,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_6_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",6,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_7_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",7,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_8_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",8,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_9_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",9,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_10_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",10,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_11_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",11,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_12_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",12,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_13_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",13,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_14_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",14,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_15_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",15,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_16_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",16,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_17_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",17,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_18_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",18,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_19_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",19,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_20_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",20,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_21_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",21,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_22_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",22,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_23_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",23,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_24_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",24,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_25_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",25,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_26_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",26,0xaf3fed4c)
namespace openfl{
namespace display{
namespace _ShaderParameterType{

void ShaderParameterType_Impl__obj::__construct() { }

Dynamic ShaderParameterType_Impl__obj::__CreateEmpty() { return new ShaderParameterType_Impl__obj; }

void *ShaderParameterType_Impl__obj::_hx_vtable = 0;

Dynamic ShaderParameterType_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ShaderParameterType_Impl__obj > _hx_result = new ShaderParameterType_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ShaderParameterType_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7e9fb7ed;
}

 ::Dynamic ShaderParameterType_Impl__obj::BOOL;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL2;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL3;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL4;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT2;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT3;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT4;

 ::Dynamic ShaderParameterType_Impl__obj::INT;

 ::Dynamic ShaderParameterType_Impl__obj::INT2;

 ::Dynamic ShaderParameterType_Impl__obj::INT3;

 ::Dynamic ShaderParameterType_Impl__obj::INT4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X4;

 ::Dynamic ShaderParameterType_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_30_fromString)
HXDLIN(  30)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("bool",2a,84,1b,41)) ){
HXLINE(  32)			return (int)0;
HXDLIN(  32)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool2",c8,20,f8,b6)) ){
HXLINE(  33)			return (int)1;
HXDLIN(  33)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool3",c9,20,f8,b6)) ){
HXLINE(  34)			return (int)1;
HXDLIN(  34)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool4",ca,20,f8,b6)) ){
HXLINE(  35)			return (int)1;
HXDLIN(  35)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float",9c,c5,96,02)) ){
HXLINE(  36)			return (int)4;
HXDLIN(  36)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float2",16,23,56,41)) ){
HXLINE(  37)			return (int)5;
HXDLIN(  37)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float3",17,23,56,41)) ){
HXLINE(  38)			return (int)6;
HXDLIN(  38)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float4",18,23,56,41)) ){
HXLINE(  39)			return (int)7;
HXDLIN(  39)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int",ef,0c,50,00)) ){
HXLINE(  40)			return (int)8;
HXDLIN(  40)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int2",63,44,bb,45)) ){
HXLINE(  41)			return (int)9;
HXDLIN(  41)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int3",64,44,bb,45)) ){
HXLINE(  42)			return (int)10;
HXDLIN(  42)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int4",65,44,bb,45)) ){
HXLINE(  43)			return (int)11;
HXDLIN(  43)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x2",cb,c1,da,ad)) ){
HXLINE(  44)			return (int)12;
HXDLIN(  44)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x3",cc,c1,da,ad)) ){
HXLINE(  45)			return (int)13;
HXDLIN(  45)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x4",cd,c1,da,ad)) ){
HXLINE(  46)			return (int)14;
HXDLIN(  46)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x2",0c,84,db,ad)) ){
HXLINE(  47)			return (int)15;
HXDLIN(  47)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x3",0d,84,db,ad)) ){
HXLINE(  48)			return (int)16;
HXDLIN(  48)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x4",0e,84,db,ad)) ){
HXLINE(  49)			return (int)17;
HXDLIN(  49)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x2",4d,46,dc,ad)) ){
HXLINE(  50)			return (int)18;
HXDLIN(  50)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x3",4e,46,dc,ad)) ){
HXLINE(  51)			return (int)19;
HXDLIN(  51)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x4",4f,46,dc,ad)) ){
HXLINE(  52)			return (int)20;
HXDLIN(  52)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE(  53)			return null();
            		}
            		_hx_goto_0:;
HXLINE(  30)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShaderParameterType_Impl__obj,fromString,return )

::String ShaderParameterType_Impl__obj::toString(int value){
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_61_toString)
HXDLIN(  61)		switch((int)(value)){
            			case (int)0: {
HXLINE(  63)				return HX_("bool",2a,84,1b,41);
            			}
            			break;
            			case (int)1: {
HXLINE(  64)				return HX_("bool2",c8,20,f8,b6);
            			}
            			break;
            			case (int)2: {
HXLINE(  65)				return HX_("bool3",c9,20,f8,b6);
            			}
            			break;
            			case (int)3: {
HXLINE(  66)				return HX_("bool4",ca,20,f8,b6);
            			}
            			break;
            			case (int)4: {
HXLINE(  67)				return HX_("float",9c,c5,96,02);
            			}
            			break;
            			case (int)5: {
HXLINE(  68)				return HX_("float2",16,23,56,41);
            			}
            			break;
            			case (int)6: {
HXLINE(  69)				return HX_("float3",17,23,56,41);
            			}
            			break;
            			case (int)7: {
HXLINE(  70)				return HX_("float4",18,23,56,41);
            			}
            			break;
            			case (int)8: {
HXLINE(  71)				return HX_("int",ef,0c,50,00);
            			}
            			break;
            			case (int)9: {
HXLINE(  72)				return HX_("int2",63,44,bb,45);
            			}
            			break;
            			case (int)10: {
HXLINE(  73)				return HX_("int3",64,44,bb,45);
            			}
            			break;
            			case (int)11: {
HXLINE(  74)				return HX_("int4",65,44,bb,45);
            			}
            			break;
            			case (int)12: {
HXLINE(  75)				return HX_("matrix2x2",cb,c1,da,ad);
            			}
            			break;
            			case (int)13: {
HXLINE(  76)				return HX_("matrix2x3",cc,c1,da,ad);
            			}
            			break;
            			case (int)14: {
HXLINE(  77)				return HX_("matrix2x4",cd,c1,da,ad);
            			}
            			break;
            			case (int)15: {
HXLINE(  78)				return HX_("matrix3x2",0c,84,db,ad);
            			}
            			break;
            			case (int)16: {
HXLINE(  79)				return HX_("matrix3x3",0d,84,db,ad);
            			}
            			break;
            			case (int)17: {
HXLINE(  80)				return HX_("matrix3x4",0e,84,db,ad);
            			}
            			break;
            			case (int)18: {
HXLINE(  81)				return HX_("matrix4x2",4d,46,dc,ad);
            			}
            			break;
            			case (int)19: {
HXLINE(  82)				return HX_("matrix4x3",4e,46,dc,ad);
            			}
            			break;
            			case (int)20: {
HXLINE(  83)				return HX_("matrix4x4",4f,46,dc,ad);
            			}
            			break;
            			default:{
HXLINE(  84)				return null();
            			}
            		}
HXLINE(  61)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShaderParameterType_Impl__obj,toString,return )


ShaderParameterType_Impl__obj::ShaderParameterType_Impl__obj()
{
}

bool ShaderParameterType_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ShaderParameterType_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo ShaderParameterType_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::BOOL,HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::BOOL2,HX_HCSTRING("BOOL2","\xc8","\x58","\xe6","\x34")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::BOOL3,HX_HCSTRING("BOOL3","\xc9","\x58","\xe6","\x34")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::BOOL4,HX_HCSTRING("BOOL4","\xca","\x58","\xe6","\x34")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::FLOAT,HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::FLOAT2,HX_HCSTRING("FLOAT2","\x36","\xcf","\xd8","\xf3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::FLOAT3,HX_HCSTRING("FLOAT3","\x37","\xcf","\xd8","\xf3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::FLOAT4,HX_HCSTRING("FLOAT4","\x38","\xcf","\xd8","\xf3")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::INT,HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::INT2,HX_HCSTRING("INT2","\x83","\x0c","\x7c","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::INT3,HX_HCSTRING("INT3","\x84","\x0c","\x7c","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::INT4,HX_HCSTRING("INT4","\x85","\x0c","\x7c","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X2,HX_HCSTRING("MATRIX2X2","\xeb","\x79","\x4b","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X3,HX_HCSTRING("MATRIX2X3","\xec","\x79","\x4b","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X4,HX_HCSTRING("MATRIX2X4","\xed","\x79","\x4b","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X2,HX_HCSTRING("MATRIX3X2","\x2c","\x3c","\x4c","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X3,HX_HCSTRING("MATRIX3X3","\x2d","\x3c","\x4c","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X4,HX_HCSTRING("MATRIX3X4","\x2e","\x3c","\x4c","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X2,HX_HCSTRING("MATRIX4X2","\x6d","\xfe","\x4c","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X3,HX_HCSTRING("MATRIX4X3","\x6e","\xfe","\x4c","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X4,HX_HCSTRING("MATRIX4X4","\x6f","\xfe","\x4c","\xa9")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ShaderParameterType_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL2,"BOOL2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL3,"BOOL3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL4,"BOOL4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT2,"FLOAT2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT3,"FLOAT3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT4,"FLOAT4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT,"INT");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT2,"INT2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT3,"INT3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT4,"INT4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X2,"MATRIX2X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X3,"MATRIX2X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X4,"MATRIX2X4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X2,"MATRIX3X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X3,"MATRIX3X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X4,"MATRIX3X4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X2,"MATRIX4X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X3,"MATRIX4X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X4,"MATRIX4X4");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ShaderParameterType_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL2,"BOOL2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL3,"BOOL3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL4,"BOOL4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT2,"FLOAT2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT3,"FLOAT3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT4,"FLOAT4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT,"INT");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT2,"INT2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT3,"INT3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT4,"INT4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X2,"MATRIX2X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X3,"MATRIX2X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X4,"MATRIX2X4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X2,"MATRIX3X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X3,"MATRIX3X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X4,"MATRIX3X4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X2,"MATRIX4X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X3,"MATRIX4X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X4,"MATRIX4X4");
};

#endif

hx::Class ShaderParameterType_Impl__obj::__mClass;

static ::String ShaderParameterType_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b"),
	HX_HCSTRING("BOOL2","\xc8","\x58","\xe6","\x34"),
	HX_HCSTRING("BOOL3","\xc9","\x58","\xe6","\x34"),
	HX_HCSTRING("BOOL4","\xca","\x58","\xe6","\x34"),
	HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80"),
	HX_HCSTRING("FLOAT2","\x36","\xcf","\xd8","\xf3"),
	HX_HCSTRING("FLOAT3","\x37","\xcf","\xd8","\xf3"),
	HX_HCSTRING("FLOAT4","\x38","\xcf","\xd8","\xf3"),
	HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00"),
	HX_HCSTRING("INT2","\x83","\x0c","\x7c","\x30"),
	HX_HCSTRING("INT3","\x84","\x0c","\x7c","\x30"),
	HX_HCSTRING("INT4","\x85","\x0c","\x7c","\x30"),
	HX_HCSTRING("MATRIX2X2","\xeb","\x79","\x4b","\xa9"),
	HX_HCSTRING("MATRIX2X3","\xec","\x79","\x4b","\xa9"),
	HX_HCSTRING("MATRIX2X4","\xed","\x79","\x4b","\xa9"),
	HX_HCSTRING("MATRIX3X2","\x2c","\x3c","\x4c","\xa9"),
	HX_HCSTRING("MATRIX3X3","\x2d","\x3c","\x4c","\xa9"),
	HX_HCSTRING("MATRIX3X4","\x2e","\x3c","\x4c","\xa9"),
	HX_HCSTRING("MATRIX4X2","\x6d","\xfe","\x4c","\xa9"),
	HX_HCSTRING("MATRIX4X3","\x6e","\xfe","\x4c","\xa9"),
	HX_HCSTRING("MATRIX4X4","\x6f","\xfe","\x4c","\xa9"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void ShaderParameterType_Impl__obj::__register()
{
	hx::Object *dummy = new ShaderParameterType_Impl__obj;
	ShaderParameterType_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display._ShaderParameterType.ShaderParameterType_Impl_","\xb9","\xc9","\xc6","\x80");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ShaderParameterType_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ShaderParameterType_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ShaderParameterType_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ShaderParameterType_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ShaderParameterType_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ShaderParameterType_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ShaderParameterType_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ShaderParameterType_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_6_boot)
HXDLIN(   6)		BOOL = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_7_boot)
HXDLIN(   7)		BOOL2 = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_8_boot)
HXDLIN(   8)		BOOL3 = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_9_boot)
HXDLIN(   9)		BOOL4 = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_10_boot)
HXDLIN(  10)		FLOAT = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_11_boot)
HXDLIN(  11)		FLOAT2 = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_12_boot)
HXDLIN(  12)		FLOAT3 = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_13_boot)
HXDLIN(  13)		FLOAT4 = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_14_boot)
HXDLIN(  14)		INT = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_15_boot)
HXDLIN(  15)		INT2 = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_16_boot)
HXDLIN(  16)		INT3 = (int)10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_17_boot)
HXDLIN(  17)		INT4 = (int)11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_18_boot)
HXDLIN(  18)		MATRIX2X2 = (int)12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_19_boot)
HXDLIN(  19)		MATRIX2X3 = (int)13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_20_boot)
HXDLIN(  20)		MATRIX2X4 = (int)14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_21_boot)
HXDLIN(  21)		MATRIX3X2 = (int)15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_22_boot)
HXDLIN(  22)		MATRIX3X3 = (int)16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_23_boot)
HXDLIN(  23)		MATRIX3X4 = (int)17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_24_boot)
HXDLIN(  24)		MATRIX4X2 = (int)18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_25_boot)
HXDLIN(  25)		MATRIX4X3 = (int)19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_26_boot)
HXDLIN(  26)		MATRIX4X4 = (int)20;
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _ShaderParameterType
