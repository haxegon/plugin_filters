// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_openfl__Vector_AbstractVector
#include <openfl/_Vector/AbstractVector.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_44_new,"openfl._internal.renderer.DrawCommandBuffer","new",0xdc2c151e,"openfl._internal.renderer.DrawCommandBuffer.new","openfl/_internal/renderer/DrawCommandBuffer.hx",44,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_66_append,"openfl._internal.renderer.DrawCommandBuffer","append",0x1b14a7dc,"openfl._internal.renderer.DrawCommandBuffer.append","openfl/_internal/renderer/DrawCommandBuffer.hx",66,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_120_beginBitmapFill,"openfl._internal.renderer.DrawCommandBuffer","beginBitmapFill",0x90133359,"openfl._internal.renderer.DrawCommandBuffer.beginBitmapFill","openfl/_internal/renderer/DrawCommandBuffer.hx",120,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_132_beginFill,"openfl._internal.renderer.DrawCommandBuffer","beginFill",0x6ae7148a,"openfl._internal.renderer.DrawCommandBuffer.beginFill","openfl/_internal/renderer/DrawCommandBuffer.hx",132,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_143_beginGradientFill,"openfl._internal.renderer.DrawCommandBuffer","beginGradientFill",0x7d0b119a,"openfl._internal.renderer.DrawCommandBuffer.beginGradientFill","openfl/_internal/renderer/DrawCommandBuffer.hx",143,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_160_clear,"openfl._internal.renderer.DrawCommandBuffer","clear",0xfe5ce1cb,"openfl._internal.renderer.DrawCommandBuffer.clear","openfl/_internal/renderer/DrawCommandBuffer.hx",160,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_176_copy,"openfl._internal.renderer.DrawCommandBuffer","copy",0xc3289d37,"openfl._internal.renderer.DrawCommandBuffer.copy","openfl/_internal/renderer/DrawCommandBuffer.hx",176,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_185_cubicCurveTo,"openfl._internal.renderer.DrawCommandBuffer","cubicCurveTo",0x96d43b62,"openfl._internal.renderer.DrawCommandBuffer.cubicCurveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",185,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_199_curveTo,"openfl._internal.renderer.DrawCommandBuffer","curveTo",0x1bf4dbc8,"openfl._internal.renderer.DrawCommandBuffer.curveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",199,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_212_destroy,"openfl._internal.renderer.DrawCommandBuffer","destroy",0x71f2a8b8,"openfl._internal.renderer.DrawCommandBuffer.destroy","openfl/_internal/renderer/DrawCommandBuffer.hx",212,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_228_drawCircle,"openfl._internal.renderer.DrawCommandBuffer","drawCircle",0x40b9dc36,"openfl._internal.renderer.DrawCommandBuffer.drawCircle","openfl/_internal/renderer/DrawCommandBuffer.hx",228,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_240_drawEllipse,"openfl._internal.renderer.DrawCommandBuffer","drawEllipse",0x77b6b7f8,"openfl._internal.renderer.DrawCommandBuffer.drawEllipse","openfl/_internal/renderer/DrawCommandBuffer.hx",240,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_253_drawRect,"openfl._internal.renderer.DrawCommandBuffer","drawRect",0xd190c1ca,"openfl._internal.renderer.DrawCommandBuffer.drawRect","openfl/_internal/renderer/DrawCommandBuffer.hx",253,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_265_drawRoundRect,"openfl._internal.renderer.DrawCommandBuffer","drawRoundRect",0xb613a22c,"openfl._internal.renderer.DrawCommandBuffer.drawRoundRect","openfl/_internal/renderer/DrawCommandBuffer.hx",265,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_280_drawTriangles,"openfl._internal.renderer.DrawCommandBuffer","drawTriangles",0xb1d12245,"openfl._internal.renderer.DrawCommandBuffer.drawTriangles","openfl/_internal/renderer/DrawCommandBuffer.hx",280,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_293_endFill,"openfl._internal.renderer.DrawCommandBuffer","endFill",0x734d03bc,"openfl._internal.renderer.DrawCommandBuffer.endFill","openfl/_internal/renderer/DrawCommandBuffer.hx",293,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_302_lineBitmapStyle,"openfl._internal.renderer.DrawCommandBuffer","lineBitmapStyle",0x6b2ca8ec,"openfl._internal.renderer.DrawCommandBuffer.lineBitmapStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",302,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_315_lineGradientStyle,"openfl._internal.renderer.DrawCommandBuffer","lineGradientStyle",0x10f9f9cb,"openfl._internal.renderer.DrawCommandBuffer.lineGradientStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",315,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_332_lineStyle,"openfl._internal.renderer.DrawCommandBuffer","lineStyle",0xa96a0fdb,"openfl._internal.renderer.DrawCommandBuffer.lineStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",332,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_349_lineTo,"openfl._internal.renderer.DrawCommandBuffer","lineTo",0x77e10c91,"openfl._internal.renderer.DrawCommandBuffer.lineTo","openfl/_internal/renderer/DrawCommandBuffer.hx",349,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_360_moveTo,"openfl._internal.renderer.DrawCommandBuffer","moveTo",0x57ed98ee,"openfl._internal.renderer.DrawCommandBuffer.moveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",360,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_373_prepareWrite,"openfl._internal.renderer.DrawCommandBuffer","prepareWrite",0xac4d955a,"openfl._internal.renderer.DrawCommandBuffer.prepareWrite","openfl/_internal/renderer/DrawCommandBuffer.hx",373,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_390_overrideMatrix,"openfl._internal.renderer.DrawCommandBuffer","overrideMatrix",0xe20325af,"openfl._internal.renderer.DrawCommandBuffer.overrideMatrix","openfl/_internal/renderer/DrawCommandBuffer.hx",390,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_400_windingEvenOdd,"openfl._internal.renderer.DrawCommandBuffer","windingEvenOdd",0x3363f4bd,"openfl._internal.renderer.DrawCommandBuffer.windingEvenOdd","openfl/_internal/renderer/DrawCommandBuffer.hx",400,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_409_windingNonZero,"openfl._internal.renderer.DrawCommandBuffer","windingNonZero",0xfe994cdd,"openfl._internal.renderer.DrawCommandBuffer.windingNonZero","openfl/_internal/renderer/DrawCommandBuffer.hx",409,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_427_get_length,"openfl._internal.renderer.DrawCommandBuffer","get_length",0x3877f3b1,"openfl._internal.renderer.DrawCommandBuffer.get_length","openfl/_internal/renderer/DrawCommandBuffer.hx",427,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_28_boot,"openfl._internal.renderer.DrawCommandBuffer","boot",0xc27f65b4,"openfl._internal.renderer.DrawCommandBuffer.boot","openfl/_internal/renderer/DrawCommandBuffer.hx",28,0xbc8e6e11)
namespace openfl{
namespace _internal{
namespace renderer{

void DrawCommandBuffer_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_44_new)
HXDLIN(  44)		if (hx::IsNull( ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty )) {
HXLINE(  46)			this->types = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  48)			this->b = ::Array_obj< bool >::__new(0);
HXLINE(  49)			this->i = ::Array_obj< int >::__new(0);
HXLINE(  50)			this->f = ::Array_obj< Float >::__new(0);
HXLINE(  51)			this->o = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  52)			this->ff = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  53)			this->ii = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  55)			this->copyOnWrite = true;
            		}
            		else {
HXLINE(  59)			this->clear();
            		}
            	}

Dynamic DrawCommandBuffer_obj::__CreateEmpty() { return new DrawCommandBuffer_obj; }

void *DrawCommandBuffer_obj::_hx_vtable = 0;

Dynamic DrawCommandBuffer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DrawCommandBuffer_obj > _hx_result = new DrawCommandBuffer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DrawCommandBuffer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5daef738;
}

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::append( ::openfl::_internal::renderer::DrawCommandBuffer other){
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_66_append)
HXLINE(  68)		if ((this->get_length() == (int)0)) {
HXLINE(  70)			this->types = other->types;
HXLINE(  71)			this->b = other->b;
HXLINE(  72)			this->i = other->i;
HXLINE(  73)			this->f = other->f;
HXLINE(  74)			this->o = other->o;
HXLINE(  75)			this->ff = other->ff;
HXLINE(  76)			this->ii = other->ii;
HXLINE(  77)			this->copyOnWrite = (other->copyOnWrite = true);
HXLINE(  79)			return other;
            		}
HXLINE(  83)		 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,other);
HXLINE(  85)		{
HXLINE(  85)			int _g = (int)0;
HXDLIN(  85)			::Array< ::Dynamic> _g1 = other->types;
HXDLIN(  85)			while((_g < _g1->length)){
HXLINE(  85)				 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(  85)				_g = (_g + (int)1);
HXLINE(  87)				switch((int)(_hx_getEnumValueIndex(type))){
            					case (int)0: {
HXLINE(  89)						{
HXLINE(  89)							 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(  89)							switch((int)(_hx_getEnumValueIndex(_g2))){
            								case (int)0: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(  89)									data1->oPos = (data1->oPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(  89)									data2->bPos = (data2->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(  89)									data3->iPos = (data3->iPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(  89)									data4->fPos = (data4->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(  89)									data5->oPos = (data5->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(  89)									data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(  89)									data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(  89)									data8->fPos = (data8->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(  89)									data9->fPos = (data9->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(  89)									data10->fPos = (data10->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(  89)									data11->fPos = (data11->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(  89)									data12->fPos = (data12->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(  89)									data13->fPos = (data13->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(  89)									data14->fPos = (data14->fPos + (int)5);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(  89)									data15->oPos = (data15->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(  89)									data16->oPos = (data16->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(  89)									data17->oPos = (data17->oPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(  89)									data18->bPos = (data18->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(  89)									data19->oPos = (data19->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(  89)									data20->iiPos = (data20->iiPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(  89)									data21->ffPos = (data21->ffPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(  89)									data22->fPos = (data22->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(  89)									data23->oPos = (data23->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(  89)									data24->iPos = (data24->iPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(  89)									data25->fPos = (data25->fPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(  89)									data26->bPos = (data26->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(  89)									data27->fPos = (data27->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(  89)									data28->fPos = (data28->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(  89)									data29->oPos = (data29->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  89)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(  89)						 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(  89)						 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXDLIN(  89)						 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(  89)						::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN(  89)						 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN(  89)						bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN(  89)						::Array< bool > c5 = c->buffer->b;
HXDLIN(  89)						this->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
            					}
            					break;
            					case (int)1: {
HXLINE(  90)						{
HXLINE(  90)							 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(  90)							switch((int)(_hx_getEnumValueIndex(_g3))){
            								case (int)0: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(  90)									data30->oPos = (data30->oPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(  90)									data31->bPos = (data31->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(  90)									data32->iPos = (data32->iPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(  90)									data33->fPos = (data33->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(  90)									data34->oPos = (data34->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(  90)									data35->iiPos = (data35->iiPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(  90)									data36->ffPos = (data36->ffPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(  90)									data37->fPos = (data37->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(  90)									data38->fPos = (data38->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(  90)									data39->fPos = (data39->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(  90)									data40->fPos = (data40->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(  90)									data41->fPos = (data41->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(  90)									data42->fPos = (data42->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(  90)									data43->fPos = (data43->fPos + (int)5);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(  90)									data44->oPos = (data44->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(  90)									data45->oPos = (data45->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(  90)									data46->oPos = (data46->oPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(  90)									data47->bPos = (data47->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(  90)									data48->oPos = (data48->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(  90)									data49->iiPos = (data49->iiPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(  90)									data50->ffPos = (data50->ffPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(  90)									data51->fPos = (data51->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(  90)									data52->oPos = (data52->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(  90)									data53->iPos = (data53->iPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(  90)									data54->fPos = (data54->fPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(  90)									data55->bPos = (data55->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(  90)									data56->fPos = (data56->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(  90)									data57->fPos = (data57->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(  90)									data58->oPos = (data58->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  90)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(  90)						 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(  90)						 ::openfl::_internal::renderer::DrawCommandReader c6 = this2;
HXDLIN(  90)						int c7 = c6->buffer->i->__get(c6->iPos);
HXDLIN(  90)						this->beginFill(c7,c6->buffer->f->__get(c6->fPos));
            					}
            					break;
            					case (int)2: {
HXLINE(  91)						{
HXLINE(  91)							 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(  91)							switch((int)(_hx_getEnumValueIndex(_g4))){
            								case (int)0: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(  91)									data59->oPos = (data59->oPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(  91)									data60->bPos = (data60->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(  91)									data61->iPos = (data61->iPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(  91)									data62->fPos = (data62->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(  91)									data63->oPos = (data63->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(  91)									data64->iiPos = (data64->iiPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(  91)									data65->ffPos = (data65->ffPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(  91)									data66->fPos = (data66->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(  91)									data67->fPos = (data67->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(  91)									data68->fPos = (data68->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(  91)									data69->fPos = (data69->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(  91)									data70->fPos = (data70->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(  91)									data71->fPos = (data71->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(  91)									data72->fPos = (data72->fPos + (int)5);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(  91)									data73->oPos = (data73->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(  91)									data74->oPos = (data74->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(  91)									data75->oPos = (data75->oPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(  91)									data76->bPos = (data76->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(  91)									data77->oPos = (data77->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(  91)									data78->iiPos = (data78->iiPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(  91)									data79->ffPos = (data79->ffPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(  91)									data80->fPos = (data80->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(  91)									data81->oPos = (data81->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(  91)									data82->iPos = (data82->iPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(  91)									data83->fPos = (data83->fPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(  91)									data84->bPos = (data84->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(  91)									data85->fPos = (data85->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(  91)									data86->fPos = (data86->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(  91)									data87->oPos = (data87->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  91)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(  91)						 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(  91)						 ::openfl::_internal::renderer::DrawCommandReader c8 = this3;
HXDLIN(  91)						::Array< ::Dynamic> c9 = c8->buffer->ii;
HXDLIN(  91)						::cpp::VirtualArray c10 = c8->buffer->o;
HXDLIN(  91)						::cpp::VirtualArray c11 = c8->buffer->o;
HXDLIN(  91)						::cpp::VirtualArray c12 = c8->buffer->o;
HXDLIN(  91)						this->beginGradientFill(c8->buffer->o->__get(c8->oPos),c8->buffer->ii->__get(c8->iiPos).StaticCast< ::Array< int > >(),c8->buffer->ff->__get(c8->ffPos).StaticCast< ::Array< Float > >(),c9->__get((c8->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c10->__get((c8->oPos + (int)1))) ),c11->__get((c8->oPos + (int)2)),c12->__get((c8->oPos + (int)3)),c8->buffer->f->__get(c8->fPos));
            					}
            					break;
            					case (int)3: {
HXLINE(  92)						{
HXLINE(  92)							 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(  92)							switch((int)(_hx_getEnumValueIndex(_g5))){
            								case (int)0: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(  92)									data88->oPos = (data88->oPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(  92)									data89->bPos = (data89->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(  92)									data90->iPos = (data90->iPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(  92)									data91->fPos = (data91->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(  92)									data92->oPos = (data92->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(  92)									data93->iiPos = (data93->iiPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(  92)									data94->ffPos = (data94->ffPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(  92)									data95->fPos = (data95->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(  92)									data96->fPos = (data96->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(  92)									data97->fPos = (data97->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(  92)									data98->fPos = (data98->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(  92)									data99->fPos = (data99->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(  92)									data100->fPos = (data100->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(  92)									data101->fPos = (data101->fPos + (int)5);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(  92)									data102->oPos = (data102->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(  92)									data103->oPos = (data103->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(  92)									data104->oPos = (data104->oPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(  92)									data105->bPos = (data105->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(  92)									data106->oPos = (data106->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(  92)									data107->iiPos = (data107->iiPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(  92)									data108->ffPos = (data108->ffPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(  92)									data109->fPos = (data109->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(  92)									data110->oPos = (data110->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(  92)									data111->iPos = (data111->iPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(  92)									data112->fPos = (data112->fPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(  92)									data113->bPos = (data113->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(  92)									data114->fPos = (data114->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(  92)									data115->fPos = (data115->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(  92)									data116->oPos = (data116->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  92)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(  92)						 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(  92)						 ::openfl::_internal::renderer::DrawCommandReader c13 = this4;
HXDLIN(  92)						Float c14 = c13->buffer->f->__get(c13->fPos);
HXDLIN(  92)						::Array< Float > c15 = c13->buffer->f;
HXDLIN(  92)						Float c16 = c15->__get((c13->fPos + (int)1));
HXDLIN(  92)						::Array< Float > c17 = c13->buffer->f;
HXDLIN(  92)						Float c18 = c17->__get((c13->fPos + (int)2));
HXDLIN(  92)						::Array< Float > c19 = c13->buffer->f;
HXDLIN(  92)						Float c20 = c19->__get((c13->fPos + (int)3));
HXDLIN(  92)						::Array< Float > c21 = c13->buffer->f;
HXDLIN(  92)						Float c22 = c21->__get((c13->fPos + (int)4));
HXDLIN(  92)						::Array< Float > c23 = c13->buffer->f;
HXDLIN(  92)						this->cubicCurveTo(c14,c16,c18,c20,c22,c23->__get((c13->fPos + (int)5)));
            					}
            					break;
            					case (int)4: {
HXLINE(  93)						{
HXLINE(  93)							 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(  93)							switch((int)(_hx_getEnumValueIndex(_g6))){
            								case (int)0: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(  93)									data117->oPos = (data117->oPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(  93)									data118->bPos = (data118->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(  93)									data119->iPos = (data119->iPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(  93)									data120->fPos = (data120->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(  93)									data121->oPos = (data121->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(  93)									data122->iiPos = (data122->iiPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(  93)									data123->ffPos = (data123->ffPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(  93)									data124->fPos = (data124->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(  93)									data125->fPos = (data125->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(  93)									data126->fPos = (data126->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(  93)									data127->fPos = (data127->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(  93)									data128->fPos = (data128->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(  93)									data129->fPos = (data129->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(  93)									data130->fPos = (data130->fPos + (int)5);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(  93)									data131->oPos = (data131->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(  93)									data132->oPos = (data132->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(  93)									data133->oPos = (data133->oPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(  93)									data134->bPos = (data134->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(  93)									data135->oPos = (data135->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(  93)									data136->iiPos = (data136->iiPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(  93)									data137->ffPos = (data137->ffPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(  93)									data138->fPos = (data138->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(  93)									data139->oPos = (data139->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(  93)									data140->iPos = (data140->iPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(  93)									data141->fPos = (data141->fPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(  93)									data142->bPos = (data142->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(  93)									data143->fPos = (data143->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(  93)									data144->fPos = (data144->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(  93)									data145->oPos = (data145->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  93)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(  93)						 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(  93)						 ::openfl::_internal::renderer::DrawCommandReader c24 = this5;
HXDLIN(  93)						Float c25 = c24->buffer->f->__get(c24->fPos);
HXDLIN(  93)						::Array< Float > c26 = c24->buffer->f;
HXDLIN(  93)						Float c27 = c26->__get((c24->fPos + (int)1));
HXDLIN(  93)						::Array< Float > c28 = c24->buffer->f;
HXDLIN(  93)						Float c29 = c28->__get((c24->fPos + (int)2));
HXDLIN(  93)						::Array< Float > c30 = c24->buffer->f;
HXDLIN(  93)						this->curveTo(c25,c27,c29,c30->__get((c24->fPos + (int)3)));
            					}
            					break;
            					case (int)5: {
HXLINE(  94)						{
HXLINE(  94)							 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(  94)							switch((int)(_hx_getEnumValueIndex(_g7))){
            								case (int)0: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(  94)									data146->oPos = (data146->oPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(  94)									data147->bPos = (data147->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(  94)									data148->iPos = (data148->iPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(  94)									data149->fPos = (data149->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(  94)									data150->oPos = (data150->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(  94)									data151->iiPos = (data151->iiPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(  94)									data152->ffPos = (data152->ffPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(  94)									data153->fPos = (data153->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(  94)									data154->fPos = (data154->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(  94)									data155->fPos = (data155->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(  94)									data156->fPos = (data156->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(  94)									data157->fPos = (data157->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(  94)									data158->fPos = (data158->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(  94)									data159->fPos = (data159->fPos + (int)5);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(  94)									data160->oPos = (data160->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(  94)									data161->oPos = (data161->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(  94)									data162->oPos = (data162->oPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(  94)									data163->bPos = (data163->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(  94)									data164->oPos = (data164->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(  94)									data165->iiPos = (data165->iiPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(  94)									data166->ffPos = (data166->ffPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(  94)									data167->fPos = (data167->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(  94)									data168->oPos = (data168->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(  94)									data169->iPos = (data169->iPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(  94)									data170->fPos = (data170->fPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(  94)									data171->bPos = (data171->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(  94)									data172->fPos = (data172->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(  94)									data173->fPos = (data173->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(  94)									data174->oPos = (data174->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  94)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(  94)						 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(  94)						 ::openfl::_internal::renderer::DrawCommandReader c31 = this6;
HXDLIN(  94)						Float c32 = c31->buffer->f->__get(c31->fPos);
HXDLIN(  94)						::Array< Float > c33 = c31->buffer->f;
HXDLIN(  94)						Float c34 = c33->__get((c31->fPos + (int)1));
HXDLIN(  94)						::Array< Float > c35 = c31->buffer->f;
HXDLIN(  94)						this->drawCircle(c32,c34,c35->__get((c31->fPos + (int)2)));
            					}
            					break;
            					case (int)6: {
HXLINE(  95)						{
HXLINE(  95)							 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(  95)							switch((int)(_hx_getEnumValueIndex(_g8))){
            								case (int)0: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(  95)									data175->oPos = (data175->oPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(  95)									data176->bPos = (data176->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(  95)									data177->iPos = (data177->iPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(  95)									data178->fPos = (data178->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(  95)									data179->oPos = (data179->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(  95)									data180->iiPos = (data180->iiPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(  95)									data181->ffPos = (data181->ffPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(  95)									data182->fPos = (data182->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(  95)									data183->fPos = (data183->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(  95)									data184->fPos = (data184->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(  95)									data185->fPos = (data185->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(  95)									data186->fPos = (data186->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(  95)									data187->fPos = (data187->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(  95)									data188->fPos = (data188->fPos + (int)5);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(  95)									data189->oPos = (data189->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(  95)									data190->oPos = (data190->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(  95)									data191->oPos = (data191->oPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(  95)									data192->bPos = (data192->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(  95)									data193->oPos = (data193->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(  95)									data194->iiPos = (data194->iiPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(  95)									data195->ffPos = (data195->ffPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(  95)									data196->fPos = (data196->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(  95)									data197->oPos = (data197->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(  95)									data198->iPos = (data198->iPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(  95)									data199->fPos = (data199->fPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(  95)									data200->bPos = (data200->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(  95)									data201->fPos = (data201->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(  95)									data202->fPos = (data202->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(  95)									data203->oPos = (data203->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  95)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(  95)						 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(  95)						 ::openfl::_internal::renderer::DrawCommandReader c36 = this7;
HXDLIN(  95)						Float c37 = c36->buffer->f->__get(c36->fPos);
HXDLIN(  95)						::Array< Float > c38 = c36->buffer->f;
HXDLIN(  95)						Float c39 = c38->__get((c36->fPos + (int)1));
HXDLIN(  95)						::Array< Float > c40 = c36->buffer->f;
HXDLIN(  95)						Float c41 = c40->__get((c36->fPos + (int)2));
HXDLIN(  95)						::Array< Float > c42 = c36->buffer->f;
HXDLIN(  95)						this->drawEllipse(c37,c39,c41,c42->__get((c36->fPos + (int)3)));
            					}
            					break;
            					case (int)7: {
HXLINE(  96)						{
HXLINE(  96)							 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(  96)							switch((int)(_hx_getEnumValueIndex(_g9))){
            								case (int)0: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(  96)									data204->oPos = (data204->oPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(  96)									data205->bPos = (data205->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(  96)									data206->iPos = (data206->iPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(  96)									data207->fPos = (data207->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(  96)									data208->oPos = (data208->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(  96)									data209->iiPos = (data209->iiPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(  96)									data210->ffPos = (data210->ffPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(  96)									data211->fPos = (data211->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(  96)									data212->fPos = (data212->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(  96)									data213->fPos = (data213->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(  96)									data214->fPos = (data214->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(  96)									data215->fPos = (data215->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(  96)									data216->fPos = (data216->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(  96)									data217->fPos = (data217->fPos + (int)5);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(  96)									data218->oPos = (data218->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(  96)									data219->oPos = (data219->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(  96)									data220->oPos = (data220->oPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(  96)									data221->bPos = (data221->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(  96)									data222->oPos = (data222->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(  96)									data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(  96)									data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(  96)									data225->fPos = (data225->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(  96)									data226->oPos = (data226->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(  96)									data227->iPos = (data227->iPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(  96)									data228->fPos = (data228->fPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(  96)									data229->bPos = (data229->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(  96)									data230->fPos = (data230->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(  96)									data231->fPos = (data231->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(  96)									data232->oPos = (data232->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  96)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(  96)						 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(  96)						 ::openfl::_internal::renderer::DrawCommandReader c43 = this8;
HXDLIN(  96)						Float c44 = c43->buffer->f->__get(c43->fPos);
HXDLIN(  96)						::Array< Float > c45 = c43->buffer->f;
HXDLIN(  96)						Float c46 = c45->__get((c43->fPos + (int)1));
HXDLIN(  96)						::Array< Float > c47 = c43->buffer->f;
HXDLIN(  96)						Float c48 = c47->__get((c43->fPos + (int)2));
HXDLIN(  96)						::Array< Float > c49 = c43->buffer->f;
HXDLIN(  96)						this->drawRect(c44,c46,c48,c49->__get((c43->fPos + (int)3)));
            					}
            					break;
            					case (int)8: {
HXLINE(  97)						{
HXLINE(  97)							 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(  97)							switch((int)(_hx_getEnumValueIndex(_g10))){
            								case (int)0: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(  97)									data233->oPos = (data233->oPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(  97)									data234->bPos = (data234->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(  97)									data235->iPos = (data235->iPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(  97)									data236->fPos = (data236->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(  97)									data237->oPos = (data237->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(  97)									data238->iiPos = (data238->iiPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(  97)									data239->ffPos = (data239->ffPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(  97)									data240->fPos = (data240->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(  97)									data241->fPos = (data241->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(  97)									data242->fPos = (data242->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(  97)									data243->fPos = (data243->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(  97)									data244->fPos = (data244->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(  97)									data245->fPos = (data245->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(  97)									data246->fPos = (data246->fPos + (int)5);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(  97)									data247->oPos = (data247->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(  97)									data248->oPos = (data248->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(  97)									data249->oPos = (data249->oPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(  97)									data250->bPos = (data250->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(  97)									data251->oPos = (data251->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(  97)									data252->iiPos = (data252->iiPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(  97)									data253->ffPos = (data253->ffPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(  97)									data254->fPos = (data254->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(  97)									data255->oPos = (data255->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(  97)									data256->iPos = (data256->iPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(  97)									data257->fPos = (data257->fPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(  97)									data258->bPos = (data258->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(  97)									data259->fPos = (data259->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(  97)									data260->fPos = (data260->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(  97)									data261->oPos = (data261->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  97)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(  97)						 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN(  97)						 ::openfl::_internal::renderer::DrawCommandReader c50 = this9;
HXDLIN(  97)						Float c51 = c50->buffer->f->__get(c50->fPos);
HXDLIN(  97)						::Array< Float > c52 = c50->buffer->f;
HXDLIN(  97)						Float c53 = c52->__get((c50->fPos + (int)1));
HXDLIN(  97)						::Array< Float > c54 = c50->buffer->f;
HXDLIN(  97)						Float c55 = c54->__get((c50->fPos + (int)2));
HXDLIN(  97)						::Array< Float > c56 = c50->buffer->f;
HXDLIN(  97)						Float c57 = c56->__get((c50->fPos + (int)3));
HXDLIN(  97)						::Array< Float > c58 = c50->buffer->f;
HXDLIN(  97)						this->drawRoundRect(c51,c53,c55,c57,c58->__get((c50->fPos + (int)4)),c50->buffer->o->__get(c50->oPos));
            					}
            					break;
            					case (int)10: {
HXLINE(  98)						{
HXLINE(  98)							 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN(  98)							switch((int)(_hx_getEnumValueIndex(_g11))){
            								case (int)0: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(  98)									data262->oPos = (data262->oPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(  98)									data263->bPos = (data263->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(  98)									data264->iPos = (data264->iPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(  98)									data265->fPos = (data265->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(  98)									data266->oPos = (data266->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(  98)									data267->iiPos = (data267->iiPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(  98)									data268->ffPos = (data268->ffPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(  98)									data269->fPos = (data269->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(  98)									data270->fPos = (data270->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(  98)									data271->fPos = (data271->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(  98)									data272->fPos = (data272->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(  98)									data273->fPos = (data273->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(  98)									data274->fPos = (data274->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(  98)									data275->fPos = (data275->fPos + (int)5);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(  98)									data276->oPos = (data276->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(  98)									data277->oPos = (data277->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(  98)									data278->oPos = (data278->oPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(  98)									data279->bPos = (data279->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(  98)									data280->oPos = (data280->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(  98)									data281->iiPos = (data281->iiPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(  98)									data282->ffPos = (data282->ffPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(  98)									data283->fPos = (data283->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(  98)									data284->oPos = (data284->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(  98)									data285->iPos = (data285->iPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(  98)									data286->fPos = (data286->fPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(  98)									data287->bPos = (data287->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(  98)									data288->fPos = (data288->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN(  98)									data289->fPos = (data289->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN(  98)									data290->oPos = (data290->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  98)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN(  98)						 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN(  98)						 ::openfl::_internal::renderer::DrawCommandReader c59 = this10;
HXDLIN(  98)						::cpp::VirtualArray c60 = c59->buffer->o;
HXDLIN(  98)						::cpp::VirtualArray c61 = c59->buffer->o;
HXDLIN(  98)						::cpp::VirtualArray c62 = c59->buffer->o;
HXDLIN(  98)						this->drawTriangles(( ( ::openfl::_Vector::AbstractVector)(c59->buffer->o->__get(c59->oPos)) ),( ( ::openfl::_Vector::AbstractVector)(c60->__get((c59->oPos + (int)1))) ),( ( ::openfl::_Vector::AbstractVector)(c61->__get((c59->oPos + (int)2))) ),c62->__get((c59->oPos + (int)3)));
            					}
            					break;
            					case (int)11: {
HXLINE(  99)						{
HXLINE(  99)							 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN(  99)							switch((int)(_hx_getEnumValueIndex(_g12))){
            								case (int)0: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN(  99)									data291->oPos = (data291->oPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN(  99)									data292->bPos = (data292->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN(  99)									data293->iPos = (data293->iPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN(  99)									data294->fPos = (data294->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN(  99)									data295->oPos = (data295->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN(  99)									data296->iiPos = (data296->iiPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN(  99)									data297->ffPos = (data297->ffPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN(  99)									data298->fPos = (data298->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN(  99)									data299->fPos = (data299->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN(  99)									data300->fPos = (data300->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN(  99)									data301->fPos = (data301->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN(  99)									data302->fPos = (data302->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN(  99)									data303->fPos = (data303->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN(  99)									data304->fPos = (data304->fPos + (int)5);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN(  99)									data305->oPos = (data305->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN(  99)									data306->oPos = (data306->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN(  99)									data307->oPos = (data307->oPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN(  99)									data308->bPos = (data308->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN(  99)									data309->oPos = (data309->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN(  99)									data310->iiPos = (data310->iiPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN(  99)									data311->ffPos = (data311->ffPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN(  99)									data312->fPos = (data312->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN(  99)									data313->oPos = (data313->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN(  99)									data314->iPos = (data314->iPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN(  99)									data315->fPos = (data315->fPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN(  99)									data316->bPos = (data316->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN(  99)									data317->fPos = (data317->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN(  99)									data318->fPos = (data318->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN(  99)									data319->oPos = (data319->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  99)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN(  99)						 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN(  99)						 ::openfl::_internal::renderer::DrawCommandReader c63 = this11;
HXDLIN(  99)						this->endFill();
            					}
            					break;
            					case (int)12: {
HXLINE( 100)						{
HXLINE( 100)							 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 100)							switch((int)(_hx_getEnumValueIndex(_g13))){
            								case (int)0: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 100)									data320->oPos = (data320->oPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 100)									data321->bPos = (data321->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 100)									data322->iPos = (data322->iPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 100)									data323->fPos = (data323->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 100)									data324->oPos = (data324->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 100)									data325->iiPos = (data325->iiPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 100)									data326->ffPos = (data326->ffPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 100)									data327->fPos = (data327->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 100)									data328->fPos = (data328->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 100)									data329->fPos = (data329->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 100)									data330->fPos = (data330->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 100)									data331->fPos = (data331->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 100)									data332->fPos = (data332->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 100)									data333->fPos = (data333->fPos + (int)5);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 100)									data334->oPos = (data334->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 100)									data335->oPos = (data335->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 100)									data336->oPos = (data336->oPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 100)									data337->bPos = (data337->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 100)									data338->oPos = (data338->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 100)									data339->iiPos = (data339->iiPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 100)									data340->ffPos = (data340->ffPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 100)									data341->fPos = (data341->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 100)									data342->oPos = (data342->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 100)									data343->iPos = (data343->iPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 100)									data344->fPos = (data344->fPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 100)									data345->bPos = (data345->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 100)									data346->fPos = (data346->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 100)									data347->fPos = (data347->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 100)									data348->oPos = (data348->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 100)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 100)						 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 100)						 ::openfl::_internal::renderer::DrawCommandReader c64 = this12;
HXDLIN( 100)						::cpp::VirtualArray c65 = c64->buffer->o;
HXDLIN( 100)						::Array< bool > c66 = c64->buffer->b;
HXDLIN( 100)						this->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c64->buffer->o->__get(c64->oPos)) ),( ( ::openfl::geom::Matrix)(c65->__get((c64->oPos + (int)1))) ),c64->buffer->b->__get(c64->bPos),c66->__get((c64->bPos + (int)1)));
            					}
            					break;
            					case (int)13: {
HXLINE( 101)						{
HXLINE( 101)							 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 101)							switch((int)(_hx_getEnumValueIndex(_g14))){
            								case (int)0: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 101)									data349->oPos = (data349->oPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 101)									data350->bPos = (data350->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 101)									data351->iPos = (data351->iPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 101)									data352->fPos = (data352->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 101)									data353->oPos = (data353->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 101)									data354->iiPos = (data354->iiPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 101)									data355->ffPos = (data355->ffPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 101)									data356->fPos = (data356->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 101)									data357->fPos = (data357->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 101)									data358->fPos = (data358->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 101)									data359->fPos = (data359->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 101)									data360->fPos = (data360->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 101)									data361->fPos = (data361->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 101)									data362->fPos = (data362->fPos + (int)5);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 101)									data363->oPos = (data363->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 101)									data364->oPos = (data364->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 101)									data365->oPos = (data365->oPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 101)									data366->bPos = (data366->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 101)									data367->oPos = (data367->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 101)									data368->iiPos = (data368->iiPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 101)									data369->ffPos = (data369->ffPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 101)									data370->fPos = (data370->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 101)									data371->oPos = (data371->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 101)									data372->iPos = (data372->iPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 101)									data373->fPos = (data373->fPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 101)									data374->bPos = (data374->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 101)									data375->fPos = (data375->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 101)									data376->fPos = (data376->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 101)									data377->oPos = (data377->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 101)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 101)						 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 101)						 ::openfl::_internal::renderer::DrawCommandReader c67 = this13;
HXDLIN( 101)						::Array< ::Dynamic> c68 = c67->buffer->ii;
HXDLIN( 101)						::cpp::VirtualArray c69 = c67->buffer->o;
HXDLIN( 101)						::cpp::VirtualArray c70 = c67->buffer->o;
HXDLIN( 101)						::cpp::VirtualArray c71 = c67->buffer->o;
HXDLIN( 101)						this->lineGradientStyle(c67->buffer->o->__get(c67->oPos),c67->buffer->ii->__get(c67->iiPos).StaticCast< ::Array< int > >(),c67->buffer->ff->__get(c67->ffPos).StaticCast< ::Array< Float > >(),c68->__get((c67->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c69->__get((c67->oPos + (int)1))) ),c70->__get((c67->oPos + (int)2)),c71->__get((c67->oPos + (int)3)),c67->buffer->f->__get(c67->fPos));
            					}
            					break;
            					case (int)14: {
HXLINE( 102)						{
HXLINE( 102)							 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 102)							switch((int)(_hx_getEnumValueIndex(_g15))){
            								case (int)0: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 102)									data378->oPos = (data378->oPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 102)									data379->bPos = (data379->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 102)									data380->iPos = (data380->iPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 102)									data381->fPos = (data381->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 102)									data382->oPos = (data382->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 102)									data383->iiPos = (data383->iiPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 102)									data384->ffPos = (data384->ffPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 102)									data385->fPos = (data385->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 102)									data386->fPos = (data386->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 102)									data387->fPos = (data387->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 102)									data388->fPos = (data388->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 102)									data389->fPos = (data389->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 102)									data390->fPos = (data390->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 102)									data391->fPos = (data391->fPos + (int)5);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 102)									data392->oPos = (data392->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 102)									data393->oPos = (data393->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 102)									data394->oPos = (data394->oPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 102)									data395->bPos = (data395->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 102)									data396->oPos = (data396->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 102)									data397->iiPos = (data397->iiPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 102)									data398->ffPos = (data398->ffPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 102)									data399->fPos = (data399->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 102)									data400->oPos = (data400->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 102)									data401->iPos = (data401->iPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 102)									data402->fPos = (data402->fPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 102)									data403->bPos = (data403->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 102)									data404->fPos = (data404->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 102)									data405->fPos = (data405->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 102)									data406->oPos = (data406->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 102)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 102)						 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 102)						 ::openfl::_internal::renderer::DrawCommandReader c72 = this14;
HXDLIN( 102)						::cpp::VirtualArray c73 = c72->buffer->o;
HXDLIN( 102)						::cpp::VirtualArray c74 = c72->buffer->o;
HXDLIN( 102)						::cpp::VirtualArray c75 = c72->buffer->o;
HXDLIN( 102)						::Array< Float > c76 = c72->buffer->f;
HXDLIN( 102)						this->lineStyle(c72->buffer->o->__get(c72->oPos),c72->buffer->i->__get(c72->iPos),c72->buffer->f->__get(c72->fPos),c72->buffer->b->__get(c72->bPos),c73->__get((c72->oPos + (int)1)),c74->__get((c72->oPos + (int)2)),c75->__get((c72->oPos + (int)3)),c76->__get((c72->fPos + (int)1)));
            					}
            					break;
            					case (int)15: {
HXLINE( 103)						{
HXLINE( 103)							 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 103)							switch((int)(_hx_getEnumValueIndex(_g16))){
            								case (int)0: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 103)									data407->oPos = (data407->oPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 103)									data408->bPos = (data408->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 103)									data409->iPos = (data409->iPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 103)									data410->fPos = (data410->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 103)									data411->oPos = (data411->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 103)									data412->iiPos = (data412->iiPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 103)									data413->ffPos = (data413->ffPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 103)									data414->fPos = (data414->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 103)									data415->fPos = (data415->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 103)									data416->fPos = (data416->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 103)									data417->fPos = (data417->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 103)									data418->fPos = (data418->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 103)									data419->fPos = (data419->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 103)									data420->fPos = (data420->fPos + (int)5);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 103)									data421->oPos = (data421->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 103)									data422->oPos = (data422->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 103)									data423->oPos = (data423->oPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 103)									data424->bPos = (data424->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 103)									data425->oPos = (data425->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 103)									data426->iiPos = (data426->iiPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 103)									data427->ffPos = (data427->ffPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 103)									data428->fPos = (data428->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 103)									data429->oPos = (data429->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 103)									data430->iPos = (data430->iPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 103)									data431->fPos = (data431->fPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 103)									data432->bPos = (data432->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 103)									data433->fPos = (data433->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 103)									data434->fPos = (data434->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 103)									data435->oPos = (data435->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 103)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 103)						 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 103)						 ::openfl::_internal::renderer::DrawCommandReader c77 = this15;
HXDLIN( 103)						Float c78 = c77->buffer->f->__get(c77->fPos);
HXDLIN( 103)						::Array< Float > c79 = c77->buffer->f;
HXDLIN( 103)						this->lineTo(c78,c79->__get((c77->fPos + (int)1)));
            					}
            					break;
            					case (int)16: {
HXLINE( 104)						{
HXLINE( 104)							 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 104)							switch((int)(_hx_getEnumValueIndex(_g17))){
            								case (int)0: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 104)									data436->oPos = (data436->oPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 104)									data437->bPos = (data437->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 104)									data438->iPos = (data438->iPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 104)									data439->fPos = (data439->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 104)									data440->oPos = (data440->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 104)									data441->iiPos = (data441->iiPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 104)									data442->ffPos = (data442->ffPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 104)									data443->fPos = (data443->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 104)									data444->fPos = (data444->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 104)									data445->fPos = (data445->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 104)									data446->fPos = (data446->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 104)									data447->fPos = (data447->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 104)									data448->fPos = (data448->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 104)									data449->fPos = (data449->fPos + (int)5);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 104)									data450->oPos = (data450->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 104)									data451->oPos = (data451->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 104)									data452->oPos = (data452->oPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 104)									data453->bPos = (data453->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 104)									data454->oPos = (data454->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 104)									data455->iiPos = (data455->iiPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 104)									data456->ffPos = (data456->ffPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 104)									data457->fPos = (data457->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 104)									data458->oPos = (data458->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 104)									data459->iPos = (data459->iPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 104)									data460->fPos = (data460->fPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 104)									data461->bPos = (data461->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 104)									data462->fPos = (data462->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 104)									data463->fPos = (data463->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 104)									data464->oPos = (data464->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 104)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 104)						 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 104)						 ::openfl::_internal::renderer::DrawCommandReader c80 = this16;
HXDLIN( 104)						Float c81 = c80->buffer->f->__get(c80->fPos);
HXDLIN( 104)						::Array< Float > c82 = c80->buffer->f;
HXDLIN( 104)						this->moveTo(c81,c82->__get((c80->fPos + (int)1)));
            					}
            					break;
            					case (int)17: {
HXLINE( 105)						{
HXLINE( 105)							 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 105)							switch((int)(_hx_getEnumValueIndex(_g18))){
            								case (int)0: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 105)									data465->oPos = (data465->oPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 105)									data466->bPos = (data466->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 105)									data467->iPos = (data467->iPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 105)									data468->fPos = (data468->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 105)									data469->oPos = (data469->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 105)									data470->iiPos = (data470->iiPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 105)									data471->ffPos = (data471->ffPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 105)									data472->fPos = (data472->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 105)									data473->fPos = (data473->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 105)									data474->fPos = (data474->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 105)									data475->fPos = (data475->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 105)									data476->fPos = (data476->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 105)									data477->fPos = (data477->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 105)									data478->fPos = (data478->fPos + (int)5);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 105)									data479->oPos = (data479->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 105)									data480->oPos = (data480->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 105)									data481->oPos = (data481->oPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 105)									data482->bPos = (data482->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 105)									data483->oPos = (data483->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 105)									data484->iiPos = (data484->iiPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 105)									data485->ffPos = (data485->ffPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 105)									data486->fPos = (data486->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 105)									data487->oPos = (data487->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 105)									data488->iPos = (data488->iPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 105)									data489->fPos = (data489->fPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 105)									data490->bPos = (data490->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 105)									data491->fPos = (data491->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 105)									data492->fPos = (data492->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 105)									data493->oPos = (data493->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 105)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::OVERRIDE_MATRIX_dyn();
HXDLIN( 105)						 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN( 105)						 ::openfl::_internal::renderer::DrawCommandReader c83 = this17;
HXDLIN( 105)						this->overrideMatrix(( ( ::openfl::geom::Matrix)(c83->buffer->o->__get(c83->oPos)) ));
            					}
            					break;
            					case (int)18: {
HXLINE( 106)						{
HXLINE( 106)							 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN( 106)							switch((int)(_hx_getEnumValueIndex(_g19))){
            								case (int)0: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 106)									data494->oPos = (data494->oPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 106)									data495->bPos = (data495->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 106)									data496->iPos = (data496->iPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 106)									data497->fPos = (data497->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 106)									data498->oPos = (data498->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 106)									data499->iiPos = (data499->iiPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 106)									data500->ffPos = (data500->ffPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 106)									data501->fPos = (data501->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 106)									data502->fPos = (data502->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 106)									data503->fPos = (data503->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 106)									data504->fPos = (data504->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 106)									data505->fPos = (data505->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 106)									data506->fPos = (data506->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 106)									data507->fPos = (data507->fPos + (int)5);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 106)									data508->oPos = (data508->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 106)									data509->oPos = (data509->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 106)									data510->oPos = (data510->oPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 106)									data511->bPos = (data511->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 106)									data512->oPos = (data512->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 106)									data513->iiPos = (data513->iiPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 106)									data514->ffPos = (data514->ffPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 106)									data515->fPos = (data515->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 106)									data516->oPos = (data516->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 106)									data517->iPos = (data517->iPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 106)									data518->fPos = (data518->fPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 106)									data519->bPos = (data519->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 106)									data520->fPos = (data520->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 106)									data521->fPos = (data521->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 106)									data522->oPos = (data522->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 106)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 106)						 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
HXDLIN( 106)						 ::openfl::_internal::renderer::DrawCommandReader c84 = this18;
HXDLIN( 106)						this->windingEvenOdd();
            					}
            					break;
            					case (int)19: {
HXLINE( 107)						{
HXLINE( 107)							 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN( 107)							switch((int)(_hx_getEnumValueIndex(_g20))){
            								case (int)0: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 107)									data523->oPos = (data523->oPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 107)									data524->bPos = (data524->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 107)									data525->iPos = (data525->iPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 107)									data526->fPos = (data526->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 107)									data527->oPos = (data527->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN( 107)									data528->iiPos = (data528->iiPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN( 107)									data529->ffPos = (data529->ffPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN( 107)									data530->fPos = (data530->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN( 107)									data531->fPos = (data531->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN( 107)									data532->fPos = (data532->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN( 107)									data533->fPos = (data533->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN( 107)									data534->fPos = (data534->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN( 107)									data535->fPos = (data535->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN( 107)									data536->fPos = (data536->fPos + (int)5);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN( 107)									data537->oPos = (data537->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN( 107)									data538->oPos = (data538->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN( 107)									data539->oPos = (data539->oPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN( 107)									data540->bPos = (data540->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN( 107)									data541->oPos = (data541->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN( 107)									data542->iiPos = (data542->iiPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN( 107)									data543->ffPos = (data543->ffPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN( 107)									data544->fPos = (data544->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN( 107)									data545->oPos = (data545->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN( 107)									data546->iPos = (data546->iPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN( 107)									data547->fPos = (data547->fPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN( 107)									data548->bPos = (data548->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN( 107)									data549->fPos = (data549->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN( 107)									data550->fPos = (data550->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN( 107)									data551->oPos = (data551->oPos + (int)1);
            								}
            								break;
            								case (int)18: case (int)19: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 107)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 107)						 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
HXDLIN( 107)						 ::openfl::_internal::renderer::DrawCommandReader c85 = this19;
HXDLIN( 107)						this->windingNonZero();
            					}
            					break;
            					default:{
            					}
            				}
            			}
            		}
HXLINE( 114)		data->destroy();
HXLINE( 115)		return other;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,append,return )

void DrawCommandBuffer_obj::beginBitmapFill( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_120_beginBitmapFill)
HXLINE( 122)		this->prepareWrite();
HXLINE( 124)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn());
HXLINE( 125)		this->o->push(bitmap);
HXLINE( 126)		this->o->push(matrix);
HXLINE( 127)		this->b->push(repeat);
HXLINE( 128)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,beginBitmapFill,(void))

void DrawCommandBuffer_obj::beginFill(int color,Float alpha){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_132_beginFill)
HXLINE( 134)		this->prepareWrite();
HXLINE( 136)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn());
HXLINE( 137)		this->i->push(color);
HXLINE( 138)		this->f->push(alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,beginFill,(void))

void DrawCommandBuffer_obj::beginGradientFill( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_143_beginGradientFill)
HXLINE( 145)		this->prepareWrite();
HXLINE( 147)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn());
HXLINE( 148)		this->o->push(type);
HXLINE( 149)		this->ii->push(colors);
HXLINE( 150)		this->ff->push(alphas);
HXLINE( 151)		this->ii->push(ratios);
HXLINE( 152)		this->o->push(matrix);
HXLINE( 153)		this->o->push(spreadMethod);
HXLINE( 154)		this->o->push(interpolationMethod);
HXLINE( 155)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,beginGradientFill,(void))

void DrawCommandBuffer_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_160_clear)
HXLINE( 162)		this->types = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->types;
HXLINE( 164)		this->b = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->b;
HXLINE( 165)		this->i = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->i;
HXLINE( 166)		this->f = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->f;
HXLINE( 167)		this->o = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->o;
HXLINE( 168)		this->ff = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->ff;
HXLINE( 169)		this->ii = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->ii;
HXLINE( 171)		this->copyOnWrite = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,clear,(void))

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_176_copy)
HXLINE( 178)		 ::openfl::_internal::renderer::DrawCommandBuffer copy =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
HXLINE( 179)		copy->append(hx::ObjectPtr<OBJ_>(this));
HXLINE( 180)		return copy;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,copy,return )

void DrawCommandBuffer_obj::cubicCurveTo(Float controlX1,Float controlY1,Float controlX2,Float controlY2,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_185_cubicCurveTo)
HXLINE( 187)		this->prepareWrite();
HXLINE( 189)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn());
HXLINE( 190)		this->f->push(controlX1);
HXLINE( 191)		this->f->push(controlY1);
HXLINE( 192)		this->f->push(controlX2);
HXLINE( 193)		this->f->push(controlY2);
HXLINE( 194)		this->f->push(anchorX);
HXLINE( 195)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,cubicCurveTo,(void))

void DrawCommandBuffer_obj::curveTo(Float controlX,Float controlY,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_199_curveTo)
HXLINE( 201)		this->prepareWrite();
HXLINE( 203)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn());
HXLINE( 204)		this->f->push(controlX);
HXLINE( 205)		this->f->push(controlY);
HXLINE( 206)		this->f->push(anchorX);
HXLINE( 207)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,curveTo,(void))

void DrawCommandBuffer_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_212_destroy)
HXLINE( 214)		this->clear();
HXLINE( 216)		this->types = null();
HXLINE( 218)		this->b = null();
HXLINE( 219)		this->i = null();
HXLINE( 220)		this->f = null();
HXLINE( 221)		this->o = null();
HXLINE( 222)		this->ff = null();
HXLINE( 223)		this->ii = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,destroy,(void))

void DrawCommandBuffer_obj::drawCircle(Float x,Float y,Float radius){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_228_drawCircle)
HXLINE( 230)		this->prepareWrite();
HXLINE( 232)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn());
HXLINE( 233)		this->f->push(x);
HXLINE( 234)		this->f->push(y);
HXLINE( 235)		this->f->push(radius);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DrawCommandBuffer_obj,drawCircle,(void))

void DrawCommandBuffer_obj::drawEllipse(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_240_drawEllipse)
HXLINE( 242)		this->prepareWrite();
HXLINE( 244)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn());
HXLINE( 245)		this->f->push(x);
HXLINE( 246)		this->f->push(y);
HXLINE( 247)		this->f->push(width);
HXLINE( 248)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawEllipse,(void))

void DrawCommandBuffer_obj::drawRect(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_253_drawRect)
HXLINE( 255)		this->prepareWrite();
HXLINE( 257)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn());
HXLINE( 258)		this->f->push(x);
HXLINE( 259)		this->f->push(y);
HXLINE( 260)		this->f->push(width);
HXLINE( 261)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawRect,(void))

void DrawCommandBuffer_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_265_drawRoundRect)
HXLINE( 267)		this->prepareWrite();
HXLINE( 269)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn());
HXLINE( 270)		this->f->push(x);
HXLINE( 271)		this->f->push(y);
HXLINE( 272)		this->f->push(width);
HXLINE( 273)		this->f->push(height);
HXLINE( 274)		this->f->push(ellipseWidth);
HXLINE( 275)		this->o->push(ellipseHeight);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,drawRoundRect,(void))

void DrawCommandBuffer_obj::drawTriangles( ::openfl::_Vector::AbstractVector vertices, ::openfl::_Vector::AbstractVector indices, ::openfl::_Vector::AbstractVector uvtData, ::Dynamic culling){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_280_drawTriangles)
HXLINE( 282)		this->prepareWrite();
HXLINE( 284)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn());
HXLINE( 285)		this->o->push(vertices);
HXLINE( 286)		this->o->push(indices);
HXLINE( 287)		this->o->push(uvtData);
HXLINE( 288)		this->o->push(culling);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawTriangles,(void))

void DrawCommandBuffer_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_293_endFill)
HXLINE( 295)		this->prepareWrite();
HXLINE( 297)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,endFill,(void))

void DrawCommandBuffer_obj::lineBitmapStyle( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_302_lineBitmapStyle)
HXLINE( 304)		this->prepareWrite();
HXLINE( 306)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn());
HXLINE( 307)		this->o->push(bitmap);
HXLINE( 308)		this->o->push(matrix);
HXLINE( 309)		this->b->push(repeat);
HXLINE( 310)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,lineBitmapStyle,(void))

void DrawCommandBuffer_obj::lineGradientStyle( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_315_lineGradientStyle)
HXLINE( 317)		this->prepareWrite();
HXLINE( 319)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn());
HXLINE( 320)		this->o->push(type);
HXLINE( 321)		this->ii->push(colors);
HXLINE( 322)		this->ff->push(alphas);
HXLINE( 323)		this->ii->push(ratios);
HXLINE( 324)		this->o->push(matrix);
HXLINE( 325)		this->o->push(spreadMethod);
HXLINE( 326)		this->o->push(interpolationMethod);
HXLINE( 327)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineGradientStyle,(void))

void DrawCommandBuffer_obj::lineStyle( ::Dynamic thickness,int color,Float alpha,bool pixelHinting, ::Dynamic scaleMode, ::Dynamic caps, ::Dynamic joints,Float miterLimit){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_332_lineStyle)
HXLINE( 334)		this->prepareWrite();
HXLINE( 336)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn());
HXLINE( 337)		this->o->push(thickness);
HXLINE( 338)		this->i->push(color);
HXLINE( 339)		this->f->push(alpha);
HXLINE( 340)		this->b->push(pixelHinting);
HXLINE( 341)		this->o->push(scaleMode);
HXLINE( 342)		this->o->push(caps);
HXLINE( 343)		this->o->push(joints);
HXLINE( 344)		this->f->push(miterLimit);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineStyle,(void))

void DrawCommandBuffer_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_349_lineTo)
HXLINE( 351)		this->prepareWrite();
HXLINE( 353)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn());
HXLINE( 354)		this->f->push(x);
HXLINE( 355)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,lineTo,(void))

void DrawCommandBuffer_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_360_moveTo)
HXLINE( 362)		this->prepareWrite();
HXLINE( 364)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn());
HXLINE( 365)		this->f->push(x);
HXLINE( 366)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,moveTo,(void))

void DrawCommandBuffer_obj::prepareWrite(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_373_prepareWrite)
HXDLIN( 373)		if (this->copyOnWrite) {
HXLINE( 375)			this->types = this->types->copy();
HXLINE( 376)			this->b = this->b->copy();
HXLINE( 377)			this->i = this->i->copy();
HXLINE( 378)			this->f = this->f->copy();
HXLINE( 379)			this->o = this->o->copy();
HXLINE( 380)			this->ff = this->ff->copy();
HXLINE( 381)			this->ii = this->ii->copy();
HXLINE( 383)			this->copyOnWrite = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,prepareWrite,(void))

void DrawCommandBuffer_obj::overrideMatrix( ::openfl::geom::Matrix matrix){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_390_overrideMatrix)
HXLINE( 392)		this->prepareWrite();
HXLINE( 394)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::OVERRIDE_MATRIX_dyn());
HXLINE( 395)		this->o->push(matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,overrideMatrix,(void))

void DrawCommandBuffer_obj::windingEvenOdd(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_400_windingEvenOdd)
HXLINE( 402)		this->prepareWrite();
HXLINE( 404)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingEvenOdd,(void))

void DrawCommandBuffer_obj::windingNonZero(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_409_windingNonZero)
HXLINE( 411)		this->prepareWrite();
HXLINE( 413)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingNonZero,(void))

int DrawCommandBuffer_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_427_get_length)
HXDLIN( 427)		return this->types->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,get_length,return )

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::empty;


hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__new() {
	hx::ObjectPtr< DrawCommandBuffer_obj > __this = new DrawCommandBuffer_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__alloc(hx::Ctx *_hx_ctx) {
	DrawCommandBuffer_obj *__this = (DrawCommandBuffer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DrawCommandBuffer_obj), true, "openfl._internal.renderer.DrawCommandBuffer"));
	*(void **)__this = DrawCommandBuffer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DrawCommandBuffer_obj::DrawCommandBuffer_obj()
{
}

void DrawCommandBuffer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DrawCommandBuffer);
	HX_MARK_MEMBER_NAME(types,"types");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_MARK_MEMBER_NAME(f,"f");
	HX_MARK_MEMBER_NAME(ff,"ff");
	HX_MARK_MEMBER_NAME(i,"i");
	HX_MARK_MEMBER_NAME(ii,"ii");
	HX_MARK_MEMBER_NAME(o,"o");
	HX_MARK_END_CLASS();
}

void DrawCommandBuffer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(types,"types");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_VISIT_MEMBER_NAME(f,"f");
	HX_VISIT_MEMBER_NAME(ff,"ff");
	HX_VISIT_MEMBER_NAME(i,"i");
	HX_VISIT_MEMBER_NAME(ii,"ii");
	HX_VISIT_MEMBER_NAME(o,"o");
}

hx::Val DrawCommandBuffer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		if (HX_FIELD_EQ(inName,"f") ) { return hx::Val( f ); }
		if (HX_FIELD_EQ(inName,"i") ) { return hx::Val( i ); }
		if (HX_FIELD_EQ(inName,"o") ) { return hx::Val( o ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { return hx::Val( ff ); }
		if (HX_FIELD_EQ(inName,"ii") ) { return hx::Val( ii ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { return hx::Val( types ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"append") ) { return hx::Val( append_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"moveTo") ) { return hx::Val( moveTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return hx::Val( curveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"endFill") ) { return hx::Val( endFill_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return hx::Val( drawRect_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"beginFill") ) { return hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return hx::Val( lineStyle_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawCircle") ) { return hx::Val( drawCircle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { return hx::Val( copyOnWrite ); }
		if (HX_FIELD_EQ(inName,"drawEllipse") ) { return hx::Val( drawEllipse_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cubicCurveTo") ) { return hx::Val( cubicCurveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"prepareWrite") ) { return hx::Val( prepareWrite_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { return hx::Val( drawRoundRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawTriangles") ) { return hx::Val( drawTriangles_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"overrideMatrix") ) { return hx::Val( overrideMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingEvenOdd") ) { return hx::Val( windingEvenOdd_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingNonZero") ) { return hx::Val( windingNonZero_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"beginBitmapFill") ) { return hx::Val( beginBitmapFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineBitmapStyle") ) { return hx::Val( lineBitmapStyle_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return hx::Val( beginGradientFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineGradientStyle") ) { return hx::Val( lineGradientStyle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DrawCommandBuffer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = ( empty ); return true; }
	}
	return false;
}

hx::Val DrawCommandBuffer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"f") ) { f=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"i") ) { i=inValue.Cast< ::Array< int > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { ff=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ii") ) { ii=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { types=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { copyOnWrite=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool DrawCommandBuffer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { empty=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
	}
	return false;
}

void DrawCommandBuffer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("types","\x79","\x70","\xcb","\x1a"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc"));
	outFields->push(HX_HCSTRING("f","\x66","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("ff","\x40","\x59","\x00","\x00"));
	outFields->push(HX_HCSTRING("i","\x69","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00"));
	outFields->push(HX_HCSTRING("o","\x6f","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DrawCommandBuffer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,types),HX_HCSTRING("types","\x79","\x70","\xcb","\x1a")},
	{hx::fsObject /*Array< bool >*/ ,(int)offsetof(DrawCommandBuffer_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{hx::fsBool,(int)offsetof(DrawCommandBuffer_obj,copyOnWrite),HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc")},
	{hx::fsObject /*Array< Float >*/ ,(int)offsetof(DrawCommandBuffer_obj,f),HX_HCSTRING("f","\x66","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,ff),HX_HCSTRING("ff","\x40","\x59","\x00","\x00")},
	{hx::fsObject /*Array< int >*/ ,(int)offsetof(DrawCommandBuffer_obj,i),HX_HCSTRING("i","\x69","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,ii),HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(DrawCommandBuffer_obj,o),HX_HCSTRING("o","\x6f","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo DrawCommandBuffer_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &DrawCommandBuffer_obj::empty,HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String DrawCommandBuffer_obj_sMemberFields[] = {
	HX_HCSTRING("types","\x79","\x70","\xcb","\x1a"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc"),
	HX_HCSTRING("f","\x66","\x00","\x00","\x00"),
	HX_HCSTRING("ff","\x40","\x59","\x00","\x00"),
	HX_HCSTRING("i","\x69","\x00","\x00","\x00"),
	HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00"),
	HX_HCSTRING("o","\x6f","\x00","\x00","\x00"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("beginBitmapFill","\x9b","\xc9","\x07","\x6a"),
	HX_HCSTRING("beginFill","\x4c","\xad","\x95","\x8c"),
	HX_HCSTRING("beginGradientFill","\x5c","\x3c","\x03","\x2e"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("cubicCurveTo","\xe0","\x07","\x90","\x2e"),
	HX_HCSTRING("curveTo","\x0a","\x60","\x88","\xce"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("drawCircle","\x34","\xed","\xd0","\x97"),
	HX_HCSTRING("drawEllipse","\x3a","\x85","\xce","\x54"),
	HX_HCSTRING("drawRect","\x48","\xf7","\x10","\x60"),
	HX_HCSTRING("drawRoundRect","\xee","\xc3","\xaa","\xe2"),
	HX_HCSTRING("drawTriangles","\x07","\x44","\x68","\xde"),
	HX_HCSTRING("endFill","\xfe","\x87","\xe0","\x25"),
	HX_HCSTRING("lineBitmapStyle","\x2e","\x3f","\x21","\x45"),
	HX_HCSTRING("lineGradientStyle","\x8d","\x24","\xf2","\xc1"),
	HX_HCSTRING("lineStyle","\x9d","\xa8","\x18","\xcb"),
	HX_HCSTRING("lineTo","\x8f","\x46","\xa0","\xec"),
	HX_HCSTRING("moveTo","\xec","\xd2","\xac","\xcc"),
	HX_HCSTRING("prepareWrite","\xd8","\x61","\x09","\x44"),
	HX_HCSTRING("overrideMatrix","\xad","\x8d","\xa9","\xb9"),
	HX_HCSTRING("windingEvenOdd","\xbb","\x5c","\x0a","\x0b"),
	HX_HCSTRING("windingNonZero","\xdb","\xb4","\x3f","\xd6"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	::String(null()) };

static void DrawCommandBuffer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DrawCommandBuffer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DrawCommandBuffer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DrawCommandBuffer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#endif

hx::Class DrawCommandBuffer_obj::__mClass;

static ::String DrawCommandBuffer_obj_sStaticFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	::String(null())
};

void DrawCommandBuffer_obj::__register()
{
	hx::Object *dummy = new DrawCommandBuffer_obj;
	DrawCommandBuffer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.DrawCommandBuffer","\x2c","\xee","\x3f","\x7e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DrawCommandBuffer_obj::__GetStatic;
	__mClass->mSetStaticField = &DrawCommandBuffer_obj::__SetStatic;
	__mClass->mMarkFunc = DrawCommandBuffer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DrawCommandBuffer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DrawCommandBuffer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DrawCommandBuffer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DrawCommandBuffer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DrawCommandBuffer_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_28_boot)
HXDLIN(  28)		empty =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
