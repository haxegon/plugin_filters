// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_CurveToView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/CurveToView_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6171a03a509a36a4_286__new,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","_new",0x02b6a548,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_._new","openfl/_internal/renderer/DrawCommandReader.hx",286,0xbbdbd1ae)
HX_LOCAL_STACK_FRAME(_hx_pos_6171a03a509a36a4_287_get_controlX,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","get_controlX",0xd0ea894b,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_.get_controlX","openfl/_internal/renderer/DrawCommandReader.hx",287,0xbbdbd1ae)
HX_LOCAL_STACK_FRAME(_hx_pos_6171a03a509a36a4_288_get_controlY,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","get_controlY",0xd0ea894c,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_.get_controlY","openfl/_internal/renderer/DrawCommandReader.hx",288,0xbbdbd1ae)
HX_LOCAL_STACK_FRAME(_hx_pos_6171a03a509a36a4_289_get_anchorX,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","get_anchorX",0x40299753,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_.get_anchorX","openfl/_internal/renderer/DrawCommandReader.hx",289,0xbbdbd1ae)
HX_LOCAL_STACK_FRAME(_hx_pos_6171a03a509a36a4_290_get_anchorY,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","get_anchorY",0x40299754,"openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_.get_anchorY","openfl/_internal/renderer/DrawCommandReader.hx",290,0xbbdbd1ae)
namespace openfl{
namespace _internal{
namespace renderer{
namespace _DrawCommandReader{

void CurveToView_Impl__obj::__construct() { }

Dynamic CurveToView_Impl__obj::__CreateEmpty() { return new CurveToView_Impl__obj; }

void *CurveToView_Impl__obj::_hx_vtable = 0;

Dynamic CurveToView_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CurveToView_Impl__obj > _hx_result = new CurveToView_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CurveToView_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x66add11d;
}

 ::openfl::_internal::renderer::DrawCommandReader CurveToView_Impl__obj::_new( ::openfl::_internal::renderer::DrawCommandReader d){
            	HX_STACKFRAME(&_hx_pos_6171a03a509a36a4_286__new)
HXDLIN( 286)		 ::openfl::_internal::renderer::DrawCommandReader this1 = d;
HXDLIN( 286)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CurveToView_Impl__obj,_new,return )

Float CurveToView_Impl__obj::get_controlX( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACKFRAME(&_hx_pos_6171a03a509a36a4_287_get_controlX)
HXDLIN( 287)		return this1->buffer->f->__get(this1->fPos);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CurveToView_Impl__obj,get_controlX,return )

Float CurveToView_Impl__obj::get_controlY( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACKFRAME(&_hx_pos_6171a03a509a36a4_288_get_controlY)
HXDLIN( 288)		::Array< Float > this2 = this1->buffer->f;
HXDLIN( 288)		return this2->__get((this1->fPos + (int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CurveToView_Impl__obj,get_controlY,return )

Float CurveToView_Impl__obj::get_anchorX( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACKFRAME(&_hx_pos_6171a03a509a36a4_289_get_anchorX)
HXDLIN( 289)		::Array< Float > this2 = this1->buffer->f;
HXDLIN( 289)		return this2->__get((this1->fPos + (int)2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CurveToView_Impl__obj,get_anchorX,return )

Float CurveToView_Impl__obj::get_anchorY( ::openfl::_internal::renderer::DrawCommandReader this1){
            	HX_STACKFRAME(&_hx_pos_6171a03a509a36a4_290_get_anchorY)
HXDLIN( 290)		::Array< Float > this2 = this1->buffer->f;
HXDLIN( 290)		return this2->__get((this1->fPos + (int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CurveToView_Impl__obj,get_anchorY,return )


CurveToView_Impl__obj::CurveToView_Impl__obj()
{
}

bool CurveToView_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_anchorX") ) { outValue = get_anchorX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_anchorY") ) { outValue = get_anchorY_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_controlX") ) { outValue = get_controlX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_controlY") ) { outValue = get_controlY_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CurveToView_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CurveToView_Impl__obj_sStaticStorageInfo = 0;
#endif

static void CurveToView_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CurveToView_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CurveToView_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CurveToView_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class CurveToView_Impl__obj::__mClass;

static ::String CurveToView_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get_controlX","\x64","\x3a","\xd6","\xec"),
	HX_HCSTRING("get_controlY","\x65","\x3a","\xd6","\xec"),
	HX_HCSTRING("get_anchorX","\x5a","\x4c","\x9c","\x88"),
	HX_HCSTRING("get_anchorY","\x5b","\x4c","\x9c","\x88"),
	::String(null())
};

void CurveToView_Impl__obj::__register()
{
	hx::Object *dummy = new CurveToView_Impl__obj;
	CurveToView_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_","\xe7","\xd9","\x14","\xfe");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CurveToView_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CurveToView_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CurveToView_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CurveToView_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CurveToView_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CurveToView_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CurveToView_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace _DrawCommandReader
