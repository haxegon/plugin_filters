// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_graphics_ConsoleRenderContext
#include <lime/graphics/ConsoleRenderContext.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_AbstractRenderer
#include <openfl/_internal/renderer/AbstractRenderer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_console_ConsoleRenderer
#include <openfl/_internal/renderer/console/ConsoleRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6cc31266f7c5b102_1325_new,"openfl._internal.renderer.console.ConsoleRenderer","new",0x3dea677a,"openfl._internal.renderer.console.ConsoleRenderer.new","openfl/_internal/renderer/console/ConsoleRenderer.hx",1325,0xaf6bb8b6)
HX_LOCAL_STACK_FRAME(_hx_pos_6cc31266f7c5b102_1334_render,"openfl._internal.renderer.console.ConsoleRenderer","render",0xc9bac07c,"openfl._internal.renderer.console.ConsoleRenderer.render","openfl/_internal/renderer/console/ConsoleRenderer.hx",1334,0xaf6bb8b6)
namespace openfl{
namespace _internal{
namespace renderer{
namespace console{

void ConsoleRenderer_obj::__construct( ::openfl::display::Stage stage, ::lime::graphics::ConsoleRenderContext ctx){
            	HX_STACKFRAME(&_hx_pos_6cc31266f7c5b102_1325_new)
HXLINE(1327)		super::__construct(stage);
HXLINE(1329)		HX_STACK_DO_THROW(HX_("ConsoleRenderer not supported",db,b9,d4,90));
            	}

Dynamic ConsoleRenderer_obj::__CreateEmpty() { return new ConsoleRenderer_obj; }

void *ConsoleRenderer_obj::_hx_vtable = 0;

Dynamic ConsoleRenderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ConsoleRenderer_obj > _hx_result = new ConsoleRenderer_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ConsoleRenderer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c820b8e) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2c820b8e;
	} else {
		return inClassId==(int)0x58060c34;
	}
}

void ConsoleRenderer_obj::render(){
            	HX_STACKFRAME(&_hx_pos_6cc31266f7c5b102_1334_render)
            	}



hx::ObjectPtr< ConsoleRenderer_obj > ConsoleRenderer_obj::__new( ::openfl::display::Stage stage, ::lime::graphics::ConsoleRenderContext ctx) {
	hx::ObjectPtr< ConsoleRenderer_obj > __this = new ConsoleRenderer_obj();
	__this->__construct(stage,ctx);
	return __this;
}

hx::ObjectPtr< ConsoleRenderer_obj > ConsoleRenderer_obj::__alloc(hx::Ctx *_hx_ctx, ::openfl::display::Stage stage, ::lime::graphics::ConsoleRenderContext ctx) {
	ConsoleRenderer_obj *__this = (ConsoleRenderer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ConsoleRenderer_obj), true, "openfl._internal.renderer.console.ConsoleRenderer"));
	*(void **)__this = ConsoleRenderer_obj::_hx_vtable;
	__this->__construct(stage,ctx);
	return __this;
}

ConsoleRenderer_obj::ConsoleRenderer_obj()
{
}

hx::Val ConsoleRenderer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ConsoleRenderer_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ConsoleRenderer_obj_sStaticStorageInfo = 0;
#endif

static ::String ConsoleRenderer_obj_sMemberFields[] = {
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null()) };

static void ConsoleRenderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ConsoleRenderer_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ConsoleRenderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ConsoleRenderer_obj::__mClass,"__mClass");
};

#endif

hx::Class ConsoleRenderer_obj::__mClass;

void ConsoleRenderer_obj::__register()
{
	hx::Object *dummy = new ConsoleRenderer_obj;
	ConsoleRenderer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.console.ConsoleRenderer","\x88","\xe2","\x96","\x3e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ConsoleRenderer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ConsoleRenderer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ConsoleRenderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ConsoleRenderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ConsoleRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ConsoleRenderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace console
