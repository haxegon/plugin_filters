// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_27_print,"Sys","print",0x483745ec,"Sys.print","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",27,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_31_println,"Sys","println",0x3905f76e,"Sys.println","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",31,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_54_args,"Sys","args",0xeaeddc7e,"Sys.args","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",54,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_57_getEnv,"Sys","getEnv",0xd9e05658,"Sys.getEnv","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",57,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_69_sleep,"Sys","sleep",0xfe70aad6,"Sys.sleep","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",69,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_77_getCwd,"Sys","getCwd",0xd9ded99b,"Sys.getCwd","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",77,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_85_systemName,"Sys","systemName",0xbea5b6bb,"Sys.systemName","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",85,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_89_command,"Sys","command",0x363f8cca,"Sys.command","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",89,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_107_exit,"Sys","exit",0xed97463f,"Sys.exit","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",107,0xc0a6d0d7)
HX_LOCAL_STACK_FRAME(_hx_pos_5d83083c9a4ec5ad_123_programPath,"Sys","programPath",0x38d53548,"Sys.programPath","C:\\coding\\haxe\\haxe\\std/cpp/_std/Sys.hx",123,0xc0a6d0d7)

void Sys_obj::__construct() { }

Dynamic Sys_obj::__CreateEmpty() { return new Sys_obj; }

void *Sys_obj::_hx_vtable = 0;

Dynamic Sys_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Sys_obj > _hx_result = new Sys_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Sys_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x003f64ed;
}

void Sys_obj::print( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_27_print)
HXDLIN(  27)		::__hxcpp_print(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,print,(void))

void Sys_obj::println( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_31_println)
HXDLIN(  31)		::__hxcpp_println(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,println,(void))

::Array< ::String > Sys_obj::args(){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_54_args)
HXDLIN(  54)		return ::__get_args();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,args,return )

::String Sys_obj::getEnv(::String s){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_57_getEnv)
HXLINE(  58)		::String v = _hx_std_get_env(s);
HXLINE(  59)		if (hx::IsNull( v )) {
HXLINE(  60)			return null();
            		}
HXLINE(  61)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,getEnv,return )

void Sys_obj::sleep(Float seconds){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_69_sleep)
HXDLIN(  69)		_hx_std_sys_sleep(seconds);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,sleep,(void))

::String Sys_obj::getCwd(){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_77_getCwd)
HXDLIN(  77)		return _hx_std_get_cwd();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,getCwd,return )

::String Sys_obj::systemName(){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_85_systemName)
HXDLIN(  85)		return _hx_std_sys_string();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,systemName,return )

int Sys_obj::command(::String cmd,::Array< ::String > args){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_89_command)
HXDLIN(  89)		if (hx::IsNull( args )) {
HXLINE(  90)			return _hx_std_sys_command(cmd);
            		}
            		else {
HXLINE(  92)			::String _g = ::Sys_obj::systemName();
HXDLIN(  92)			if ((_g == HX_("Windows",63,06,c6,b5))) {
HXLINE(  94)				::Array< ::String > _g1 = ::Array_obj< ::String >::__new(0);
HXLINE(  95)				{
HXLINE(  95)					int _g11 = (int)0;
HXDLIN(  95)					::Array< ::String > _g2 = ::Array_obj< ::String >::__new(1)->init(0,::StringTools_obj::replace(cmd,HX_("/",2f,00,00,00),HX_("\\",5c,00,00,00)))->concat(args);
HXDLIN(  95)					while((_g11 < _g2->length)){
HXLINE(  95)						::String a = _g2->__get(_g11);
HXDLIN(  95)						_g11 = (_g11 + (int)1);
HXLINE(  96)						_g1->push(::StringTools_obj::quoteWinArg(a,true));
            					}
            				}
HXLINE(  94)				cmd = _g1->join(HX_(" ",20,00,00,00));
HXLINE(  98)				return _hx_std_sys_command(cmd);
            			}
            			else {
HXLINE( 100)				cmd = ::Array_obj< ::String >::__new(1)->init(0,cmd)->concat(args)->map(::StringTools_obj::quoteUnixArg_dyn())->join(HX_(" ",20,00,00,00));
HXLINE( 101)				return _hx_std_sys_command(cmd);
            			}
            		}
HXLINE(  89)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Sys_obj,command,return )

void Sys_obj::exit(int code){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_107_exit)
HXDLIN( 107)		::__hxcpp_exit(code);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,exit,(void))

::String Sys_obj::programPath(){
            	HX_STACKFRAME(&_hx_pos_5d83083c9a4ec5ad_123_programPath)
HXDLIN( 123)		return _hx_std_sys_exe_path();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,programPath,return )


Sys_obj::Sys_obj()
{
}

bool Sys_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"args") ) { outValue = args_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"print") ) { outValue = print_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sleep") ) { outValue = sleep_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getEnv") ) { outValue = getEnv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getCwd") ) { outValue = getCwd_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"println") ) { outValue = println_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"command") ) { outValue = command_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"systemName") ) { outValue = systemName_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"programPath") ) { outValue = programPath_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Sys_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Sys_obj_sStaticStorageInfo = 0;
#endif

static void Sys_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Sys_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Sys_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Sys_obj::__mClass,"__mClass");
};

#endif

hx::Class Sys_obj::__mClass;

static ::String Sys_obj_sStaticFields[] = {
	HX_HCSTRING("print","\x2d","\x58","\x8b","\xc8"),
	HX_HCSTRING("println","\xef","\xdb","\x33","\x84"),
	HX_HCSTRING("args","\x5d","\x8d","\x74","\x40"),
	HX_HCSTRING("getEnv","\xf7","\x3c","\x1c","\xa3"),
	HX_HCSTRING("sleep","\x17","\xbd","\xc4","\x7e"),
	HX_HCSTRING("getCwd","\x3a","\xc0","\x1a","\xa3"),
	HX_HCSTRING("systemName","\xda","\xd8","\x82","\xf7"),
	HX_HCSTRING("command","\x4b","\x71","\x6d","\x81"),
	HX_HCSTRING("exit","\x1e","\xf7","\x1d","\x43"),
	HX_HCSTRING("programPath","\x49","\xee","\x75","\xc1"),
	::String(null())
};

void Sys_obj::__register()
{
	hx::Object *dummy = new Sys_obj;
	Sys_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Sys","\xed","\x64","\x3f","\x00");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Sys_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Sys_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Sys_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Sys_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Sys_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Sys_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Sys_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

