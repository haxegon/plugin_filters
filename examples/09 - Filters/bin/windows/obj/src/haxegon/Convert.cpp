// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxegon_Convert
#include <haxegon/Convert.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_82f6ad205dabc785_5_tostring,"haxegon.Convert","tostring",0xe3aa11d5,"haxegon.Convert.tostring","haxegon/Convert.hx",5,0x9363eeda)
HX_LOCAL_STACK_FRAME(_hx_pos_82f6ad205dabc785_9_toint,"haxegon.Convert","toint",0x6ddc196b,"haxegon.Convert.toint","haxegon/Convert.hx",9,0x9363eeda)
HX_LOCAL_STACK_FRAME(_hx_pos_82f6ad205dabc785_13_tofloat,"haxegon.Convert","tofloat",0xf49be918,"haxegon.Convert.tofloat","haxegon/Convert.hx",13,0x9363eeda)
namespace haxegon{

void Convert_obj::__construct() { }

Dynamic Convert_obj::__CreateEmpty() { return new Convert_obj; }

void *Convert_obj::_hx_vtable = 0;

Dynamic Convert_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Convert_obj > _hx_result = new Convert_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Convert_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1044cefb;
}

::String Convert_obj::tostring( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_82f6ad205dabc785_5_tostring)
HXDLIN(   5)		return ::Std_obj::string(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Convert_obj,tostring,return )

int Convert_obj::toint( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_82f6ad205dabc785_9_toint)
HXDLIN(   9)		return ::Std_obj::parseInt(::Std_obj::string(value));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Convert_obj,toint,return )

Float Convert_obj::tofloat( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_82f6ad205dabc785_13_tofloat)
HXDLIN(  13)		return ::Std_obj::parseFloat(( (::String)(value) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Convert_obj,tofloat,return )


Convert_obj::Convert_obj()
{
}

bool Convert_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"toint") ) { outValue = toint_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"tofloat") ) { outValue = tofloat_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tostring") ) { outValue = tostring_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Convert_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Convert_obj_sStaticStorageInfo = 0;
#endif

static void Convert_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Convert_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Convert_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Convert_obj::__mClass,"__mClass");
};

#endif

hx::Class Convert_obj::__mClass;

static ::String Convert_obj_sStaticFields[] = {
	HX_HCSTRING("tostring","\x8c","\x5c","\xda","\x03"),
	HX_HCSTRING("toint","\x54","\x06","\x2a","\x14"),
	HX_HCSTRING("tofloat","\x41","\xa2","\xed","\x3b"),
	::String(null())
};

void Convert_obj::__register()
{
	hx::Object *dummy = new Convert_obj;
	Convert_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxegon.Convert","\x45","\x78","\x54","\xf9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Convert_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Convert_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Convert_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Convert_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Convert_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Convert_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Convert_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxegon
