// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxegon_Random
#include <haxegon/Random.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_6_bool,"haxegon.Random","bool",0x9a1cf1c7,"haxegon.Random.bool","haxegon/Random.hx",6,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_11_chance,"haxegon.Random","chance",0x65e05cd1,"haxegon.Random.chance","haxegon/Random.hx",11,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_16_int,"haxegon.Random","int",0xd1a501f2,"haxegon.Random.int","haxegon/Random.hx",16,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_21_float,"haxegon.Random","float",0x8ad5415f,"haxegon.Random.float","haxegon/Random.hx",21,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_39_string,"haxegon.Random","string",0xbf9df7ae,"haxegon.Random.string","haxegon/Random.hx",39,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_48_pick,"haxegon.Random","pick",0xa359567e,"haxegon.Random.pick","haxegon/Random.hx",48,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_51_random,"haxegon.Random","random",0x65fcf0e0,"haxegon.Random.random","haxegon/Random.hx",51,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_61_get_seed,"haxegon.Random","get_seed",0x4cb04117,"haxegon.Random.get_seed","haxegon/Random.hx",61,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_64_set_seed,"haxegon.Random","set_seed",0xfb0d9a8b,"haxegon.Random.set_seed","haxegon/Random.hx",64,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_57_boot,"haxegon.Random","boot",0x9a1cf1cf,"haxegon.Random.boot","haxegon/Random.hx",57,0xd956af4c)
HX_LOCAL_STACK_FRAME(_hx_pos_17042376b559995e_58_boot,"haxegon.Random","boot",0x9a1cf1cf,"haxegon.Random.boot","haxegon/Random.hx",58,0xd956af4c)
namespace haxegon{

void Random_obj::__construct() { }

Dynamic Random_obj::__CreateEmpty() { return new Random_obj; }

void *Random_obj::_hx_vtable = 0;

Dynamic Random_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Random_obj > _hx_result = new Random_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Random_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x179729c3;
}

bool Random_obj::_hx_bool(){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_6_bool)
HXDLIN(   6)		return (::haxegon::Random_obj::random() < ((Float)0.5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Random_obj,_hx_bool,return )

bool Random_obj::chance(Float n){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_11_chance)
HXDLIN(  11)		return (::haxegon::Random_obj::_hx_float((int)0,(int)100) < n);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Random_obj,chance,return )

int Random_obj::_hx_int(int from,int to){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_16_int)
HXDLIN(  16)		return (from + ::Math_obj::floor((((to - from) + (int)1) * ::haxegon::Random_obj::random())));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Random_obj,_hx_int,return )

Float Random_obj::_hx_float(Float from,Float to){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_21_float)
HXDLIN(  21)		return (from + ((to - from) * ::haxegon::Random_obj::random()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Random_obj,_hx_float,return )

::String Random_obj::string(int length,::String __o_charactersToUse){
::String charactersToUse = __o_charactersToUse.Default(HX_HCSTRING("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789","\x9f","\x35","\xea","\x01"));
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_39_string)
HXLINE(  40)		::String str = HX_("",00,00,00,00);
HXLINE(  41)		{
HXLINE(  41)			int _g1 = (int)0;
HXDLIN(  41)			int _g = length;
HXDLIN(  41)			while((_g1 < _g)){
HXLINE(  41)				_g1 = (_g1 + (int)1);
HXDLIN(  41)				int i = (_g1 - (int)1);
HXLINE(  42)				str = (str + charactersToUse.charAt(::haxegon::Random_obj::_hx_int((int)0,(charactersToUse.length - (int)1))));
            			}
            		}
HXLINE(  44)		return str;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Random_obj,string,return )

 ::Dynamic Random_obj::pick(::cpp::VirtualArray arr){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_48_pick)
HXDLIN(  48)		return arr->__get(::haxegon::Random_obj::_hx_int((int)0,(arr->get_length() - (int)1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Random_obj,pick,return )

Float Random_obj::random(){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_51_random)
HXLINE(  52)		::haxegon::Random_obj::_actualseed = hx::Mod((::haxegon::Random_obj::_actualseed * (int)16807),(int)2147483647);
HXLINE(  53)		return ::Math_obj::abs(((Float)::haxegon::Random_obj::_actualseed / (Float)(int)2147483647));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Random_obj,random,return )

int Random_obj::_initialseed;

int Random_obj::_actualseed;

int Random_obj::get_seed(){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_61_get_seed)
HXDLIN(  61)		return ::haxegon::Random_obj::_initialseed;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Random_obj,get_seed,return )

int Random_obj::set_seed(int s){
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_64_set_seed)
HXLINE(  65)		if ((s == (int)0)) {
HXLINE(  65)			s = (int)1;
            		}
HXLINE(  66)		::haxegon::Random_obj::_initialseed = s;
HXLINE(  67)		::haxegon::Random_obj::_actualseed = ::Std_obj::_hx_int(::Math_obj::abs(hx::Mod(::haxegon::Random_obj::_initialseed,(int)2147483647)));
HXLINE(  68)		{
HXLINE(  68)			int _g = (int)0;
HXDLIN(  68)			while((_g < (int)10)){
HXLINE(  68)				_g = (_g + (int)1);
HXDLIN(  68)				int i = (_g - (int)1);
HXDLIN(  68)				::haxegon::Random_obj::random();
            			}
            		}
HXLINE(  69)		return ::haxegon::Random_obj::_initialseed;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Random_obj,set_seed,return )


Random_obj::Random_obj()
{
}

bool Random_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"int") ) { outValue = _hx_int_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"bool") ) { outValue = _hx_bool_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pick") ) { outValue = pick_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"seed") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_seed() ); return true; } }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"float") ) { outValue = _hx_float_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"chance") ) { outValue = chance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"string") ) { outValue = string_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"random") ) { outValue = random_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_seed") ) { outValue = get_seed_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_seed") ) { outValue = set_seed_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_actualseed") ) { outValue = ( _actualseed ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_initialseed") ) { outValue = ( _initialseed ); return true; }
	}
	return false;
}

bool Random_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"seed") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_seed(ioValue.Cast< int >()) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_actualseed") ) { _actualseed=ioValue.Cast< int >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_initialseed") ) { _initialseed=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Random_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Random_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Random_obj::_initialseed,HX_HCSTRING("_initialseed","\xf6","\xd5","\xa5","\xa3")},
	{hx::fsInt,(void *) &Random_obj::_actualseed,HX_HCSTRING("_actualseed","\x1e","\xfc","\x7c","\x72")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Random_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Random_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Random_obj::_initialseed,"_initialseed");
	HX_MARK_MEMBER_NAME(Random_obj::_actualseed,"_actualseed");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Random_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Random_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Random_obj::_initialseed,"_initialseed");
	HX_VISIT_MEMBER_NAME(Random_obj::_actualseed,"_actualseed");
};

#endif

hx::Class Random_obj::__mClass;

static ::String Random_obj_sStaticFields[] = {
	HX_HCSTRING("bool","\x2a","\x84","\x1b","\x41"),
	HX_HCSTRING("chance","\xf4","\x8d","\x72","\xb7"),
	HX_HCSTRING("int","\xef","\x0c","\x50","\x00"),
	HX_HCSTRING("float","\x9c","\xc5","\x96","\x02"),
	HX_HCSTRING("string","\xd1","\x28","\x30","\x11"),
	HX_HCSTRING("pick","\xe1","\xe8","\x57","\x4a"),
	HX_HCSTRING("random","\x03","\x22","\x8f","\xb7"),
	HX_HCSTRING("_initialseed","\xf6","\xd5","\xa5","\xa3"),
	HX_HCSTRING("_actualseed","\x1e","\xfc","\x7c","\x72"),
	HX_HCSTRING("get_seed","\xfa","\x40","\x0b","\xcc"),
	HX_HCSTRING("set_seed","\x6e","\x9a","\x68","\x7a"),
	::String(null())
};

void Random_obj::__register()
{
	hx::Object *dummy = new Random_obj;
	Random_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxegon.Random","\xf1","\xd7","\x23","\xfb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Random_obj::__GetStatic;
	__mClass->mSetStaticField = &Random_obj::__SetStatic;
	__mClass->mMarkFunc = Random_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Random_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Random_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Random_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Random_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Random_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Random_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_57_boot)
HXDLIN(  57)		_initialseed = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_17042376b559995e_58_boot)
HXDLIN(  58)		_actualseed = (int)1;
            	}
}

} // end namespace haxegon
