// Generated by Haxe 3.4.4
#ifndef INCLUDED_haxegon_HaxegonSound
#define INCLUDED_haxegon_HaxegonSound

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxegon,HaxegonSound)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,media,Sound)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES HaxegonSound_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HaxegonSound_obj OBJ_;
		HaxegonSound_obj();

	public:
		enum { _hx_ClassId = 0x5ce8378f };

		void __construct( ::openfl::media::Sound _s,Float _vol);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="haxegon.HaxegonSound")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"haxegon.HaxegonSound"); }
		static hx::ObjectPtr< HaxegonSound_obj > __new( ::openfl::media::Sound _s,Float _vol);
		static hx::ObjectPtr< HaxegonSound_obj > __alloc(hx::Ctx *_hx_ctx, ::openfl::media::Sound _s,Float _vol);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HaxegonSound_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("HaxegonSound","\xef","\x2b","\x9a","\xc8"); }

		Float defaultvolume;
		 ::openfl::media::Sound asset;
};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_HaxegonSound */ 
