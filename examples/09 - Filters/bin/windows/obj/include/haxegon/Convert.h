// Generated by Haxe 3.4.4
#ifndef INCLUDED_haxegon_Convert
#define INCLUDED_haxegon_Convert

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxegon,Convert)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES Convert_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Convert_obj OBJ_;
		Convert_obj();

	public:
		enum { _hx_ClassId = 0x1044cefb };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxegon.Convert")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxegon.Convert"); }

		hx::ObjectPtr< Convert_obj > __new() {
			hx::ObjectPtr< Convert_obj > __this = new Convert_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Convert_obj > __alloc(hx::Ctx *_hx_ctx) {
			Convert_obj *__this = (Convert_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Convert_obj), false, "haxegon.Convert"));
			*(void **)__this = Convert_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Convert_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Convert","\xd3","\x25","\x1b","\xe8"); }

		static ::String tostring( ::Dynamic value);
		static ::Dynamic tostring_dyn();

		static int toint( ::Dynamic value);
		static ::Dynamic toint_dyn();

		static Float tofloat( ::Dynamic value);
		static ::Dynamic tofloat_dyn();

};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_Convert */ 
