// Generated by Haxe 3.4.4
#ifndef INCLUDED_haxegon_Load
#define INCLUDED_haxegon_Load

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(haxegon,Load)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(starling,core,Starling)
HX_DECLARE_CLASS2(starling,events,EventDispatcher)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES Load_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Load_obj OBJ_;
		Load_obj();

	public:
		enum { _hx_ClassId = 0x06ec7656 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="haxegon.Load")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"haxegon.Load"); }
		static hx::ObjectPtr< Load_obj > __new();
		static hx::ObjectPtr< Load_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Load_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Load","\x46","\xc6","\x90","\x32"); }

		 ::starling::core::Starling starling;
		void onAddedToStage( ::Dynamic event);
		::Dynamic onAddedToStage_dyn();

		void start();
		::Dynamic start_dyn();

};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_Load */ 
