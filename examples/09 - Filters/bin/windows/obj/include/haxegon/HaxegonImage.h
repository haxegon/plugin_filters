// Generated by Haxe 3.4.4
#ifndef INCLUDED_haxegon_HaxegonImage
#define INCLUDED_haxegon_HaxegonImage

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxegon,HaxegonImage)
HX_DECLARE_CLASS2(starling,display,DisplayObject)
HX_DECLARE_CLASS2(starling,display,Image)
HX_DECLARE_CLASS2(starling,display,Mesh)
HX_DECLARE_CLASS2(starling,display,Quad)
HX_DECLARE_CLASS2(starling,events,EventDispatcher)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES HaxegonImage_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HaxegonImage_obj OBJ_;
		HaxegonImage_obj();

	public:
		enum { _hx_ClassId = 0x4819d737 };

		void __construct(::String n);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="haxegon.HaxegonImage")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"haxegon.HaxegonImage"); }
		static hx::ObjectPtr< HaxegonImage_obj > __new(::String n);
		static hx::ObjectPtr< HaxegonImage_obj > __alloc(hx::Ctx *_hx_ctx,::String n);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HaxegonImage_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("HaxegonImage","\x7b","\xbe","\x36","\x05"); }

		void fetchsize();
		::Dynamic fetchsize_dyn();

		 ::starling::display::Image contents;
		::String name;
		int width;
		int height;
};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_HaxegonImage */ 
