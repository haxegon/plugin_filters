// Generated by Haxe 3.4.4
#ifndef INCLUDED_lime_graphics_console_IndexBuffer
#define INCLUDED_lime_graphics_console_IndexBuffer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_6e68e461d021efe4_24_new)
HX_DECLARE_CLASS3(lime,graphics,console,IndexBuffer)

namespace lime{
namespace graphics{
namespace console{


class HXCPP_CLASS_ATTRIBUTES IndexBuffer_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef IndexBuffer_obj OBJ_;
		IndexBuffer_obj();

	public:
		enum { _hx_ClassId = 0x4cb896bb };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.graphics.console.IndexBuffer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.graphics.console.IndexBuffer"); }

		hx::ObjectPtr< IndexBuffer_obj > __new() {
			hx::ObjectPtr< IndexBuffer_obj > __this = new IndexBuffer_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< IndexBuffer_obj > __alloc(hx::Ctx *_hx_ctx) {
			IndexBuffer_obj *__this = (IndexBuffer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IndexBuffer_obj), false, "lime.graphics.console.IndexBuffer"));
			*(void **)__this = IndexBuffer_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_6e68e461d021efe4_24_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~IndexBuffer_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("IndexBuffer","\x92","\xfd","\xd8","\xd9"); }

};

} // end namespace lime
} // end namespace graphics
} // end namespace console

#endif /* INCLUDED_lime_graphics_console_IndexBuffer */ 
