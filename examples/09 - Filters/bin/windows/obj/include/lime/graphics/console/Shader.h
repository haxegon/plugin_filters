// Generated by Haxe 3.4.4
#ifndef INCLUDED_lime_graphics_console_Shader
#define INCLUDED_lime_graphics_console_Shader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_32a2b5d56f659945_20_new)
HX_DECLARE_CLASS3(lime,graphics,console,Shader)

namespace lime{
namespace graphics{
namespace console{


class HXCPP_CLASS_ATTRIBUTES Shader_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Shader_obj OBJ_;
		Shader_obj();

	public:
		enum { _hx_ClassId = 0x7e6e2abc };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.graphics.console.Shader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.graphics.console.Shader"); }

		hx::ObjectPtr< Shader_obj > __new() {
			hx::ObjectPtr< Shader_obj > __this = new Shader_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Shader_obj > __alloc(hx::Ctx *_hx_ctx) {
			Shader_obj *__this = (Shader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Shader_obj), false, "lime.graphics.console.Shader"));
			*(void **)__this = Shader_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_32a2b5d56f659945_20_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Shader_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Shader","\x45","\x33","\xb5","\x51"); }

};

} // end namespace lime
} // end namespace graphics
} // end namespace console

#endif /* INCLUDED_lime_graphics_console_Shader */ 
