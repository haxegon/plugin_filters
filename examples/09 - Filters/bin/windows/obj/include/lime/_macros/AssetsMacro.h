// Generated by Haxe 3.4.4
#ifndef INCLUDED_lime__macros_AssetsMacro
#define INCLUDED_lime__macros_AssetsMacro

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(lime,_macros,AssetsMacro)

namespace lime{
namespace _macros{


class HXCPP_CLASS_ATTRIBUTES AssetsMacro_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef AssetsMacro_obj OBJ_;
		AssetsMacro_obj();

	public:
		enum { _hx_ClassId = 0x1671edc0 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime._macros.AssetsMacro")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime._macros.AssetsMacro"); }

		hx::ObjectPtr< AssetsMacro_obj > __new() {
			hx::ObjectPtr< AssetsMacro_obj > __this = new AssetsMacro_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< AssetsMacro_obj > __alloc(hx::Ctx *_hx_ctx) {
			AssetsMacro_obj *__this = (AssetsMacro_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(AssetsMacro_obj), false, "lime._macros.AssetsMacro"));
			*(void **)__this = AssetsMacro_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~AssetsMacro_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("AssetsMacro","\x69","\x74","\x4e","\xd6"); }

};

} // end namespace lime
} // end namespace _macros

#endif /* INCLUDED_lime__macros_AssetsMacro */ 
