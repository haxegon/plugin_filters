// Generated by Haxe 3.4.4
#ifndef INCLUDED_lime__backend_native__NativeApplication_ClipboardEventInfo
#define INCLUDED_lime__backend_native__NativeApplication_ClipboardEventInfo

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e537199fee37e312_781_new)
HX_DECLARE_CLASS4(lime,_backend,native,_NativeApplication,ClipboardEventInfo)

namespace lime{
namespace _backend{
namespace native{
namespace _NativeApplication{


class HXCPP_CLASS_ATTRIBUTES ClipboardEventInfo_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ClipboardEventInfo_obj OBJ_;
		ClipboardEventInfo_obj();

	public:
		enum { _hx_ClassId = 0x4ed36a2d };

		void __construct( ::Dynamic type);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime._backend.native._NativeApplication.ClipboardEventInfo")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime._backend.native._NativeApplication.ClipboardEventInfo"); }

		hx::ObjectPtr< ClipboardEventInfo_obj > __new( ::Dynamic type) {
			hx::ObjectPtr< ClipboardEventInfo_obj > __this = new ClipboardEventInfo_obj();
			__this->__construct(type);
			return __this;
		}

		static hx::ObjectPtr< ClipboardEventInfo_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic type) {
			ClipboardEventInfo_obj *__this = (ClipboardEventInfo_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ClipboardEventInfo_obj), false, "lime._backend.native._NativeApplication.ClipboardEventInfo"));
			*(void **)__this = ClipboardEventInfo_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_e537199fee37e312_781_new)
HXDLIN( 781)		( ( ::lime::_backend::native::_NativeApplication::ClipboardEventInfo)(__this) )->type = type;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ClipboardEventInfo_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ClipboardEventInfo","\x12","\x75","\xf1","\xb4"); }

		int type;
		 ::lime::_backend::native::_NativeApplication::ClipboardEventInfo clone();
		::Dynamic clone_dyn();

};

} // end namespace lime
} // end namespace _backend
} // end namespace native
} // end namespace _NativeApplication

#endif /* INCLUDED_lime__backend_native__NativeApplication_ClipboardEventInfo */ 
