// Generated by Haxe 3.4.4
#ifndef INCLUDED_lime__backend_native__NativeApplication_TextEventInfo
#define INCLUDED_lime__backend_native__NativeApplication_TextEventInfo

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_d4a11b6fb4b30fe3_1089_new)
HX_DECLARE_CLASS4(lime,_backend,native,_NativeApplication,TextEventInfo)

namespace lime{
namespace _backend{
namespace native{
namespace _NativeApplication{


class HXCPP_CLASS_ATTRIBUTES TextEventInfo_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TextEventInfo_obj OBJ_;
		TextEventInfo_obj();

	public:
		enum { _hx_ClassId = 0x08407934 };

		void __construct( ::Dynamic type,hx::Null< int >  __o_windowID,::String __o_text,hx::Null< int >  __o_start,hx::Null< int >  __o_length);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="lime._backend.native._NativeApplication.TextEventInfo")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"lime._backend.native._NativeApplication.TextEventInfo"); }

		hx::ObjectPtr< TextEventInfo_obj > __new( ::Dynamic type,hx::Null< int >  __o_windowID,::String __o_text,hx::Null< int >  __o_start,hx::Null< int >  __o_length) {
			hx::ObjectPtr< TextEventInfo_obj > __this = new TextEventInfo_obj();
			__this->__construct(type,__o_windowID,__o_text,__o_start,__o_length);
			return __this;
		}

		static hx::ObjectPtr< TextEventInfo_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic type,hx::Null< int >  __o_windowID,::String __o_text,hx::Null< int >  __o_start,hx::Null< int >  __o_length) {
			TextEventInfo_obj *__this = (TextEventInfo_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TextEventInfo_obj), true, "lime._backend.native._NativeApplication.TextEventInfo"));
			*(void **)__this = TextEventInfo_obj::_hx_vtable;
{
int windowID = __o_windowID.Default(0);
::String text = __o_text.Default(HX_HCSTRING("","\x00","\x00","\x00","\x00"));
int start = __o_start.Default(0);
int length = __o_length.Default(0);
            	HX_STACKFRAME(&_hx_pos_d4a11b6fb4b30fe3_1089_new)
HXLINE(1091)		( ( ::lime::_backend::native::_NativeApplication::TextEventInfo)(__this) )->type = type;
HXLINE(1092)		( ( ::lime::_backend::native::_NativeApplication::TextEventInfo)(__this) )->windowID = windowID;
HXLINE(1093)		( ( ::lime::_backend::native::_NativeApplication::TextEventInfo)(__this) )->text = text;
HXLINE(1094)		( ( ::lime::_backend::native::_NativeApplication::TextEventInfo)(__this) )->start = start;
HXLINE(1095)		( ( ::lime::_backend::native::_NativeApplication::TextEventInfo)(__this) )->length = length;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TextEventInfo_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TextEventInfo","\x1b","\x27","\x4b","\xf4"); }

		int id;
		int length;
		int start;
		::String text;
		int type;
		int windowID;
		 ::lime::_backend::native::_NativeApplication::TextEventInfo clone();
		::Dynamic clone_dyn();

};

} // end namespace lime
} // end namespace _backend
} // end namespace native
} // end namespace _NativeApplication

#endif /* INCLUDED_lime__backend_native__NativeApplication_TextEventInfo */ 
