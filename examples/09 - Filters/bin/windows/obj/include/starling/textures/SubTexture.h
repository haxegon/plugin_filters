// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_textures_SubTexture
#define INCLUDED_starling_textures_SubTexture

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_starling_textures_Texture
#include <starling/textures/Texture.h>
#endif
HX_DECLARE_CLASS3(openfl,display3D,textures,TextureBase)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,geom,Matrix)
HX_DECLARE_CLASS2(openfl,geom,Rectangle)
HX_DECLARE_CLASS2(starling,textures,ConcreteTexture)
HX_DECLARE_CLASS2(starling,textures,SubTexture)
HX_DECLARE_CLASS2(starling,textures,Texture)

namespace starling{
namespace textures{


class HXCPP_CLASS_ATTRIBUTES SubTexture_obj : public  ::starling::textures::Texture_obj
{
	public:
		typedef  ::starling::textures::Texture_obj super;
		typedef SubTexture_obj OBJ_;
		SubTexture_obj();

	public:
		enum { _hx_ClassId = 0x22869da3 };

		void __construct( ::starling::textures::Texture parent, ::openfl::geom::Rectangle region,hx::Null< bool >  __o_ownsParent, ::openfl::geom::Rectangle frame,hx::Null< bool >  __o_rotated,hx::Null< Float >  __o_scaleModifier);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="starling.textures.SubTexture")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"starling.textures.SubTexture"); }
		static hx::ObjectPtr< SubTexture_obj > __new( ::starling::textures::Texture parent, ::openfl::geom::Rectangle region,hx::Null< bool >  __o_ownsParent, ::openfl::geom::Rectangle frame,hx::Null< bool >  __o_rotated,hx::Null< Float >  __o_scaleModifier);
		static hx::ObjectPtr< SubTexture_obj > __alloc(hx::Ctx *_hx_ctx, ::starling::textures::Texture parent, ::openfl::geom::Rectangle region,hx::Null< bool >  __o_ownsParent, ::openfl::geom::Rectangle frame,hx::Null< bool >  __o_rotated,hx::Null< Float >  __o_scaleModifier);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SubTexture_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SubTexture","\x5b","\x7b","\xfb","\x11"); }

		 ::starling::textures::Texture _parent;
		bool _ownsParent;
		 ::openfl::geom::Rectangle _region;
		 ::openfl::geom::Rectangle _frame;
		bool _rotated;
		Float _width;
		Float _height;
		Float _scale;
		 ::openfl::geom::Matrix _transformationMatrix;
		 ::openfl::geom::Matrix _transformationMatrixToRoot;
		void setTo( ::starling::textures::Texture parent, ::openfl::geom::Rectangle region,hx::Null< bool >  ownsParent, ::openfl::geom::Rectangle frame,hx::Null< bool >  rotated,hx::Null< Float >  scaleModifier);
		::Dynamic setTo_dyn();

		void updateMatrices();
		::Dynamic updateMatrices_dyn();

		virtual void dispose();

		 ::starling::textures::Texture get_parent();
		::Dynamic get_parent_dyn();

		bool get_ownsParent();
		::Dynamic get_ownsParent_dyn();

		bool get_rotated();
		::Dynamic get_rotated_dyn();

		 ::openfl::geom::Rectangle get_region();
		::Dynamic get_region_dyn();

		 ::openfl::geom::Matrix get_transformationMatrix();

		 ::openfl::geom::Matrix get_transformationMatrixToRoot();

		virtual  ::openfl::display3D::textures::TextureBase get_base();

		virtual  ::starling::textures::ConcreteTexture get_root();

		 ::Dynamic get_format();

		Float get_width();

		Float get_height();

		Float get_nativeWidth();

		Float get_nativeHeight();

		bool get_mipMapping();

		bool get_premultipliedAlpha();

		Float get_scale();

		 ::openfl::geom::Rectangle get_frame();

};

} // end namespace starling
} // end namespace textures

#endif /* INCLUDED_starling_textures_SubTexture */ 
