// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_display_Sprite
#define INCLUDED_starling_display_Sprite

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_starling_display_DisplayObjectContainer
#include <starling/display/DisplayObjectContainer.h>
#endif
HX_DECLARE_CLASS2(starling,display,DisplayObject)
HX_DECLARE_CLASS2(starling,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(starling,display,Sprite)
HX_DECLARE_CLASS2(starling,events,EventDispatcher)

namespace starling{
namespace display{


class HXCPP_CLASS_ATTRIBUTES Sprite_obj : public  ::starling::display::DisplayObjectContainer_obj
{
	public:
		typedef  ::starling::display::DisplayObjectContainer_obj super;
		typedef Sprite_obj OBJ_;
		Sprite_obj();

	public:
		enum { _hx_ClassId = 0x478fd1bb };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="starling.display.Sprite")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"starling.display.Sprite"); }
		static hx::ObjectPtr< Sprite_obj > __new();
		static hx::ObjectPtr< Sprite_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Sprite_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Sprite","\x25","\x50","\x2a","\xf8"); }

};

} // end namespace starling
} // end namespace display

#endif /* INCLUDED_starling_display_Sprite */ 
