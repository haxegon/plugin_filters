// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_text_BitmapDataEx
#define INCLUDED_starling_text_BitmapDataEx

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(starling,text,BitmapDataEx)

namespace starling{
namespace text{


class HXCPP_CLASS_ATTRIBUTES BitmapDataEx_obj : public  ::openfl::display::BitmapData_obj
{
	public:
		typedef  ::openfl::display::BitmapData_obj super;
		typedef BitmapDataEx_obj OBJ_;
		BitmapDataEx_obj();

	public:
		enum { _hx_ClassId = 0x108144c5 };

		void __construct(int width,int height,hx::Null< bool >  __o_transparent,hx::Null< int >  __o_fillColor);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="starling.text.BitmapDataEx")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"starling.text.BitmapDataEx"); }
		static hx::ObjectPtr< BitmapDataEx_obj > __new(int width,int height,hx::Null< bool >  __o_transparent,hx::Null< int >  __o_fillColor);
		static hx::ObjectPtr< BitmapDataEx_obj > __alloc(hx::Ctx *_hx_ctx,int width,int height,hx::Null< bool >  __o_transparent,hx::Null< int >  __o_fillColor);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BitmapDataEx_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BitmapDataEx","\xac","\xde","\xb6","\xf5"); }

		Float _scale;
		Float get_scale();
		::Dynamic get_scale_dyn();

		Float set_scale(Float value);
		::Dynamic set_scale_dyn();

};

} // end namespace starling
} // end namespace text

#endif /* INCLUDED_starling_text_BitmapDataEx */ 
