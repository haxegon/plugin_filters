// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_text_TextFieldAutoSize
#define INCLUDED_starling_text_TextFieldAutoSize

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(starling,text,TextFieldAutoSize)

namespace starling{
namespace text{


class HXCPP_CLASS_ATTRIBUTES TextFieldAutoSize_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TextFieldAutoSize_obj OBJ_;
		TextFieldAutoSize_obj();

	public:
		enum { _hx_ClassId = 0x1b796c00 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="starling.text.TextFieldAutoSize")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"starling.text.TextFieldAutoSize"); }

		hx::ObjectPtr< TextFieldAutoSize_obj > __new() {
			hx::ObjectPtr< TextFieldAutoSize_obj > __this = new TextFieldAutoSize_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TextFieldAutoSize_obj > __alloc(hx::Ctx *_hx_ctx) {
			TextFieldAutoSize_obj *__this = (TextFieldAutoSize_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TextFieldAutoSize_obj), false, "starling.text.TextFieldAutoSize"));
			*(void **)__this = TextFieldAutoSize_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TextFieldAutoSize_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TextFieldAutoSize","\x9d","\x45","\x47","\x0b"); }

		static void __boot();
		static ::String NONE;
		static ::String HORIZONTAL;
		static ::String VERTICAL;
		static ::String BOTH_DIRECTIONS;
};

} // end namespace starling
} // end namespace text

#endif /* INCLUDED_starling_text_TextFieldAutoSize */ 
