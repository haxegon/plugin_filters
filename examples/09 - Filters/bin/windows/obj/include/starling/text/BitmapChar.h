// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_text_BitmapChar
#define INCLUDED_starling_text_BitmapChar

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(starling,display,DisplayObject)
HX_DECLARE_CLASS2(starling,display,Image)
HX_DECLARE_CLASS2(starling,display,Mesh)
HX_DECLARE_CLASS2(starling,display,Quad)
HX_DECLARE_CLASS2(starling,events,EventDispatcher)
HX_DECLARE_CLASS2(starling,text,BitmapChar)
HX_DECLARE_CLASS2(starling,textures,Texture)

namespace starling{
namespace text{


class HXCPP_CLASS_ATTRIBUTES BitmapChar_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BitmapChar_obj OBJ_;
		BitmapChar_obj();

	public:
		enum { _hx_ClassId = 0x0f2052fa };

		void __construct(int id, ::starling::textures::Texture texture,Float xOffset,Float yOffset,Float xAdvance);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="starling.text.BitmapChar")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"starling.text.BitmapChar"); }
		static hx::ObjectPtr< BitmapChar_obj > __new(int id, ::starling::textures::Texture texture,Float xOffset,Float yOffset,Float xAdvance);
		static hx::ObjectPtr< BitmapChar_obj > __alloc(hx::Ctx *_hx_ctx,int id, ::starling::textures::Texture texture,Float xOffset,Float yOffset,Float xAdvance);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BitmapChar_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BitmapChar","\x85","\xc2","\xcd","\x29"); }

		 ::starling::textures::Texture _hx___texture;
		int _hx___charID;
		Float _hx___xOffset;
		Float _hx___yOffset;
		Float _hx___xAdvance;
		 ::haxe::ds::IntMap _hx___kernings;
		void addKerning(int charID,Float amount);
		::Dynamic addKerning_dyn();

		Float getKerning(int charID);
		::Dynamic getKerning_dyn();

		 ::starling::display::Image createImage();
		::Dynamic createImage_dyn();

		int get_charID();
		::Dynamic get_charID_dyn();

		Float get_xOffset();
		::Dynamic get_xOffset_dyn();

		Float get_yOffset();
		::Dynamic get_yOffset_dyn();

		Float get_xAdvance();
		::Dynamic get_xAdvance_dyn();

		 ::starling::textures::Texture get_texture();
		::Dynamic get_texture_dyn();

		Float get_width();
		::Dynamic get_width_dyn();

		Float get_height();
		::Dynamic get_height_dyn();

};

} // end namespace starling
} // end namespace text

#endif /* INCLUDED_starling_text_BitmapChar */ 
