// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_events_TouchPhase
#define INCLUDED_starling_events_TouchPhase

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(starling,events,TouchPhase)

namespace starling{
namespace events{


class HXCPP_CLASS_ATTRIBUTES TouchPhase_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TouchPhase_obj OBJ_;
		TouchPhase_obj();

	public:
		enum { _hx_ClassId = 0x2f11a3c5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="starling.events.TouchPhase")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"starling.events.TouchPhase"); }

		hx::ObjectPtr< TouchPhase_obj > __new() {
			hx::ObjectPtr< TouchPhase_obj > __this = new TouchPhase_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TouchPhase_obj > __alloc(hx::Ctx *_hx_ctx) {
			TouchPhase_obj *__this = (TouchPhase_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TouchPhase_obj), false, "starling.events.TouchPhase"));
			*(void **)__this = TouchPhase_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TouchPhase_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TouchPhase","\x1c","\x10","\x2b","\xb2"); }

		static void __boot();
		static ::String HOVER;
		static ::String BEGAN;
		static ::String MOVED;
		static ::String STATIONARY;
		static ::String ENDED;
};

} // end namespace starling
} // end namespace events

#endif /* INCLUDED_starling_events_TouchPhase */ 
