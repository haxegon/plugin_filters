// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_events_ResizeEvent
#define INCLUDED_starling_events_ResizeEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_starling_events_Event
#include <starling/events/Event.h>
#endif
HX_DECLARE_CLASS2(starling,events,Event)
HX_DECLARE_CLASS2(starling,events,ResizeEvent)

namespace starling{
namespace events{


class HXCPP_CLASS_ATTRIBUTES ResizeEvent_obj : public  ::starling::events::Event_obj
{
	public:
		typedef  ::starling::events::Event_obj super;
		typedef ResizeEvent_obj OBJ_;
		ResizeEvent_obj();

	public:
		enum { _hx_ClassId = 0x25326f65 };

		void __construct(::String type,int width,int height,hx::Null< bool >  __o_bubbles);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="starling.events.ResizeEvent")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"starling.events.ResizeEvent"); }
		static hx::ObjectPtr< ResizeEvent_obj > __new(::String type,int width,int height,hx::Null< bool >  __o_bubbles);
		static hx::ObjectPtr< ResizeEvent_obj > __alloc(hx::Ctx *_hx_ctx,::String type,int width,int height,hx::Null< bool >  __o_bubbles);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ResizeEvent_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ResizeEvent","\x66","\xe1","\xfa","\x98"); }

		static void __boot();
		static ::String RESIZE;
		int get_width();
		::Dynamic get_width_dyn();

		int get_height();
		::Dynamic get_height_dyn();

};

} // end namespace starling
} // end namespace events

#endif /* INCLUDED_starling_events_ResizeEvent */ 
