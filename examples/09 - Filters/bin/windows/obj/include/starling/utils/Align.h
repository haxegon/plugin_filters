// Generated by Haxe 3.4.4
#ifndef INCLUDED_starling_utils_Align
#define INCLUDED_starling_utils_Align

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(starling,utils,Align)

namespace starling{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES Align_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Align_obj OBJ_;
		Align_obj();

	public:
		enum { _hx_ClassId = 0x7666775c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="starling.utils.Align")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"starling.utils.Align"); }

		hx::ObjectPtr< Align_obj > __new() {
			hx::ObjectPtr< Align_obj > __this = new Align_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Align_obj > __alloc(hx::Ctx *_hx_ctx) {
			Align_obj *__this = (Align_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Align_obj), false, "starling.utils.Align"));
			*(void **)__this = Align_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Align_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Align","\xa5","\xc6","\xbe","\xb4"); }

		static void __boot();
		static ::String LEFT;
		static ::String RIGHT;
		static ::String TOP;
		static ::String BOTTOM;
		static ::String CENTER;
		static bool isValid(::String align);
		static ::Dynamic isValid_dyn();

		static bool isValidHorizontal(::String align);
		static ::Dynamic isValidHorizontal_dyn();

		static bool isValidVertical(::String align);
		static ::Dynamic isValidVertical_dyn();

		void Align();
		::Dynamic Align_dyn();

};

} // end namespace starling
} // end namespace utils

#endif /* INCLUDED_starling_utils_Align */ 
